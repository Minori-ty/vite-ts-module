{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":8043,"endOffset":8116,"count":2}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":8122,"endOffset":8173,"count":16}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":9812,"endOffset":9881,"count":2}],"isBlockCoverage":true}]},{"scriptId":"8","url":"node:internal/per_context/messageport","functions":[{"functionName":"exports.emitMessage","ranges":[{"startOffset":425,"endOffset":1031,"count":2},{"startOffset":710,"endOffset":1028,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":1}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/validators","functions":[{"functionName":"validateString","ranges":[{"startOffset":3491,"endOffset":3626,"count":1},{"startOffset":3569,"endOffset":3623,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7016,"endOffset":7120,"count":2},{"startOffset":7076,"endOffset":7117,"count":0}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14721,"endOffset":14793,"count":2}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15182,"endOffset":15478,"count":2},{"startOffset":15442,"endOffset":15477,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16091,"endOffset":16156,"count":6}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16160,"endOffset":16221,"count":1}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16225,"endOffset":16282,"count":2}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16349,"endOffset":16412,"count":1}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16924,"endOffset":17105,"count":1},{"startOffset":17076,"endOffset":17102,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17111,"endOffset":17236,"count":1},{"startOffset":17177,"endOffset":17202,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17598,"endOffset":18178,"count":1},{"startOffset":17822,"endOffset":17872,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18247,"endOffset":18873,"count":1},{"startOffset":18365,"endOffset":18378,"count":0},{"startOffset":18459,"endOffset":18568,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/url","functions":[{"functionName":"isURLInstance","ranges":[{"startOffset":42807,"endOffset":42928,"count":1},{"startOffset":42901,"endOffset":42924,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":42932,"endOffset":43081,"count":1},{"startOffset":43038,"endOffset":43080,"count":0}],"isBlockCoverage":true}]},{"scriptId":"35","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":1770,"endOffset":1876,"count":69},{"startOffset":1841,"endOffset":1872,"count":63}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1963,"endOffset":2136,"count":2},{"startOffset":2065,"endOffset":2132,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2202,"endOffset":4212,"count":1},{"startOffset":2425,"endOffset":4194,"count":67},{"startOffset":2460,"endOffset":2502,"count":66},{"startOffset":2502,"endOffset":2597,"count":1},{"startOffset":2553,"endOffset":2597,"count":0},{"startOffset":2597,"endOffset":2632,"count":66},{"startOffset":2632,"endOffset":4090,"count":6},{"startOffset":2680,"endOffset":2707,"count":0},{"startOffset":2729,"endOffset":3793,"count":0},{"startOffset":3841,"endOffset":3910,"count":5},{"startOffset":3910,"endOffset":3987,"count":1},{"startOffset":4090,"endOffset":4189,"count":60},{"startOffset":4118,"endOffset":4132,"count":3},{"startOffset":4134,"endOffset":4157,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4868,"endOffset":9786,"count":1},{"startOffset":5200,"endOffset":5233,"count":0},{"startOffset":5242,"endOffset":6207,"count":0},{"startOffset":6431,"endOffset":6596,"count":0},{"startOffset":6629,"endOffset":8151,"count":0},{"startOffset":8691,"endOffset":8914,"count":0},{"startOffset":9009,"endOffset":9077,"count":0},{"startOffset":9730,"endOffset":9780,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":20071,"endOffset":21202,"count":1},{"startOffset":20211,"endOffset":20223,"count":0},{"startOffset":20317,"endOffset":20329,"count":0},{"startOffset":20409,"endOffset":20828,"count":0},{"startOffset":21177,"endOffset":21201,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:internal/event_target","functions":[{"functionName":"","ranges":[{"startOffset":14949,"endOffset":16981,"count":2},{"startOffset":15257,"endOffset":15336,"count":0},{"startOffset":15438,"endOffset":15542,"count":0},{"startOffset":15666,"endOffset":15675,"count":0},{"startOffset":15824,"endOffset":16027,"count":0},{"startOffset":16053,"endOffset":16228,"count":0},{"startOffset":16344,"endOffset":16394,"count":0},{"startOffset":16434,"endOffset":16471,"count":0},{"startOffset":16647,"endOffset":16707,"count":0},{"startOffset":16811,"endOffset":16870,"count":0},{"startOffset":16942,"endOffset":16976,"count":0}],"isBlockCoverage":true},{"functionName":"createEvent","ranges":[{"startOffset":15018,"endOffset":15225,"count":0}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":22192,"endOffset":22515,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22341,"endOffset":22505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"40","url":"node:internal/util/debuglog","functions":[{"functionName":"noop","ranges":[{"startOffset":1465,"endOffset":1473,"count":4}],"isBlockCoverage":true}]},{"scriptId":"56","url":"node:internal/streams/writable","functions":[{"functionName":"get","ranges":[{"startOffset":24963,"endOffset":25042,"count":2}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:timers","functions":[{"functionName":"unenroll","ranges":[{"startOffset":2409,"endOffset":3628,"count":1},{"startOffset":2464,"endOffset":2471,"count":0},{"startOffset":2536,"endOffset":2582,"count":0},{"startOffset":2676,"endOffset":2714,"count":0},{"startOffset":2721,"endOffset":2756,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":4357,"endOffset":5030,"count":2},{"startOffset":4518,"endOffset":4525,"count":0},{"startOffset":4558,"endOffset":4601,"count":0},{"startOffset":4607,"endOffset":4656,"count":0},{"startOffset":4662,"endOffset":4889,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":5346,"endOffset":5725,"count":2},{"startOffset":5411,"endOffset":5544,"count":1},{"startOffset":5546,"endOffset":5722,"count":0}],"isBlockCoverage":true}]},{"scriptId":"62","url":"node:internal/linkedlist","functions":[{"functionName":"peek","ranges":[{"startOffset":126,"endOffset":221,"count":2},{"startOffset":180,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":259,"endOffset":497,"count":4},{"startOffset":306,"endOffset":360,"count":3},{"startOffset":386,"endOffset":440,"count":3}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":556,"endOffset":1021,"count":2},{"startOffset":608,"endOffset":625,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":1025,"endOffset":1087,"count":1}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/timers","functions":[{"functionName":"initAsyncResource","ranges":[{"startOffset":5555,"endOffset":5839,"count":2},{"startOffset":5786,"endOffset":5836,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5928,"endOffset":6955,"count":2},{"startOffset":6079,"endOffset":6423,"count":0},{"startOffset":6771,"endOffset":6778,"count":0}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9429,"endOffset":9508,"count":2},{"startOffset":9484,"endOffset":9505,"count":0}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9512,"endOffset":9592,"count":1},{"startOffset":9567,"endOffset":9589,"count":0}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":10718,"endOffset":11389,"count":2},{"startOffset":11048,"endOffset":11359,"count":0}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":12482,"endOffset":12555,"count":1}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14747,"endOffset":15239,"count":1},{"startOffset":14943,"endOffset":15219,"count":2},{"startOffset":14975,"endOffset":15077,"count":1},{"startOffset":15054,"endOffset":15067,"count":0},{"startOffset":15077,"endOffset":15117,"count":1},{"startOffset":15117,"endOffset":15132,"count":0},{"startOffset":15132,"endOffset":15219,"count":1},{"startOffset":15219,"endOffset":15238,"count":0}],"isBlockCoverage":true},{"functionName":"listOnTimeout","ranges":[{"startOffset":15245,"endOffset":17791,"count":1},{"startOffset":15671,"endOffset":15905,"count":0},{"startOffset":15948,"endOffset":15963,"count":0},{"startOffset":16174,"endOffset":16414,"count":0},{"startOffset":16539,"endOffset":16561,"count":0},{"startOffset":16680,"endOffset":16750,"count":0},{"startOffset":16797,"endOffset":16825,"count":0},{"startOffset":16827,"endOffset":16939,"count":0},{"startOffset":17008,"endOffset":17186,"count":0},{"startOffset":17712,"endOffset":17786,"count":0}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/priority_queue","functions":[{"functionName":"peek","ranges":[{"startOffset":1092,"endOffset":1133,"count":2}],"isBlockCoverage":true},{"functionName":"percolateDown","ranges":[{"startOffset":1139,"endOffset":1829,"count":1},{"startOffset":1364,"endOffset":1734,"count":0}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2350,"endOffset":2695,"count":1},{"startOffset":2553,"endOffset":2604,"count":0},{"startOffset":2615,"endOffset":2637,"count":0}],"isBlockCoverage":true}]},{"scriptId":"77","url":"node:fs","functions":[{"functionName":"existsSync","ranges":[{"startOffset":7921,"endOffset":8469,"count":1},{"startOffset":7999,"endOffset":8030,"count":0},{"startOffset":8374,"endOffset":8429,"count":0}],"isBlockCoverage":true}]},{"scriptId":"78","url":"node:internal/fs/utils","functions":[{"functionName":"","ranges":[{"startOffset":8925,"endOffset":9534,"count":1},{"startOffset":9160,"endOffset":9180,"count":0},{"startOffset":9251,"endOffset":9320,"count":0},{"startOffset":9341,"endOffset":9533,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18808,"endOffset":19088,"count":1},{"startOffset":18871,"endOffset":18893,"count":0},{"startOffset":18895,"endOffset":18983,"count":0},{"startOffset":19063,"endOffset":19085,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19135,"endOffset":19274,"count":1}],"isBlockCoverage":true}]},{"scriptId":"88","url":"node:internal/bootstrap/switches/is_not_main_thread","functions":[{"functionName":"lazyWorkerStdio","ranges":[{"startOffset":913,"endOffset":1023,"count":2},{"startOffset":963,"endOffset":997,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":1027,"endOffset":1084,"count":1}],"isBlockCoverage":true},{"functionName":"getStderr","ranges":[{"startOffset":1088,"endOffset":1145,"count":1}],"isBlockCoverage":true}]},{"scriptId":"93","url":"node:internal/bootstrap/pre_execution","functions":[{"functionName":"get","ranges":[{"startOffset":10395,"endOffset":10433,"count":2}],"isBlockCoverage":true}]},{"scriptId":"99","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":269,"endOffset":450,"count":56},{"startOffset":435,"endOffset":446,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":6504,"endOffset":6764,"count":1},{"startOffset":6628,"endOffset":6651,"count":0},{"startOffset":6717,"endOffset":6746,"count":0}],"isBlockCoverage":true},{"functionName":"appendCJSCache","ranges":[{"startOffset":6768,"endOffset":7065,"count":1},{"startOffset":6841,"endOffset":7062,"count":14}],"isBlockCoverage":true}]},{"scriptId":"100","url":"node:internal/util/iterable_weak_map","functions":[{"functionName":"","ranges":[{"startOffset":1447,"endOffset":1888,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1542,"endOffset":1801,"count":15},{"startOffset":1613,"endOffset":1627,"count":1},{"startOffset":1627,"endOffset":1693,"count":14},{"startOffset":1693,"endOffset":1707,"count":0},{"startOffset":1707,"endOffset":1800,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1826,"endOffset":1861,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/tinypool@0.1.3/node_modules/tinypool/dist/esm/worker.js","functions":[{"functionName":"atomicsWaitLoop","ranges":[{"startOffset":2034,"endOffset":2432,"count":1},{"startOffset":2111,"endOffset":2430,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2556,"endOffset":3590,"count":0},{"startOffset":2837,"endOffset":2867,"count":1},{"startOffset":2976,"endOffset":3102,"count":1},{"startOffset":3186,"endOffset":3232,"count":1},{"startOffset":3424,"endOffset":3589,"count":1}],"isBlockCoverage":true}]},{"scriptId":"120","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/tinypool@0.1.3/node_modules/tinypool/dist/esm/chunk-MHWOF4OL.js","functions":[{"functionName":"isTransferable","ranges":[{"startOffset":1489,"endOffset":1621,"count":1},{"startOffset":1545,"endOffset":1573,"count":0},{"startOffset":1574,"endOffset":1599,"count":0},{"startOffset":1600,"endOffset":1618,"count":0}],"isBlockCoverage":true},{"functionName":"isMovable","ranges":[{"startOffset":1622,"endOffset":1711,"count":1},{"startOffset":1681,"endOffset":1708,"count":0}],"isBlockCoverage":true}]},{"scriptId":"122","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/vitest@0.12.8_b2e0ab71954456f993f394e3885b614a/node_modules/vitest/dist/worker.js","functions":[{"functionName":"post","ranges":[{"startOffset":2069,"endOffset":2115,"count":2}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/vitest@0.12.8_b2e0ab71954456f993f394e3885b614a/node_modules/vitest/dist/chunk-vite-node-utils.46e2a803.js","functions":[{"functionName":"isPrimitive","ranges":[{"startOffset":244227,"endOffset":244280,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":251516,"endOffset":251817,"count":1},{"startOffset":251648,"endOffset":251662,"count":0},{"startOffset":251682,"endOffset":251702,"count":0},{"startOffset":251743,"endOffset":251794,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":252351,"endOffset":252359,"count":2}],"isBlockCoverage":true},{"functionName":"deserialize","ranges":[{"startOffset":252379,"endOffset":252387,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":252519,"endOffset":253292,"count":2},{"startOffset":252680,"endOffset":252754,"count":0}],"isBlockCoverage":true},{"functionName":"sendEvent","ranges":[{"startOffset":252560,"endOffset":252639,"count":0}],"isBlockCoverage":true},{"functionName":"sendCall","ranges":[{"startOffset":252778,"endOffset":253226,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":252820,"endOffset":253216,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":253047,"endOffset":253183,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":253304,"endOffset":253918,"count":2},{"startOffset":253390,"endOffset":253677,"count":0},{"startOffset":253807,"endOffset":253830,"count":0}],"isBlockCoverage":true},{"functionName":"nanoid","ranges":[{"startOffset":254025,"endOffset":254160,"count":2},{"startOffset":254103,"endOffset":254145,"count":42}],"isBlockCoverage":true}]},{"scriptId":"228","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/vitest@0.12.8_b2e0ab71954456f993f394e3885b614a/node_modules/vitest/dist/vendor-entry.ca05c118.js","functions":[{"functionName":"teardown","ranges":[{"startOffset":10325,"endOffset":10457,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10366,"endOffset":10394,"count":314}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10423,"endOffset":10447,"count":1}],"isBlockCoverage":true},{"functionName":"withEnv","ranges":[{"startOffset":15027,"endOffset":15217,"count":0},{"startOffset":15161,"endOffset":15215,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24821,"endOffset":24872,"count":1}],"isBlockCoverage":true},{"functionName":"sendTasksUpdate","ranges":[{"startOffset":24881,"endOffset":25111,"count":2},{"startOffset":24998,"endOffset":25109,"count":1}],"isBlockCoverage":true},{"functionName":"startTests","ranges":[{"startOffset":29754,"endOffset":30072,"count":0},{"startOffset":30043,"endOffset":30071,"count":1}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":30392,"endOffset":31632,"count":0},{"startOffset":31182,"endOffset":31630,"count":1},{"startOffset":31273,"endOffset":31290,"count":0},{"startOffset":31307,"endOffset":31370,"count":0},{"startOffset":31630,"endOffset":31631,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31372,"endOffset":31624,"count":0},{"startOffset":31571,"endOffset":31623,"count":1}],"isBlockCoverage":true}]},{"scriptId":"229","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/vitest@0.12.8_b2e0ab71954456f993f394e3885b614a/node_modules/vitest/dist/chunk-utils-global.2fab7e5c.js","functions":[{"functionName":"getWorkerState","ranges":[{"startOffset":8136,"endOffset":8204,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16610,"endOffset":16640,"count":2}],"isBlockCoverage":true}]},{"scriptId":"230","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/vitest@0.12.8_b2e0ab71954456f993f394e3885b614a/node_modules/vitest/dist/chunk-runtime-chain.5021a6b6.js","functions":[{"functionName":"save","ranges":[{"startOffset":26931,"endOffset":27769,"count":1},{"startOffset":27265,"endOffset":27276,"count":0},{"startOffset":27278,"endOffset":27503,"count":0},{"startOffset":27599,"endOffset":27746,"count":0}],"isBlockCoverage":true},{"functionName":"getUncheckedCount","ranges":[{"startOffset":27772,"endOffset":27839,"count":1}],"isBlockCoverage":true},{"functionName":"getUncheckedKeys","ranges":[{"startOffset":27842,"endOffset":27910,"count":1}],"isBlockCoverage":true},{"functionName":"pack","ranges":[{"startOffset":30255,"endOffset":31011,"count":1},{"startOffset":30611,"endOffset":30638,"count":0},{"startOffset":30926,"endOffset":30929,"count":0}],"isBlockCoverage":true},{"functionName":"saveCurrent","ranges":[{"startOffset":33263,"endOffset":33475,"count":1},{"startOffset":33320,"endOffset":33327,"count":0}],"isBlockCoverage":true},{"functionName":"getSnapshotClient","ranges":[{"startOffset":33543,"endOffset":33645,"count":1},{"startOffset":33594,"endOffset":33625,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":167595,"endOffset":167628,"count":1}],"isBlockCoverage":true}]},{"scriptId":"274","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/vitest@0.12.8_b2e0ab71954456f993f394e3885b614a/node_modules/vitest/dist/chunk-runtime-rpc.47bae3f9.js","functions":[{"functionName":"rpc","ranges":[{"startOffset":422,"endOffset":471,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":564,"endOffset":583,"count":2}],"isBlockCoverage":true}]},{"scriptId":"275","url":"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/vitest@0.12.8_b2e0ab71954456f993f394e3885b614a/node_modules/vitest/dist/chunk-utils-timers.da6ac0a6.js","functions":[{"functionName":"get","ranges":[{"startOffset":239401,"endOffset":239429,"count":2}],"isBlockCoverage":true}]}],"timestamp":233552.225366,"source-map-cache":{"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/vite@2.9.9_sass@1.47.0/node_modules/vite/dist/node/chunks/dep-59dc6e00.js":{"lineLengths":[13,0,25,29,34,35,32,37,34,35,37,31,35,37,39,36,29,37,32,35,37,32,33,44,45,35,0,110,0,31,33,29,9,20,15,3,2,18,10,1,0,59,57,63,75,77,73,77,77,77,77,73,69,77,77,63,77,73,73,77,55,77,77,69,0,192,0,38,99,1,0,35,28,64,38,48,43,20,21,16,4,5,4,10,1,0,31,0,30,0,22,71,33,37,33,51,23,0,15,33,11,26,49,15,63,26,3,0,55,50,50,36,87,2,0,53,27,53,78,77,61,64,62,61,68,61,59,61,62,60,63,60,61,60,63,61,63,64,62,65,62,63,3,0,36,47,0,34,0,26,0,30,0,3,11,3,0,15,19,19,19,16,23,0,3,35,2,11,2,39,2,29,28,78,26,14,3,0,35,26,24,44,24,50,59,3,18,61,25,4,2,0,3,49,2,22,19,15,3,0,23,20,25,11,3,150,7,4,15,11,3,31,46,17,17,16,15,14,13,21,17,16,13,19,16,15,13,21,17,16,15,14,13,21,19,18,16,15,13,21,19,18,16,15,13,21,24,23,17,16,14,15,12,23,3,1,0,3,25,2,21,19,15,3,0,25,27,21,38,3,21,38,3,21,38,3,21,38,3,19,1,0,3,24,2,21,19,15,3,0,24,27,21,43,3,21,44,3,21,46,3,21,46,3,20,1,0,3,24,3,0,39,34,65,1,0,3,64,32,3,0,21,33,35,29,31,29,31,29,31,0,34,30,4,0,4,60,3,0,24,24,0,4,75,2,78,3,29,0,4,40,86,69,15,3,34,15,0,46,57,41,3,0,72,2,39,0,4,48,2,28,21,14,3,34,15,28,22,19,0,27,15,24,11,4,0,22,0,26,35,40,18,24,20,19,0,41,0,37,42,23,4,0,44,17,66,71,25,16,5,12,53,42,29,39,0,78,27,13,5,17,6,0,50,43,0,45,27,3,0,30,44,51,24,99,0,43,20,23,15,34,27,5,53,46,51,5,0,24,5,14,23,4,5,0,58,47,27,3,0,15,2,0,40,114,26,18,2,0,4,61,38,2,29,14,3,30,31,38,0,25,25,0,8,83,27,0,29,19,27,13,4,0,47,0,31,72,11,63,4,3,2,0,4,24,2,30,14,3,21,22,41,74,14,25,20,2,0,4,67,2,23,20,14,3,25,38,15,3,0,8,10,0,61,41,17,4,3,0,61,41,16,4,3,0,15,2,0,4,30,2,25,29,15,3,31,26,46,28,2,0,4,16,2,21,18,15,3,23,29,35,3,13,2,0,4,53,52,3,21,152,2,0,40,0,20,1,0,21,0,24,0,29,3,55,3,0,32,20,20,30,33,26,20,0,15,16,17,153,3,3,5,0,3,10,3,0,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,2,0,3,62,60,38,2,74,3,0,38,22,77,75,14,120,14,2,0,53,131,15,2,0,57,93,157,57,136,23,80,156,69,125,1,0,3,37,2,14,3,0,27,41,18,34,11,34,43,0,23,9,2,0,34,40,0,67,65,55,15,15,42,23,10,3,10,23,45,44,17,3,4,0,26,1,0,3,44,50,50,20,2,14,3,57,0,3,21,2,29,15,3,27,6,19,48,10,39,3,18,12,44,2,1,0,3,21,2,64,15,3,17,7,6,39,18,12,44,2,0,71,64,24,2,0,10,1,0,3,52,2,42,44,32,2,25,15,3,0,25,6,105,61,22,18,12,44,2,1,0,35,0,36,0,3,76,3,0,29,6,27,18,56,2,2,33,0,27,0,3,23,3,0,29,32,35,0,3,51,3,0,20,18,32,20,20,30,33,10,136,2,0,3,10,3,0,36,0,5,108,62,49,0,75,20,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,4,2,17,83,1,0,3,76,2,78,3,0,62,29,25,14,17,15,16,35,26,5,0,37,28,44,13,53,14,29,13,9,20,2,0,17,12,7,0,3,58,3,0,22,41,39,32,1,0,3,43,2,14,3,0,27,43,0,17,23,58,54,0,61,81,9,45,2,1,0,20,36,12,2,39,1,0,3,77,3,0,23,58,1,0,3,21,2,29,15,3,27,18,33,9,77,55,27,2,1,0,3,21,2,64,15,3,0,17,26,1,0,3,36,2,63,49,3,0,22,24,0,47,40,60,2,1,0,35,0,36,0,3,52,3,0,29,42,41,14,25,13,2,0,3,65,3,0,29,42,42,2,27,0,3,72,22,3,0,114,35,8,32,1,0,27,0,29,13,18,12,2,30,11,10,10,11,11,11,2,43,46,66,3,78,3,26,3,71,3,32,3,77,63,84,79,37,80,85,81,62,3,40,43,37,51,68,51,62,55,54,73,68,27,13,10,12,10,10,10,11,11,12,10,11,10,10,10,11,10,12,13,10,10,10,12,11,18,10,9,2,90,45,0,17,21,84,59,65,42,36,27,21,1,45,45,23,35,11,25,84,38,14,9,11,25,29,54,55,17,27,14,10,27,36,23,18,22,20,43,41,26,16,9,35,35,24,27,26,31,22,16,9,14,76,33,30,31,26,48,33,25,13,72,71,73,48,63,25,13,66,69,9,5,16,19,23,19,1,49,18,18,20,8,45,37,41,19,27,35,17,23,51,5,22,15,1,39,29,21,37,39,21,16,1,21,32,1,33,23,1,28,36,35,16,46,32,20,39,35,9,30,21,21,47,36,82,32,40,22,35,86,37,25,82,81,83,37,25,76,9,5,43,1,35,33,19,48,18,16,1,55,28,30,20,47,8,31,19,20,26,40,22,15,1,0,44,37,3,30,40,45,23,36,36,3,76,31,35,1,37,34,1,32,33,1,34,39,12,25,29,23,29,30,28,6,1,28,37,54,24,19,5,32,63,24,22,19,5,32,64,24,22,32,19,5,35,1,34,96,52,29,20,40,36,1,32,101,26,15,26,101,13,27,29,5,10,82,59,5,71,41,1,3,92,62,3,31,33,39,97,36,20,100,96,21,101,97,89,33,45,32,92,21,36,21,9,82,33,57,26,21,100,70,29,27,40,27,26,13,36,108,97,42,13,21,9,104,45,34,19,5,18,39,32,5,63,20,5,20,1,3,59,3,33,24,18,34,93,30,41,36,56,54,90,36,36,36,9,33,5,25,102,27,42,39,18,23,104,100,59,61,74,5,93,33,24,75,73,1,0,33,68,75,130,36,20,34,1,0,3,63,3,30,14,18,40,36,1,0,17,24,22,24,22,0,37,63,42,24,102,64,15,36,100,55,5,20,1,51,51,35,21,5,27,1,25,43,52,25,9,5,16,1,36,15,28,37,1,31,33,1,0,18,3,77,96,97,18,2,8,24,20,78,2,26,38,38,6,3,52,25,46,51,24,25,23,9,22,26,9,14,27,9,5,18,19,1,46,64,43,18,5,17,1,46,51,43,18,5,17,1,26,12,20,23,22,6,1,3,96,83,3,61,53,16,35,26,36,79,29,9,35,72,51,9,14,29,9,5,24,30,73,1,0,48,17,15,17,15,3,15,15,17,3,78,98,29,31,3,91,3,20,3,93,80,3,17,3,92,97,24,3,26,16,30,44,36,40,49,54,23,58,85,31,25,27,37,31,45,35,76,80,9,14,63,9,36,43,37,38,9,14,38,58,9,5,1,8,32,71,6,43,45,84,81,35,24,105,6,62,15,21,43,23,45,45,84,81,35,44,122,28,44,32,44,47,16,60,43,43,76,10,6,5,67,67,16,96,5,40,16,50,20,27,1,0,3,87,3,8,3,75,47,3,8,3,96,43,2,97,97,34,3,16,19,44,24,5,1,8,48,28,78,39,32,25,52,52,6,5,0,3,95,48,3,15,3,65,3,21,3,100,37,3,15,3,100,37,3,15,3,46,3,18,44,37,39,34,28,25,37,5,1,8,87,112,50,29,36,63,44,9,50,24,83,66,59,51,48,33,6,50,75,55,6,27,130,16,23,17,31,48,35,27,21,10,6,27,40,99,6,5,37,52,25,5,27,1,44,28,51,32,31,25,21,25,18,44,22,25,20,18,5,17,1,26,45,18,19,38,23,17,33,18,19,33,18,19,33,18,19,23,17,34,1,27,17,1,38,21,15,48,32,5,25,1,0,28,17,17,15,15,18,2,25,48,12,12,16,15,16,6,1,3,99,44,3,34,42,1,3,99,48,3,42,56,1,3,90,64,3,30,56,47,32,46,51,41,30,34,36,51,40,38,44,102,33,39,55,128,102,62,35,29,13,84,53,67,98,25,13,34,38,32,107,67,32,55,9,5,15,1,3,95,63,3,58,22,86,5,59,79,24,20,94,25,29,34,143,1,0,25,29,21,19,1,3,77,75,42,2,75,79,76,71,26,3,44,64,27,43,41,92,89,9,5,43,48,42,5,16,1,56,52,36,61,100,102,100,37,21,21,18,37,31,10,77,79,50,40,93,22,83,51,96,98,60,106,53,7,36,1,0,3,76,18,3,19,31,80,80,29,37,31,41,35,38,53,9,5,16,36,5,1,0,3,77,76,2,79,77,73,26,2,75,29,2,73,25,3,44,111,51,54,1,0,21,33,1,68,68,25,82,1,82,60,148,28,35,20,26,19,18,17,17,24,23,22,17,22,17,10,3,24,52,1,45,126,1,41,25,5,54,1,9,56,74,38,16,18,63,38,75,7,1,3,62,33,3,67,56,9,33,66,9,5,13,19,1,21,47,34,50,34,40,84,30,50,19,9,110,19,9,26,6,1,34,47,106,5,48,110,26,5,84,1,52,63,29,30,73,1,27,95,60,16,23,1,29,39,1,3,35,2,83,2,40,41,43,3,39,29,24,5,35,83,1,35,60,1,25,23,71,37,52,31,47,45,46,69,30,24,33,20,5,60,20,5,17,2,40,46,49,72,43,83,60,30,61,5,17,1,46,26,14,20,23,19,2,74,37,57,62,33,77,1,42,65,28,85,47,54,5,59,31,37,5,44,127,1,37,36,73,1,50,14,26,23,42,53,43,67,5,27,21,1,40,65,63,20,42,5,25,43,5,10,40,5,1,3,26,3,33,36,48,54,90,36,53,50,27,37,39,54,13,85,9,34,5,10,33,5,1,28,71,1,27,25,1,44,35,57,90,145,9,5,49,28,172,55,5,1,24,18,31,40,58,1,35,32,19,40,33,18,40,23,41,9,5,26,1,38,35,22,33,107,5,40,20,17,19,41,50,45,42,18,9,30,5,38,1,52,39,23,40,18,19,44,37,29,77,47,29,35,101,51,30,37,65,93,78,17,33,38,86,64,21,44,17,13,18,9,5,26,1,39,48,39,56,5,49,1,3,41,76,71,34,3,35,9,79,22,5,11,21,5,1,3,74,73,3,30,54,78,21,9,53,53,55,26,39,9,14,40,9,5,1,35,56,57,60,34,21,9,62,51,33,39,9,14,56,9,5,1,29,11,38,157,41,5,1,96,49,15,44,39,70,31,39,49,49,5,1,55,60,46,45,21,66,52,16,16,94,10,6,36,86,16,53,22,10,8,61,86,23,75,11,1,28,21,87,138,23,19,8,58,87,36,32,17,1,38,31,59,5,31,31,5,16,1,40,37,43,5,39,61,5,16,1,131,23,14,16,17,14,2,76,37,61,36,5,94,38,116,54,47,113,35,83,9,29,7,60,76,26,21,107,28,67,5,10,71,76,49,13,18,28,13,27,5,20,24,5,33,97,24,15,1,39,13,61,31,27,5,36,56,88,5,10,27,5,97,73,29,24,26,21,15,26,1,26,53,1,43,70,1,53,39,55,3,89,2,90,34,70,2,35,3,40,49,14,27,46,18,20,5,81,1,58,28,18,78,63,64,66,66,65,37,39,29,20,50,17,60,59,36,60,59,57,24,31,19,24,30,30,19,9,15,19,7,1,32,73,1,0,26,19,14,13,12,11,2,13,12,18,24,48,66,23,53,54,1,53,31,36,5,39,67,36,87,59,46,40,58,34,40,47,62,41,68,66,92,17,22,31,17,14,32,48,13,33,59,32,28,86,17,22,34,34,36,40,32,21,46,17,13,18,42,13,9,5,37,20,25,25,38,10,25,36,38,10,29,40,23,36,38,36,10,26,36,39,10,27,44,24,13,10,31,43,9,6,18,1,3,47,3,46,57,1,57,37,81,33,55,58,91,5,1,64,40,83,49,44,75,9,5,10,62,100,41,29,25,79,30,76,30,61,29,30,76,78,55,10,41,5,1,0,21,32,36,36,34,39,2,38,57,58,28,48,47,5,44,31,49,48,22,9,97,45,5,85,139,43,77,193,5,56,81,31,33,29,23,43,113,7,12,30,26,31,32,27,42,62,21,17,22,41,31,37,17,38,13,24,10,20,32,26,48,47,17,102,13,10,23,27,10,23,25,32,27,44,66,21,17,22,69,17,40,13,24,10,26,39,44,43,13,10,38,39,32,32,44,59,36,36,17,85,27,40,75,47,49,49,128,44,122,29,26,50,50,51,25,30,40,25,21,44,70,73,73,41,35,52,117,21,20,64,13,18,69,47,91,19,13,33,38,36,36,138,80,142,100,13,9,6,1,28,32,31,49,37,5,10,78,5,1,23,27,25,24,19,20,40,31,16,6,1,0,17,0,29,28,43,0,3,19,3,0,28,29,30,30,27,23,48,50,60,40,57,66,46,48,30,0,23,29,31,33,33,23,17,27,27,19,21,31,33,31,15,30,2,0,3,21,3,0,25,19,0,36,24,30,60,33,83,66,67,37,41,38,2,0,3,22,3,0,30,21,18,23,16,28,15,23,15,24,50,28,15,21,21,2,0,19,24,43,0,24,44,55,43,51,53,54,0,67,17,15,18,20,4,0,11,21,21,0,20,31,31,31,32,0,36,37,0,28,0,26,29,22,34,36,37,25,25,23,32,25,36,30,33,32,24,32,38,37,39,30,40,27,24,33,39,38,40,29,32,25,23,30,34,52,0,18,0,5,25,5,0,23,12,76,55,54,54,50,6,4,0,5,22,5,0,20,60,3,2,0,21,0,27,43,7,18,25,22,28,16,0,89,61,76,77,66,0,36,55,39,5,2,0,37,63,78,16,3,15,2,0,32,56,27,3,45,2,0,48,47,31,79,55,2,0,47,21,32,29,24,3,16,2,0,59,46,45,0,49,31,37,3,16,2,12,0,24,7,53,47,59,50,48,61,58,61,61,64,49,58,62,62,65,16,0,35,73,2,0,26,32,50,3,2,0,3,71,81,83,71,2,8,35,40,73,6,24,28,74,14,3,0,36,29,0,34,67,21,20,19,0,18,17,16,20,22,24,21,24,25,27,26,22,29,23,17,11,11,53,0,36,47,25,16,35,4,0,26,21,13,0,41,45,23,0,45,28,7,15,5,0,68,15,0,52,45,49,20,19,9,0,47,19,19,9,0,96,41,39,26,0,35,21,11,0,16,9,0,61,41,39,26,0,35,21,11,0,16,9,0,48,19,0,29,33,43,28,18,11,9,7,0,31,17,7,0,12,5,0,40,26,25,53,0,38,57,19,17,7,0,28,15,5,0,30,48,29,35,40,44,0,73,37,43,24,66,32,9,0,33,56,49,53,31,23,13,0,52,43,30,20,13,11,19,9,14,7,5,0,35,73,35,22,0,31,17,7,12,5,0,40,35,22,0,31,17,7,12,5,0,46,52,45,49,20,19,9,0,51,45,39,26,16,9,7,0,31,17,7,0,12,5,0,88,37,14,15,5,0,68,35,0,31,54,49,51,29,21,11,0,50,28,18,11,9,17,7,12,5,0,26,22,0,31,17,7,0,12,5,3,0,28,22,19,3,0,17,18,16,0,18,33,27,23,3,0,49,35,32,31,14,15,10,15,3,0,60,62,31,5,3,0,31,53,0,39,45,5,3,0,17,11,10,10,9,9,12,14,11,14,15,12,18,4,0,29,23,35,25,5,26,3,0,52,18,0,52,50,29,38,24,39,38,37,16,36,9,29,44,7,38,26,7,20,5,0,52,47,24,0,24,48,43,58,7,5,0,28,24,3,0,15,2,0,22,0,32,24,0,3,12,3,0,7,27,43,53,61,30,16,0,3,10,3,0,42,50,49,3,0,14,38,0,15,2,0,3,40,3,0,39,86,2,0,3,32,24,26,19,3,0,37,34,45,3,0,41,0,30,105,0,25,18,90,3,0,69,23,0,43,43,0,61,54,65,0,9,16,17,18,13,15,11,17,18,10,17,9,16,21,0,28,90,4,0,39,53,56,0,21,23,3,0,30,40,32,3,0,17,10,14,13,27,17,15,15,21,19,16,14,14,14,20,10,4,0,45,21,0,22,20,19,17,12,0,5,23,5,0,44,62,67,55,44,28,23,4,0,27,70,25,4,0,24,18,0,68,16,20,14,5,0,26,19,5,0,25,18,16,4,0,29,18,21,4,0,29,18,16,4,0,5,61,72,67,72,17,5,0,23,35,89,115,0,83,66,27,25,27,36,7,5,0,50,55,5,0,45,62,30,52,13,5,0,20,21,15,4,0,40,72,0,22,32,32,58,0,24,64,69,25,4,0,33,57,13,0,34,29,0,79,37,7,0,71,52,7,0,91,123,102,84,10,126,82,0,64,7,0,38,36,7,5,0,58,24,4,0,5,15,5,0,71,28,0,102,27,27,17,7,0,26,18,71,9,26,70,9,42,7,0,26,48,7,0,26,18,50,9,20,7,32,7,0,31,35,43,14,46,63,11,7,5,0,53,27,19,5,0,62,17,3,0,5,48,5,0,18,22,0,29,15,5,0,7,25,7,0,25,26,0,47,17,7,0,41,17,7,0,18,22,38,17,7,0,58,45,22,0,41,34,31,32,24,9,7,0,35,26,14,27,7,0,33,38,17,7,5,0,7,56,42,7,0,93,50,42,34,28,0,36,52,49,51,53,24,39,37,24,0,62,38,15,23,13,11,9,7,0,83,29,7,0,73,29,7,0,71,20,7,0,26,24,15,5,0,7,48,47,7,0,46,41,26,24,15,5,0,7,20,7,0,24,48,37,38,7,15,5,0,7,18,7,0,24,26,37,15,5,0,24,63,61,7,0,52,59,37,17,7,0,73,26,15,5,0,7,22,7,0,24,66,70,63,9,0,29,14,30,7,0,39,15,5,0,24,100,60,17,7,0,33,43,63,9,0,60,17,7,0,28,0,44,84,28,7,0,26,24,0,54,60,79,17,7,0,54,63,0,53,73,42,32,29,17,7,0,59,58,33,15,5,0,7,13,7,0,49,26,0,20,22,14,20,41,40,8,0,24,17,15,5,0,24,46,0,44,53,17,7,0,23,0,32,35,25,0,51,23,40,18,11,39,40,11,9,0,44,31,7,0,56,61,59,43,31,27,31,48,9,7,0,45,26,19,15,5,0,7,12,7,0,24,32,51,7,36,15,5,0,7,13,7,0,24,25,0,46,58,27,21,7,0,45,15,5,0,7,14,7,0,24,64,64,63,64,67,38,28,26,21,54,17,7,0,60,15,5,0,7,11,7,0,24,52,58,48,27,29,28,26,17,7,0,96,59,17,7,0,56,15,5,0,7,21,7,0,24,49,85,36,17,7,0,42,28,27,0,61,85,9,0,114,32,9,0,46,17,7,0,80,61,17,7,0,52,15,5,0,7,18,7,0,24,54,57,39,19,9,7,0,56,17,17,7,5,0,7,11,7,0,24,73,35,17,7,0,65,60,17,7,0,118,38,17,7,0,50,15,5,0,7,17,7,0,24,73,63,17,7,0,36,15,5,0,7,17,7,0,24,43,29,7,0,64,18,26,39,7,0,36,15,5,0,7,12,7,0,67,25,23,26,25,29,28,21,15,5,0,27,58,33,15,5,0,31,37,23,17,7,0,30,32,69,89,0,77,50,17,7,0,93,93,73,50,17,7,0,33,42,45,37,16,9,29,26,7,0,42,31,28,37,35,30,23,17,7,0,87,83,44,0,31,74,28,30,51,23,17,7,0,83,51,0,83,44,0,31,82,28,0,51,30,0,35,0,56,17,7,0,52,31,28,81,35,30,35,56,17,7,0,39,64,0,41,29,35,26,0,35,34,28,21,15,5,0,56,0,29,27,57,44,7,18,15,5,0,92,27,18,15,5,0,86,32,37,36,0,37,38,37,0,14,30,29,7,0,27,33,32,7,5,0,16,3,0,30,91,57,26,3,0,28,91,57,24,3,0,28,91,57,24,3,0,89,74,3,0,59,33,22,0,39,72,0,25,37,7,5,3,0,15,2,0,3,72,74,44,3,0,41,30,105,27,18,90,3,0,41,43,0,61,9,16,18,13,15,11,12,18,9,16,35,0,44,53,43,47,47,0,21,23,3,0,28,46,90,4,0,25,18,15,44,0,16,50,0,17,65,0,17,78,0,16,38,0,18,93,0,20,114,0,19,96,0,16,49,27,0,40,28,0,47,7,5,4,0,52,30,0,46,34,3,0,16,2,0,24,0,29,24,26,24,32,80,0,3,65,67,66,72,49,2,8,42,33,2,40,42,41,6,18,59,29,50,14,3,0,61,28,76,33,34,35,32,7,19,6,24,3,0,64,0,62,69,3,0,29,43,23,42,53,0,28,21,0,30,20,83,66,3,0,52,96,80,0,46,28,5,0,28,29,43,5,0,27,48,30,7,29,43,5,0,45,27,5,40,4,0,20,26,3,0,17,2,0,3,64,51,2,8,42,46,2,70,75,6,42,26,57,14,3,0,69,34,57,3,0,21,42,3,0,29,72,29,57,0,24,44,28,3,0,49,60,66,12,33,5,3,0,52,2,0,3,36,2,8,42,50,65,6,42,85,20,14,3,0,87,82,44,2,0,3,85,2,8,42,53,2,67,59,6,48,80,63,61,14,3,0,86,0,3,65,14,2,8,42,54,6,28,28,108,14,3,0,43,85,60,2,0,3,61,2,8,42,39,2,48,23,19,26,14,17,18,20,22,18,22,23,20,6,48,28,42,14,3,0,62,0,3,71,28,2,26,28,128,132,19,14,3,0,88,30,24,3,0,29,43,42,0,56,40,33,3,0,53,29,24,3,0,15,2,0,3,58,2,8,42,41,44,2,43,37,6,72,28,215,147,67,14,3,0,90,44,55,3,0,51,0,78,54,3,0,23,37,3,0,75,2,0,3,66,2,8,42,43,2,46,42,37,6,61,28,19,14,3,0,44,7,31,70,17,53,16,3,2,0,3,23,19,3,0,36,0,3,21,3,0,32,0,32,0,74,25,30,1,31,25,21,22,18,19,1,0,58,67,2,0,49,82,35,5,61,74,92,47,43,51,53,57,60,1,73,54,51,12,11,29,85,71,63,40,30,13,10,67,67,32,35,25,26,25,43,58,47,37,29,9,58,47,37,28,9,39,6,2,0,304,567,86,31,65,24,63,41,77,38,5,29,2,0,27,144,1,50,21,63,42,27,98,5,58,1,51,21,63,40,46,40,86,133,5,58,1,45,50,31,59,32,48,34,34,56,5,34,29,30,30,31,22,53,24,64,5,34,39,30,53,5,32,25,28,1,58,81,41,42,66,41,35,30,31,33,24,69,104,48,5,29,33,54,49,40,44,16,60,131,9,14,114,9,5,107,2,0,38,41,57,55,51,57,160,32,33,35,40,26,46,37,42,5,11,2,66,40,67,102,15,55,19,22,12,25,14,7,48,27,14,14,21,7,5,3,60,1,44,60,57,67,3,7,52,41,22,5,15,30,14,5,3,1,38,19,87,29,3,15,1,81,26,21,9,80,37,113,89,72,56,9,7,17,55,15,7,14,5,3,1,0,17,31,81,31,16,10,20,3,1,41,27,17,18,30,47,43,35,47,21,37,7,5,23,30,15,5,35,27,15,5,27,65,67,38,32,49,32,7,5,3,47,1,47,32,25,38,15,24,3,37,1,36,54,1,44,42,40,29,30,17,18,59,47,48,55,51,21,41,7,5,25,15,5,72,48,21,38,14,98,14,30,49,21,80,30,49,21,79,48,21,37,14,95,14,30,53,25,5,3,97,1,27,39,27,3,16,1,67,62,52,30,57,106,65,42,52,11,3,51,7,52,41,22,5,15,30,14,5,3,60,1,33,164,1,33,165,1,39,54,88,3,142,1,49,57,50,106,39,5,1,52,119,102,27,66,24,9,5,3,16,1,39,71,86,57,33,16,3,135,20,89,23,3,15,1,47,37,43,28,51,53,30,27,14,7,5,109,19,5,93,19,5,39,44,5,56,32,54,69,31,27,14,7,5,107,19,5,23,42,5,51,69,5,49,52,32,5,1,41,21,52,36,23,27,15,5,23,77,15,38,17,7,28,15,5,42,23,5,21,3,38,44,3,18,30,1,0,15,43,57,53,31,3,19,76,9,86,17,30,47,20,8,67,28,5,10,84,3,13,57,37,10,52,85,61,3,53,55,16,1,49,57,35,3,7,77,38,20,19,88,6,61,18,15,104,3,1,43,9,135,92,3,18,1,47,36,11,3,65,96,71,33,1,44,33,11,3,20,96,4,58,52,100,72,133,123,5,66,3,29,47,32,3,1,41,12,7,62,15,14,3,105,9,77,72,17,16,5,3,119,1,23,20,10,12,12,17,18,20,16,2,46,45,43,153,99,36,45,45,7,73,92,19,9,127,7,49,35,42,72,123,9,14,86,7,5,3,1,19,10,12,12,12,12,13,14,11,12,19,23,16,2,50,35,17,3,29,56,10,42,3,1,41,40,17,10,87,3,1,46,51,19,62,40,21,23,37,3,2,0,47,87,103,11,69,11,82,18,68,63,33,77,22,45,26,9,14,25,9,5,92,76,42,59,65,34,21,25,33,38,37,34,10,42,50,75,116,51,53,81,81,17,13,9,23,27,30,42,104,13,10,5,29,24,54,29,19,15,19,6,35,35,37,9,70,16,49,51,40,47,24,21,15,9,14,43,40,35,9,41,78,9,16,22,15,10,5,15,70,34,23,25,37,59,15,41,9,16,5,1,38,98,12,29,34,29,26,50,53,54,10,38,39,10,20,71,26,10,35,53,77,45,52,60,23,17,68,72,17,24,38,35,18,13,9,6,1,34,14,15,71,62,68,6,73,79,72,62,19,2,40,12,39,38,39,10,46,59,45,28,13,47,63,87,41,83,60,62,28,13,74,34,44,26,23,31,42,69,21,32,15,35,88,87,76,90,57,59,43,44,48,36,36,118,17,13,23,9,6,2,35,38,21,43,45,49,28,31,33,61,66,5,22,1,30,21,29,20,42,2,37,39,62,46,50,42,67,11,7,1,50,9,69,72,73,87,9,31,5,15,46,76,43,86,13,9,16,5,1,46,11,114,77,66,41,184,241,74,43,70,51,32,28,36,25,15,11,5,1,0,16,0,92,62,2,61,38,50,47,14,35,38,78,23,27,24,5,24,56,49,44,42,37,11,5,12,44,122,23,27,24,5,33,24,35,41,9,26,42,82,43,68,45,47,15,41,66,44,15,41,52,27,43,57,99,48,17,15,35,26,9,47,20,19,65,24,24,11,43,40,5,31,37,32,49,28,19,9,23,35,5,1,34,28,12,31,0,48,0,42,35,29,2,4,1,0,31,71,78,79,24,62,69,28,11,57,7,15,12,28,56,86,86,30,51,63,55,28,13,83,38,68,28,13,32,46,59,31,46,53,62,56,15,20,31,28,14,10,23,74,9,6,1,0,33,24,20,12,30,22,28,10,44,19,42,43,106,81,64,76,21,51,17,22,72,17,13,50,43,45,53,33,21,69,17,39,13,41,39,40,18,43,60,17,36,49,17,43,56,17,43,78,53,64,21,17,50,85,53,71,21,17,58,76,17,61,82,17,37,13,40,43,45,71,17,13,26,108,75,46,31,71,47,42,34,61,19,13,9,6,1,0,17,0,29,26,39,0,3,19,3,0,26,27,28,28,25,21,44,46,54,36,51,60,42,44,28,0,21,14,15,16,16,11,8,13,13,9,10,15,16,15,15,14,2,0,3,21,3,0,23,17,0,34,22,28,56,31,77,62,63,35,39,36,2,0,3,22,3,0,30,21,18,23,16,28,15,23,15,24,50,28,15,21,21,2,0,19,24,43,0,24,44,55,43,51,53,54,0,67,17,15,18,20,4,0,11,21,21,0,20,31,31,31,32,0,36,37,0,28,0,26,29,22,34,36,37,25,25,23,32,25,36,30,33,32,24,32,38,37,39,30,40,27,24,33,39,38,40,29,32,25,23,30,34,52,0,18,0,5,25,5,0,23,12,76,55,54,54,50,6,4,0,5,22,5,0,20,56,3,2,0,21,0,27,43,7,18,25,22,28,16,0,89,61,76,77,66,0,36,55,39,5,2,0,37,63,78,16,3,15,2,0,32,56,27,3,45,2,0,48,47,31,79,55,2,0,47,21,32,29,24,3,16,2,0,59,46,45,0,49,31,37,3,16,2,12,0,24,7,36,36,36,50,48,36,36,61,61,64,36,36,62,62,65,16,0,33,69,2,0,24,32,50,3,2,0,3,71,81,83,71,2,8,35,40,73,6,24,28,74,14,3,0,36,29,0,34,67,21,20,19,0,18,17,16,20,22,24,21,24,25,27,26,22,29,23,17,11,11,53,0,36,47,25,16,35,4,0,26,21,13,0,39,45,23,0,45,28,7,15,5,0,68,15,0,52,43,49,20,19,9,0,47,19,19,9,0,96,41,39,26,0,35,21,11,0,16,9,0,61,41,39,26,0,35,21,11,0,16,9,0,48,19,0,29,33,43,28,18,11,9,7,0,31,17,7,0,12,5,0,38,26,25,53,0,38,57,19,17,7,0,28,15,5,0,30,46,27,33,38,42,0,73,37,43,24,64,32,9,0,33,56,47,53,31,23,13,0,52,43,30,20,13,11,19,9,14,7,5,0,33,71,35,22,0,31,17,7,12,5,0,38,35,22,0,31,17,7,12,5,0,46,52,43,49,20,19,9,0,51,45,39,26,16,9,7,0,31,17,7,0,12,5,0,86,37,14,15,5,0,68,35,0,31,54,49,51,29,21,11,0,50,28,18,11,9,17,7,12,5,0,26,22,0,31,17,7,0,12,5,3,0,28,22,19,3,0,17,18,16,0,18,33,27,23,3,0,49,35,32,31,14,15,10,15,3,0,60,60,31,5,3,0,31,53,0,39,45,5,3,0,17,11,10,10,9,9,12,14,11,14,15,12,18,4,0,29,23,33,25,5,26,3,0,52,18,0,52,50,29,38,24,39,38,37,16,36,9,27,44,7,38,26,7,20,5,0,52,47,24,0,24,48,41,58,7,5,0,28,24,3,0,15,2,0,20,0,32,24,0,3,12,3,0,7,27,21,26,30,14,16,0,3,10,3,0,40,50,49,3,0,14,38,0,15,2,0,3,40,3,0,39,86,2,0,3,32,24,26,19,3,0,37,34,45,3,0,39,0,30,105,0,25,18,90,3,0,69,23,0,43,43,0,61,54,65,0,9,16,17,18,13,15,11,17,18,10,17,9,16,21,0,28,90,4,0,39,53,56,0,21,23,3,0,30,40,32,3,0,17,10,14,13,27,17,15,15,21,19,16,14,14,14,20,10,4,0,45,21,0,22,20,19,17,12,0,5,23,5,0,44,62,67,55,44,28,23,4,0,27,70,25,4,0,24,18,0,68,16,20,14,5,0,26,19,5,0,25,18,16,4,0,29,18,21,4,0,29,18,16,4,0,5,61,72,67,72,17,5,0,23,35,89,115,0,83,66,27,25,27,36,7,5,0,50,55,5,0,45,62,30,52,13,5,0,20,21,15,4,0,40,72,0,22,32,32,58,0,24,64,69,25,4,0,33,57,13,0,34,29,0,79,37,7,0,71,52,7,0,91,58,7,0,38,36,7,5,0,58,24,4,0,5,15,5,0,71,28,0,100,27,27,17,7,0,26,18,71,9,26,70,9,42,7,0,26,48,7,0,26,18,50,9,20,7,32,7,0,31,35,43,14,46,63,11,7,5,0,53,27,19,5,0,62,17,3,0,5,48,5,0,18,22,0,29,15,5,0,7,25,7,0,25,26,0,47,17,7,0,41,17,7,0,18,22,38,17,7,0,58,45,22,0,41,34,31,32,24,9,7,0,35,26,14,27,7,0,33,38,17,7,5,0,7,56,42,7,0,93,50,42,34,28,0,36,52,49,51,51,24,39,37,24,0,62,38,15,23,13,11,9,7,0,83,29,7,0,73,29,7,0,71,20,7,0,26,24,15,5,0,7,48,47,7,0,46,41,26,24,15,5,0,7,20,7,0,24,48,37,38,7,15,5,0,7,18,7,0,24,26,37,15,5,0,24,63,61,7,0,52,59,37,17,7,0,73,26,15,5,0,7,22,7,0,24,66,70,63,9,0,29,14,30,7,0,39,15,5,0,24,100,60,17,7,0,33,43,63,9,0,60,17,7,0,28,0,44,84,28,7,0,26,24,0,54,60,79,17,7,0,54,63,0,53,73,42,32,29,17,7,0,59,58,33,15,5,0,7,13,7,0,49,26,0,20,22,14,20,41,40,8,0,24,17,15,5,0,24,46,0,44,53,17,7,0,23,0,32,35,25,0,51,23,40,18,11,39,40,11,9,0,42,31,7,0,56,61,59,43,31,27,31,48,9,7,0,45,26,19,15,5,0,7,12,7,0,24,32,51,7,36,15,5,0,7,13,7,0,24,25,0,46,58,27,21,7,0,45,15,5,0,7,14,7,0,24,64,64,63,64,67,38,28,26,21,54,17,7,0,60,15,5,0,7,11,7,0,24,52,58,48,27,29,28,26,17,7,0,96,59,17,7,0,56,15,5,0,7,21,7,0,24,49,85,36,17,7,0,42,28,27,0,61,85,9,0,114,32,9,0,46,17,7,0,80,61,17,7,0,52,15,5,0,7,18,7,0,24,54,57,39,19,9,7,0,56,17,17,7,5,0,7,11,7,0,24,73,35,17,7,0,65,60,17,7,0,118,38,17,7,0,50,15,5,0,7,17,7,0,24,73,63,17,7,0,36,15,5,0,7,17,7,0,24,43,29,7,0,62,18,26,39,7,0,36,15,5,0,7,12,7,0,67,25,23,26,25,29,28,21,15,5,0,27,58,33,15,5,0,31,37,23,17,7,0,30,32,69,89,0,77,50,17,7,0,93,93,73,50,17,7,0,33,42,45,37,16,9,29,26,7,0,42,31,28,37,35,30,23,17,7,0,87,83,44,0,31,74,28,30,51,23,17,7,0,83,51,0,83,44,0,31,82,28,0,51,30,0,35,0,56,17,7,0,52,31,28,81,35,30,35,56,17,7,0,39,64,0,41,29,35,26,0,35,34,28,21,15,5,0,56,0,29,27,57,44,7,18,15,5,0,92,27,18,15,5,0,86,32,37,36,0,37,38,37,0,14,30,29,7,0,27,33,32,7,5,0,16,3,0,30,91,57,26,3,0,28,91,57,24,3,0,28,91,57,24,3,0,89,74,3,0,59,33,22,0,39,72,0,25,37,7,5,3,0,15,2,0,3,72,74,44,3,0,41,30,105,27,18,90,3,0,39,43,0,61,9,16,18,13,15,11,12,18,9,16,35,0,44,53,43,47,47,0,21,23,3,0,28,46,90,4,0,25,18,15,44,0,16,50,0,17,65,0,17,78,0,16,38,0,18,93,0,20,114,0,19,96,0,16,49,27,0,40,28,0,47,7,5,4,0,52,30,0,46,34,3,0,16,2,0,24,0,29,20,26,24,32,80,0,3,65,67,66,72,49,2,8,42,33,2,40,42,41,6,18,59,29,50,14,3,0,61,28,76,33,34,35,32,7,19,6,24,3,0,64,0,62,69,3,0,29,43,23,42,53,0,28,21,0,30,20,83,66,3,0,52,96,80,0,46,28,5,0,28,29,43,5,0,27,48,30,7,29,43,5,0,45,27,5,40,4,0,20,26,3,0,17,2,0,3,64,51,2,8,42,46,2,70,75,6,42,26,57,14,3,0,69,34,57,3,0,21,42,3,0,29,72,29,57,0,24,44,28,3,0,49,60,66,12,33,5,3,0,52,2,0,3,36,2,8,42,50,65,6,42,85,20,14,3,0,87,82,44,2,0,3,85,2,8,42,53,2,67,59,6,48,80,63,61,14,3,0,86,0,3,65,14,2,8,42,54,6,28,28,108,14,3,0,43,85,60,2,0,3,61,2,8,42,39,2,48,23,19,26,14,17,18,20,22,18,22,23,20,6,48,28,42,14,3,0,60,0,3,71,28,2,26,28,128,132,19,14,3,0,88,30,24,3,0,29,43,42,0,56,40,33,3,0,53,29,24,3,0,15,2,0,3,58,2,8,42,41,44,2,43,37,6,72,28,215,147,67,14,3,0,90,44,55,3,0,51,0,78,54,3,0,23,37,3,0,75,2,0,3,66,2,8,42,43,2,46,42,37,6,61,28,19,14,3,0,44,7,31,70,17,53,16,3,2,0,3,23,19,3,0,36,0,3,21,3,0,30,0,30,0,40,41,1,0,24,26,23,17,32,36,38,2,0,45,14,23,30,10,23,3,2,1,0,38,14,23,33,10,23,3,2,1,0,17,6,8,7,7,6,6,3,12,14,36,40,36,23,25,22,0,50,0,21,23,39,4,0,23,32,4,0,31,33,0,30,34,30,0,28,28,3,0,27,30,0,35,13,4,0,35,62,66,59,17,11,7,6,5,4,0,63,50,4,3,0,14,36,40,22,25,0,50,0,21,23,39,4,0,23,32,4,0,33,0,30,34,0,28,3,2,0,13,1,0,20,32,47,24,57,9,6,37,55,6,30,31,6,27,33,46,74,46,52,13,18,63,13,9,6,31,63,5,2,67,21,41,17,2,0,27,16,13,2,15,31,37,44,48,29,47,63,51,19,15,9,5,53,55,54,52,72,9,27,61,47,15,9,5,20,93,5,1,73,30,17,26,27,36,30,64,57,13,26,54,38,67,82,61,81,64,84,23,17,13,25,40,45,34,40,34,33,39,19,70,47,68,64,17,13,37,82,40,34,31,19,13,51,46,40,34,59,31,19,13,27,59,36,38,19,33,13,10,18,27,35,37,9,7,17,2,0,74,25,30,1,29,25,21,22,18,19,1,0,47,35,18,5,61,57,26,18,92,47,43,51,53,57,43,1,71,54,51,12,11,29,85,69,63,40,30,13,10,65,65,32,35,25,26,25,54,58,47,37,29,9,58,47,37,28,9,39,6,2,0,304,565,82,29,63,24,63,41,75,38,5,29,2,0,27,0,46,19,47,46,11,5,10,28,5,4,57,48,63,9,8,39,13,22,66,15,10,30,34,4,59,47,2,0,15,0,54,2,74,64,70,70,76,69,24,2,74,57,2,74,61,76,75,72,76,41,0,31,47,23,0,65,0,72,0,20,78,32,15,14,30,29,8,31,0,18,0,31,14,38,22,27,5,3,0,33,14,35,80,40,71,37,29,12,29,7,5,3,1,0,28,51,1,0,57,66,18,41,8,39,1,0,72,18,77,8,29,1,0,54,23,28,0,64,20,3,0,19,21,21,0,36,10,63,14,79,11,63,15,0,10,0,20,22,32,22,19,16,18,0,72,42,27,29,5,3,0,69,11,26,26,25,31,36,23,25,32,31,0,32,61,15,5,0,21,69,58,33,12,38,35,31,38,17,7,0,47,63,28,25,69,43,37,9,7,32,28,45,7,62,38,44,51,5,0,40,55,12,3,0,33,0,11,2,0,0,50,33,30,17,3,0,23,28,0,64,59,3,0,19,21,21,0,36,10,63,14,79,11,63,15,0,10,0,20,22,32,22,19,16,18,0,72,42,38,32,31,15,9,12,29,5,3,0,69,11,19,39,26,37,25,5,0,25,31,36,23,25,32,31,0,32,61,36,5,0,69,53,42,5,0,37,3,0,31,28,0,51,33,29,36,36,5,0,46,57,61,23,67,41,52,7,5,35,30,0,49,49,31,9,7,3,0,41,28,0,60,42,34,3,0,42,40,55,12,3,2,0,29,33,31,39,37,41,0,23,33,41,0,32,37,16,0,24,45,26,27,30,3,1,0,36,11,37,3,0,36,15,17,3,48,23,33,12,21,5,5,1,0,34,11,37,3,0,7,37,16,23,39,12,14,5,3,1,0,25,29,35,1,0,27,31,39,1,0,37,17,41,29,49,25,5,15,2,0,48,67,2,0,31,32,50,50,0,27,0,15,16,14,28,43,36,4,1,0,31,25,25,1,0,25,27,37,26,34,13,0,26,15,22,5,14,22,0,31,20,21,35,36,36,14,25,25,21,21,9,0,35,7,0,39,5,0,22,31,5,3,0,16,1,0,28,29,0,31,0,44,42,44,44,46,0,23,33,23,24,1,0,28,41,39,40,40,42,1,0,30,39,37,38,38,40,1,0,0,52,56,50,31,11,16,0,17,34,0,9,26,0,18,20,20,25,0,36,40,20,39,31,3,0,29,0,15,1,0,25,11,14,0,54,70,72,47,70,65,34,35,3,0,63,1,0,23,25,1,23,27,1,0,20,16,1,20,16,1,0,31,22,0,34,44,0,72,76,56,43,34,13,32,53,27,5,17,3,0,8,19,29,10,32,25,34,45,27,32,35,17,37,34,11,7,5,3,0,68,25,0,75,18,26,29,11,0,8,0,19,26,26,51,28,31,10,19,24,18,17,17,5,31,0,11,0,44,12,28,35,23,17,14,22,18,38,25,50,22,39,16,24,11,9,7,16,5,10,66,3,0,38,43,43,44,35,5,3,0,20,1,0,30,36,0,26,5,27,15,0,66,30,0,15,48,36,36,36,34,2,0,32,49,19,0,32,24,0,60,63,45,61,0,34,45,46,0,48,44,0,38,22,47,18,14,8,1,0,22,23,0,28,36,26,32,43,3,1,0,21,14,14,13,39,16,5,39,16,5,10,1,0,39,58,0,25,0,52,56,4,0,55,57,4,0,10,2,0,39,58,44,2,0,44,36,55,3,0,29,0,38,56,16,3,0,23,44,0,51,1,0,41,39,44,3,0,36,55,3,0,29,27,0,42,27,50,3,0,25,16,25,21,22,23,21,0,33,14,1,0,45,0,34,18,32,24,0,29,29,0,47,56,24,10,3,17,22,10,3,0,38,21,0,26,46,0,48,0,32,0,78,23,64,54,42,47,30,5,0,32,0,21,39,34,11,0,32,0,56,33,34,5,0,32,0,17,1,0,48,25,29,21,29,23,0,30,0,36,40,12,21,19,3,0,64,23,1,0,19,21,19,30,35,43,2,33,21,17,55,38,2,0,48,0,41,17,38,29,12,19,5,3,0,42,29,0,39,44,3,0,24,31,35,20,3,0,26,1,0,41,50,68,68,61,66,2,74,72,69,62,38,18,35,35,46,3,0,29,0,14,64,31,0,14,34,23,30,28,25,16,22,24,22,61,34,63,62,52,14,18,0,30,20,45,43,26,17,21,26,13,17,22,26,13,16,33,13,7,56,24,5,3,0,41,42,12,50,0,38,36,21,23,14,5,0,16,15,48,47,20,0,16,25,24,14,0,37,33,15,15,15,15,15,68,0,64,45,22,35,57,18,18,9,0,56,59,60,56,25,22,66,71,33,44,14,0,15,22,20,18,9,0,25,22,18,9,0,31,26,23,29,40,41,11,38,54,50,26,14,0,15,50,22,18,9,0,25,24,40,38,45,23,30,33,9,29,14,0,15,62,22,27,18,9,0,25,18,14,0,53,15,55,25,0,22,25,18,9,0,23,23,33,16,14,0,15,50,43,45,50,47,25,27,18,9,0,54,52,22,64,62,63,38,64,66,60,56,15,24,33,46,68,41,28,20,11,9,0,31,24,24,16,14,0,14,54,25,0,23,20,27,32,39,21,9,0,16,0,15,10,0,48,43,16,48,51,57,52,40,34,52,33,3,0,57,20,68,74,69,39,70,53,39,67,75,16,53,18,7,0,71,73,75,63,8,46,31,7,0,53,34,31,23,0,20,52,3,0,61,19,17,18,17,3,0,61,51,30,25,13,13,37,3,0,58,62,59,60,17,55,30,0,43,53,50,37,0,22,0,68,76,35,58,29,44,54,5,25,0,20,47,19,5,63,15,3,0,65,49,54,30,22,3,0,24,27,3,0,46,27,25,3,0,45,54,39,18,32,3,0,40,7,51,16,67,67,70,37,27,3,0,25,19,0,15,1,0,50,57,2,0,40,22,62,0,53,30,4,58,59,45,21,0,20,24,22,3,29,0,41,30,19,40,0,39,37,41,49,14,19,15,0,30,50,26,0,50,45,0,7,40,16,24,3,20,1,0,55,26,45,35,22,5,42,23,3,13,2,0,36,29,39,48,19,32,33,0,39,0,29,0,34,27,38,3,0,47,26,39,0,60,61,37,41,0,21,39,0,76,15,8,39,20,23,3,0,36,25,17,52,24,5,52,14,41,25,5,3,0,61,32,38,20,1,0,47,41,55,51,19,68,29,0,24,52,0,54,0,18,13,23,25,30,21,32,24,21,0,30,0,28,44,33,0,27,46,0,13,47,20,20,20,14,55,62,31,60,35,8,41,22,21,40,26,25,43,41,39,40,18,22,22,36,54,33,51,30,62,31,31,54,70,9,19,7,0,57,23,33,0,73,0,61,72,65,27,21,16,44,59,56,60,63,17,11,0,49,65,15,9,7,0,28,73,45,20,26,70,34,7,18,5,0,30,52,57,12,32,27,50,14,22,7,44,12,23,45,5,0,26,3,0,54,54,45,52,54,57,54,59,31,43,0,66,31,56,20,15,25,51,53,27,18,25,48,56,53,28,60,23,3,0,27,25,2,0,31,27,34,1,0,27,54,1,0,31,0,37,0,42,55,65,20,30,59,22,22,28,25,28,9,9,5,4,8,37,65,20,30,36,47,38,40,5,4,1,0,5,31,28,54,39,13,28,48,1,0,35,0,22,31,1,0,22,96,90,39,30,57,0,33,36,1,0,70,37,37,0,18,0,29,29,27,25,21,33,45,0,33,57,1,0,23,27,30,42,38,0,27,33,1,0,39,37,0,34,32,0,27,45,3,1,0,47,30,22,36,53,54,3,0,10,51,22,3,1,0,45,15,17,0,47,57,29,56,5,30,3,0,33,25,41,37,68,33,27,29,31,17,21,29,37,33,33,33,29,39,37,31,0,49,52,60,58,0,30,0,26,26,33,19,8,43,39,3,0,60,40,35,46,0,71,77,76,35,50,35,0,48,60,26,27,0,51,40,1,0,24,26,43,0,57,34,56,24,59,48,16,28,12,30,7,12,20,35,14,31,10,32,24,11,5,3,0,11,27,0,19,30,0,44,18,42,34,5,21,37,38,62,24,52,21,9,5,3,0,25,34,34,7,0,19,1,0,25,29,26,12,10,48,36,0,24,15,29,25,0,18,34,49,41,5,3,0,10,1,0,18,28,14,28,36,43,12,31,38,10,28,3,0,35,34,0,12,1,0,0,90,101,35,26,16,0,42,85,4,1,0,41,26,16,0,42,57,4,1,0,24,33,0,23,30,27,35,42,24,33,33,49,37,0,40,62,59,78,0,47,1,0,40,15,43,0,62,59,78,0,36,43,0,36,0,21,15,0,36,30,32,51,3,17,1,0,44,39,22,20,53,58,31,13,31,62,27,22,36,41,14,20,9,7,7,3,24,2,0,0,71,39,0,61,12,42,9,3,64,0,33,13,14,41,24,52,12,0,11,53,70,20,11,0,12,51,74,36,45,11,3,0,32,0,29,11,22,15,69,41,28,18,8,18,0,32,0,31,36,10,0,54,17,72,6,71,2,0,0,96,47,0,52,15,10,0,66,56,21,39,25,52,0,26,44,23,39,12,30,25,14,24,7,12,31,5,3,0,34,59,16,10,0,64,63,65,10,0,56,29,48,0,36,32,19,37,31,12,25,7,0,49,38,7,32,5,54,10,3,0,60,20,17,34,30,19,15,31,8,23,64,3,2,0,0,55,27,10,0,29,0,16,22,0,22,12,3,0,29,10,0,19,28,40,12,3,0,32,0,16,18,2,0,0,58,45,56,18,36,0,14,12,7,35,16,31,36,17,5,3,0,46,29,0,73,47,46,29,6,40,0,16,2,0,60,0,51,39,0,35,28,27,17,0,25,14,3,0,7,62,16,32,15,3,2,0,64,54,60,37,33,47,25,22,20,10,26,27,5,3,0,28,0,28,16,2,0,55,45,20,69,61,33,31,32,68,30,29,19,7,11,0,42,17,24,19,43,11,0,54,43,22,16,23,40,11,3,2,0,97,0,47,0,61,37,15,10,0,63,32,46,40,56,0,54,42,0,27,33,0,58,26,10,0,33,23,41,14,0,49,67,40,0,50,38,3,2,0,64,61,37,34,0,27,46,0,60,14,10,0,56,39,35,46,12,49,16,22,5,3,0,35,40,0,25,33,2,0,41,43,29,36,0,32,16,0,49,28,0,25,16,0,46,32,14,0,32,18,0,54,48,3,33,14,14,9,37,18,66,36,20,7,5,0,42,11,37,20,21,7,12,19,5,3,0,29,0,15,11,44,0,41,0,30,16,0,10,2,0,43,31,2,0,46,34,2,0,61,58,42,60,51,24,28,39,0,31,48,0,40,23,5,0,16,0,22,43,43,29,5,35,33,50,44,23,9,5,14,3,1,0,27,0,24,34,45,0,35,53,24,25,6,22,5,0,59,24,29,6,22,5,3,0,22,23,32,20,46,4,19,10,1,0,26,23,17,34,20,46,4,55,61,19,10,1,0,22,31,28,0,36,0,31,18,23,15,10,21,23,3,1,0,24,33,24,25,34,0,71,68,67,73,51,73,9,37,33,7,15,29,37,56,27,38,32,11,14,25,7,5,4,1,0,25,27,17,0,54,14,1,0,12,2,27,58,43,2,31,60,40,57,41,2,56,21,34,17,2,15,30,59,62,56,29,42,49,52,63,2,25,68,38,27,69,2,10,73,73,73,29,0,18,0,21,28,34,44,27,35,40,22,24,31,31,26,47,35,0,26,0,38,64,29,0,21,11,59,37,3,0,39,1,0,21,49,0,18,17,0,31,48,17,3,0,30,22,15,35,3,15,1,0,46,37,27,0,37,28,0,15,16,0,21,15,0,43,38,17,3,0,14,2,0,17,19,38,38,17,19,3,0,32,11,59,41,3,0,30,41,0,34,28,0,46,36,0,61,41,44,62,30,0,33,18,25,39,24,7,3,0,18,23,0,23,26,22,0,21,15,0,14,17,0,18,32,57,3,15,0,20,23,32,17,38,25,11,14,23,7,5,3,1,0,38,33,19,10,0,42,27,0,24,31,2,0,40,24,10,0,27,0,30,14,25,0,18,47,31,0,20,18,21,3,2,0,52,37,16,15,0,36,18,23,0,14,15,0,54,33,61,59,57,25,60,14,25,37,22,10,55,0,22,34,13,7,7,5,2,0,37,31,2,0,40,34,2,0,36,22,21,2,0,36,21,23,23,3,2,0,37,20,24,24,33,40,33,44,22,36,7,5,36,43,36,44,22,27,46,7,5,3,2,0,69,33,37,0,19,10,0,21,20,62,10,3,0,58,0,61,12,42,9,3,64,0,33,13,14,41,24,56,12,0,11,53,70,20,11,0,12,51,74,36,45,11,3,0,32,0,29,11,22,15,65,39,28,18,8,18,0,32,0,32,34,15,0,52,17,76,6,75,2,0,94,18,57,91,5,2,0,104,0,52,15,15,0,66,56,21,39,25,52,0,26,44,23,39,12,30,25,14,24,7,12,31,5,3,0,75,0,34,59,16,15,0,64,63,65,10,0,56,29,48,0,36,32,19,27,31,12,25,7,0,49,38,7,32,5,54,15,3,0,60,20,17,34,30,17,25,29,10,23,5,61,3,7,2,0,49,19,10,0,25,10,0,20,37,10,3,0,49,0,16,22,0,20,12,0,29,10,0,19,28,40,12,3,0,32,0,31,9,29,0,24,2,0,56,19,10,0,45,56,18,40,0,33,18,45,0,14,32,0,33,35,17,0,48,31,0,75,49,50,31,11,10,36,3,2,0,58,19,10,0,53,10,10,0,47,49,43,0,33,28,27,17,0,25,24,3,0,18,49,2,0,36,33,11,38,8,45,3,1,0,62,19,10,0,54,60,37,33,47,25,22,20,10,26,27,5,3,0,28,26,2,0,53,19,10,0,45,20,69,61,33,31,32,68,30,29,34,21,7,11,0,42,17,24,19,43,11,0,54,43,24,31,49,39,21,7,23,40,11,3,0,13,2,0,95,18,57,86,5,2,0,0,105,53,0,61,37,15,15,0,63,32,46,40,56,0,54,46,0,33,27,0,58,26,15,0,33,23,41,14,0,49,67,44,0,50,42,3,0,7,2,0,62,61,37,18,44,56,5,2,75,0,40,0,27,46,0,60,14,15,0,54,39,35,46,12,49,16,22,5,3,0,35,40,0,25,33,7,2,0,41,41,29,36,0,32,15,0,47,28,0,25,16,0,46,32,24,0,32,17,0,54,48,3,33,27,23,27,10,53,37,19,10,35,5,3,0,18,50,13,31,0,33,42,63,60,52,15,47,12,44,8,12,41,5,3,2,0,57,62,32,15,3,0,36,29,0,59,32,0,15,11,44,41,0,30,15,0,26,2,0,12,53,0,15,18,20,35,19,0,18,16,24,27,0,24,29,0,32,26,0,30,18,41,45,47,4,2,0,4,3,23,24,25,26,4,37,15,24,31,11,24,4,3,2,0,4,3,23,24,25,4,30,15,24,34,11,24,4,3,2,1,0,12,0,53,68,0,15,26,21,23,18,19,28,0,37,4,3,30,30,4,28,10,0,28,21,0,28,21,2,0,4,3,26,28,26,27,23,4,35,13,20,42,46,42,29,31,28,0,61,0,27,29,45,5,0,29,38,5,0,37,39,0,36,40,36,0,29,29,4,0,28,28,0,36,14,38,48,67,49,18,12,8,7,6,66,40,5,4,0,20,42,46,28,31,0,61,0,27,29,45,5,0,29,38,5,0,39,0,36,40,0,29,4,3,0,14,2,1,0,12,0,53,62,65,0,3,2,24,12,24,24,12,22,3,40,47,34,1,0,23,82,48,49,1,26,44,42,45,37,22,46,30,18,28,30,21,51,30,67,37,82,45,37,34,65,68,69,45,44,46,13,39,73,39,13,47,9,43,5,20,1,29,20,47,8,31,19,22,26,9,35,22,18,1,0,37,59,2,0,43,36,2,0,43,48,2,0,51,20,16,25,0,17,17,0,24,24,21,0,60,32,44,43,4,2,0,62,23,2,0,64,35,2,0,45,62,0,26,26,30,34,28,0,14,2,0,56,47,2,0,53,18,16,12,21,2,2,0,61,18,16,12,25,2,2,0,74,24,20,18,18,2,28,0,20,0,13,2,0,64,35,2,0,66,35,2,0,50,37,0,57,53,0,32,0,60,29,17,0,18,0,19,37,27,20,9,32,2,0,27,58,26,22,0,17,2,0,51,47,2,0,51,41,40,0,44,0,22,33,69,3,14,0,9,33,0,42,41,2,2,0,55,41,40,0,44,0,22,33,41,34,3,14,0,9,33,0,42,41,2,2,0,26,92,2,73,84,42,82,1,0,50,18,29,35,49,31,45,2,0,55,29,2,0,49,80,2,0,30,30,0,74,76,0,50,14,2,0,51,52,13,38,14,2,0,44,55,48,39,14,0,37,1,0,38,37,33,0,32,0,38,20,18,2,0,24,27,38,2,0,44,1,0,43,0,28,53,1,0,31,40,22,0,58,24,37,2,0,32,12,29,17,24,32,10,11,14,4,3,19,41,40,3,1,0,43,20,28,30,15,58,21,2,0,88,22,78,23,27,3,33,27,38,2,0,23,21,2,0,123,37,18,0,40,73,88,3,0,45,17,18,31,60,32,16,10,19,33,17,3,0,25,2,0,21,2,0,55,22,0,29,0,24,46,28,60,3,31,2,0,60,2,0,15,0,16,19,20,17,2,0,59,40,0,51,0,32,59,55,55,58,58,58,55,55,69,82,67,55,73,4,0,25,35,2,0,85,35,2,0,60,92,0,23,13,2,0,75,95,0,20,0,31,0,13,28,9,24,2,13,2,0,77,95,0,20,0,33,0,13,29,9,24,2,13,2,0,51,76,0,37,90,0,24,50,46,0,45,71,0,24,38,42,0,33,3,0,36,2,0,32,0,34,68,2,0,67,0,27,27,0,15,2,0,84,22,0,25,0,21,43,46,0,42,0,18,31,2,0,44,32,0,60,0,21,20,16,18,8,56,5,10,102,3,0,60,4,0,9,64,91,68,15,24,3,2,0,70,58,2,0,71,56,2,0,71,28,0,29,22,24,2,0,74,0,47,0,25,0,28,21,0,23,18,80,43,57,25,4,5,2,0,63,34,69,35,15,3,0,52,0,19,29,0,16,22,0,21,32,61,0,31,82,5,4,10,27,0,28,33,41,0,25,39,61,40,0,38,37,14,42,26,37,7,6,5,0,19,4,3,0,24,21,2,0,52,0,13,2,0,53,100,2,0,75,28,135,29,2,0,40,2,0,77,29,138,30,2,0,42,2,0,66,98,0,20,18,20,0,33,28,0,30,26,0,36,59,61,0,42,47,0,39,44,0,54,18,34,29,2,0,26,30,0,43,42,13,2,0,87,98,0,53,49,0,77,19,103,0,20,18,0,24,28,179,29,3,0,32,2,67,71,0,17,49,36,2,0,33,28,0,13,66,60,3,0,46,0,23,26,27,26,23,4,0,25,3,9,33,70,0,77,23,27,2,13,2,0,62,92,0,35,13,2,0,77,95,0,20,0,31,0,13,29,9,36,2,13,2,0,79,95,0,20,0,33,0,13,30,9,36,2,13,2,0,63,53,49,0,36,0,96,72,0,20,18,0,33,0,16,19,19,17,0,59,2,13,2,0,57,23,47,28,5,25,50,27,54,25,50,34,23,47,11,2,0,57,45,22,46,26,28,5,31,44,24,59,35,3,0,33,46,24,61,37,3,0,31,44,24,59,35,3,34,41,22,56,29,2,0,61,36,51,0,53,49,0,17,0,20,29,63,33,46,17,3,0,21,2,0,52,94,0,24,16,71,25,3,0,58,55,91,0,66,93,0,54,0,59,25,3,0,20,9,3,0,21,2,0,15,2,0,46,59,26,24,42,0,14,2,0,58,58,0,36,39,0,16,71,0,76,2,2,0,75,44,76,47,18,129,4,2,0,35,0,27,32,37,0,61,0,32,13,2,0,57,22,0,29,16,26,21,2,0,25,2,0,55,29,5,49,51,45,20,30,13,2,0,53,29,16,5,75,30,15,2,0,59,30,2,0,57,51,2,0,77,49,0,41,40,0,28,0,5,22,34,0,50,26,34,32,4,0,33,47,43,3,0,31,25,17,0,14,2,0,63,31,13,2,81,54,0,41,40,0,29,0,5,22,36,0,26,21,65,0,33,47,43,3,0,31,21,17,0,14,2,0,67,33,13,2,0,36,43,64,5,37,20,24,30,43,86,90,60,112,84,85,77,64,49,35,65,92,36,34,51,33,9,5,17,1,0,24,18,2,0,36,7,61,17,31,14,3,1,0,64,0,59,0,45,71,30,1,0,41,0,53,40,0,25,31,30,0,32,24,38,26,32,14,36,26,31,33,16,52,56,38,20,37,13,11,9,14,34,26,64,34,16,33,9,14,31,26,14,5,3,0,64,1,0,56,50,75,0,39,43,45,43,41,0,61,55,58,0,42,0,94,97,78,14,0,17,199,0,45,99,1,0,60,83,1,0,61,114,1,0,42,28,64,38,48,43,20,21,16,4,5,4,10,1,2,0,248,0,28,40,24,1,2,0,54,42,9,19,14,34,66,3,3,1,0,49,40,1,0,52,58,68,69,9,37,2,1,0,50,48,49,29,108,2,46,0,27,35,29,31,41,44,24,3,2,41,34,63,24,7,3,2,24,32,21,28,14,13,1,0,18,28,14,12,45,26,24,27,17,6,24,4,2,26,14,0,15,1,0,49,24,47,44,60,83,49,15,13,1,0,25,24,15,0,26,17,31,56,12,8,3,0,12,29,0,63,26,0,13,1,0,74,60,24,13,23,26,2,15,30,82,33,68,10,51,3,0,32,54,3,0,94,67,45,24,4,46,25,4,47,24,4,3,35,53,43,30,2,13,1,0,59,65,29,22,2,30,1,0,59,71,29,59,50,55,18,52,23,36,62,5,55,17,60,25,31,36,20,38,22,21,18,40,105,9,8,11,72,23,51,20,7,33,34,6,2,74,1,0,46,42,2,0,82,22,98,5,1,0,49,0,50,12,53,28,86,0,26,61,11,3,0,31,44,3,0,22,1,0,22,76,25,16,3,66,1,0,37,34,1,0,45,66,52,45,64,21,2,0,40,30,0,7,64,18,105,19,5,21,14,3,0,20,1,0,76,97,51,49,0,56,57,107,3,14,1,0,38,31,25,3,34,28,92,15,0,44,48,58,10,3,0,24,1,0,61,50,90,1,0,28,7,55,21,25,3,15,1,0,43,44,93,46,96,78,60,30,103,7,5,3,100,21,4,67,1,0,59,57,62,0,44,27,14,19,6,54,5,40,0,17,1,0,73,59,28,38,48,41,5,10,92,3,1,0,49,37,73,1,0,60,63,58,3,27,18,36,158,45,156,30,122,34,71,1,0,45,84,113,66,34,62,5,1,0,60,113,66,34,60,5,1,0,37,5,24,29,28,22,3,27,78,48,79,37,61,38,109,8,69,13,37,45,44,78,5,85,3,58,1,0,52,0,57,77,1,0,46,27,87,14,4,1,0,35,50,22,59,0,72,59,0,52,11,51,57,21,18,7,5,0,21,3,0,68,88,22,5,0,20,70,56,22,0,67,31,58,22,5,0,62,67,37,0,24,50,34,52,0,76,33,63,7,5,0,8,40,41,46,7,22,5,0,36,18,5,0,24,15,15,41,23,58,74,10,8,26,22,57,7,38,94,34,52,67,68,74,7,22,7,4,1,0,70,62,45,26,26,19,44,70,76,32,28,28,5,3,69,20,146,6,3,1,0,19,46,0,39,0,46,0,41,0,34,0,53,0,52,2,0,21,41,1,0,31,37,36,85,14,1,0,25,26,51,80,72,14,1,0,24,29,1,0,27,19,0,44,35,0,38,49,23,3,0,46,0,24,22,0,44,1,0,38,0,36,25,100,68,43,3,15,1,0,54,9,32,11,82,96,42,0,44,46,33,73,13,5,3,0,33,8,43,46,45,7,13,5,3,0,69,0,86,53,0,47,56,1,0,38,66,1,0,37,45,8,37,43,43,30,7,18,5,17,5,1,0,63,18,24,20,24,32,3,21,25,33,3,13,11,50,47,1,0,42,14,13,14,10,27,39,27,22,31,26,7,15,13,23,24,3,21,32,0,33,39,18,14,25,31,43,17,6,10,54,18,29,27,20,29,21,30,8,12,17,20,16,27,33,33,32,28,19,20,37,21,30,8,5,3,23,65,3,0,48,1,0,44,14,10,21,27,39,13,3,52,61,3,84,52,60,1,0,32,21,14,23,15,24,3,26,22,63,80,42,34,21,7,4,1,0,20,14,10,21,27,27,26,22,13,14,31,15,24,3,36,51,52,73,3,0,38,67,61,32,31,73,62,43,33,7,68,5,27,52,5,0,35,51,12,98,5,3,0,55,38,58,35,35,94,99,3,0,68,62,89,79,10,28,92,6,3,1,0,42,26,51,0,70,48,0,39,1,0,33,10,92,70,4,1,0,55,10,35,31,37,34,29,4,1,0,48,53,36,1,0,36,10,32,44,97,4,1,0,66,0,46,75,1,0,65,56,1,0,36,45,29,47,1,0,71,57,9,105,54,20,7,18,43,19,5,0,17,3,0,50,103,52,18,5,3,0,15,1,0,31,29,47,35,51,0,72,43,50,26,45,55,5,3,0,34,38,37,0,36,25,19,30,8,5,0,38,3,0,54,16,25,31,20,16,27,15,16,7,14,5,46,44,21,17,6,23,69,34,19,95,35,11,8,42,19,99,8,5,50,80,5,43,37,82,7,68,19,84,73,12,8,5,61,3,0,10,24,20,46,4,1,0,51,40,17,13,3,14,74,63,25,24,90,10,42,17,61,36,5,89,3,1,0,84,0,81,0,92,0,27,8,7,5,13,15,16,24,40,12,33,26,14,12,11,24,3,52,46,16,18,19,18,18,4,33,35,105,41,23,23,32,25,0,28,0,76,71,43,32,0,9,24,20,46,27,0,66,81,80,36,34,47,33,46,47,38,50,45,40,50,0,15,25,35,20,15,7,0,75,34,7,0,24,41,58,22,53,51,7,0,46,26,28,44,48,11,17,36,54,52,69,0,79,80,0,55,40,0,90,57,50,37,46,65,60,15,0,53,34,61,61,57,38,19,62,36,17,15,57,37,34,22,64,15,20,86,26,33,16,50,51,45,75,38,46,15,13,0,40,18,65,40,13,11,17,32,42,78,88,50,62,20,32,13,19,11,0,14,33,52,54,69,13,51,35,27,33,100,17,14,34,32,30,48,15,31,15,14,19,11,0,61,48,42,11,64,42,74,0,41,53,0,46,16,34,44,82,0,49,41,15,13,0,53,85,36,69,47,58,15,84,20,18,46,78,17,51,75,47,40,31,29,70,78,41,106,24,20,44,17,23,15,0,38,76,15,13,0,34,49,73,23,15,0,18,55,32,47,17,114,94,55,15,20,62,0,72,23,15,0,59,13,11,17,9,37,27,31,35,46,61,45,11,17,28,32,76,25,27,56,80,57,100,37,23,19,17,0,23,15,0,88,39,33,37,104,21,18,15,43,50,89,24,98,35,21,17,15,40,21,26,27,32,32,21,26,33,34,95,33,19,15,21,26,72,31,17,21,20,32,21,11,9,32,80,92,29,15,42,44,11,17,31,52,35,30,11,17,30,73,35,31,32,93,31,17,13,11,17,31,144,43,56,35,0,55,0,16,55,47,45,15,71,32,17,13,11,17,35,30,44,11,7,6,0,17,24,43,58,5,5,0,31,78,87,54,68,87,3,0,36,14,18,19,74,30,17,89,0,6,6,31,36,20,21,21,27,26,53,8,34,5,57,3,0,26,30,49,54,45,3,0,31,17,16,17,42,94,17,16,43,15,15,0,65,16,25,31,20,17,27,15,16,7,14,4,0,32,8,39,20,19,20,19,33,45,33,28,45,32,13,21,19,29,30,8,0,19,57,3,0,13,11,42,25,0,10,33,54,66,51,4,1,0,33,51,64,9,17,26,55,57,16,14,34,53,35,42,21,23,38,20,35,82,27,35,54,36,13,100,0,91,33,4,74,50,80,11,0,47,46,41,0,23,40,22,37,43,20,0,57,16,50,36,47,45,55,32,15,0,12,60,53,6,4,0,45,0,48,0,47,75,51,12,99,5,0,93,17,11,8,6,27,41,5,26,40,5,0,8,63,95,7,59,5,0,56,65,22,51,49,5,0,29,17,11,9,17,33,20,63,44,16,37,30,18,16,10,35,6,3,0,10,21,0,18,78,41,18,126,10,7,6,0,14,0,14,30,87,7,0,38,42,7,0,43,53,37,17,45,81,30,11,16,78,57,86,21,43,16,77,9,16,15,44,51,10,7,0,44,54,39,16,66,51,10,7,0,45,55,38,19,77,10,7,0,39,81,7,0,47,50,7,0,63,86,7,0,53,38,70,19,10,7,0,42,52,37,19,45,37,36,30,10,7,0,18,6,0,28,21,0,53,51,7,0,41,10,29,37,46,54,9,20,7,0,11,64,21,40,7,6,0,60,60,71,15,7,61,5,4,1,0,15,0,17,0,17,0,62,45,27,79,1,28,38,24,23,31,30,25,36,9,14,42,9,5,18,1,30,0,17,0,62,35,35,35,1,46,0,14,0,59,36,25,30,25,61,69,57,47,47,51,63,5,1,47,46,1,53,0,16,0,61,95,29,60,72,3,56,3,28,40,1,25,38,41,1,35,28,62,1,25,41,104,81,34,49,68,69,9,5,17,1,57,0,19,0,3,59,2,43,34,3,0,43,46,17,3,0,12,56,30,51,3,0,15,2,0,3,53,2,43,34,3,0,28,44,33,23,16,3,16,21,28,27,27,26,30,29,18,5,0,63,18,5,0,82,37,51,7,37,73,22,9,50,73,22,9,7,5,0,81,48,36,50,72,22,9,7,5,0,139,48,36,50,72,22,9,7,5,0,75,30,44,7,59,54,42,56,74,24,11,9,7,5,0,30,32,17,30,0,18,42,23,24,9,7,0,31,20,7,12,14,5,3,15,2,0,34,23,16,3,16,30,41,18,5,0,30,32,17,30,0,18,42,23,24,9,7,0,31,20,7,12,14,5,3,15,2,0,46,46,17,3,0,23,16,3,0,26,0,27,44,25,3,0,20,2,0,24,51,57,0,16,22,34,43,44,0,3,22,23,47,20,3,51,63,0,33,69,40,3,0,75,28,17,3,0,59,13,0,38,6,32,46,0,42,36,2,0,17,0,21,0,28,32,33,3,53,41,3,15,2,0,3,32,3,0,75,0,3,32,3,0,55,36,71,63,2,0,3,52,3,0,46,28,20,0,86,32,37,26,5,3,2,0,3,76,3,0,32,42,52,24,16,3,15,2,0,3,43,3,0,35,43,58,54,25,16,3,52,25,16,3,15,2,0,3,50,3,0,33,54,16,3,51,2,0,3,33,3,0,55,49,48,13,7,0,3,19,3,0,32,20,23,42,23,74,5,18,4,13,16,2,12,0,24,0,42,42,79,78,20,0,21,73,33,7,24,5,0,21,24,5,0,21,37,35,7,5,18,4,0,24,2,0,3,57,2,46,34,3,0,32,32,27,3,53,68,3,15,2,0,3,64,2,46,34,3,0,30,0,47,34,84,3,0,38,23,3,0,34,86,3,0,46,46,49,3,0,38,41,37,31,76,0,54,49,3,0,29,29,0,30,33,23,27,5,30,20,5,27,3,0,52,33,21,21,0,17,30,44,3,0,14,41,66,20,3,0,15,51,3,0,30,30,55,0,30,39,80,41,3,0,41,22,2,0,45,64,63,63,74,31,1,0,34,16,16,0,36,29,0,38,20,15,34,3,0,40,0,37,20,15,42,3,0,21,22,15,1,0,3,37,26,25,19,3,0,47,23,52,3,0,32,29,19,16,0,36,44,0,35,28,0,57,57,0,12,14,5,3,0,14,60,3,0,45,1,0,50,39,18,18,11,0,43,24,66,19,0,64,34,25,7,0,36,60,22,15,5,0,23,42,5,0,63,21,20,15,3,0,16,1,0,73,18,0,24,25,0,42,67,35,5,0,29,65,35,5,3,16,1,0,3,14,3,0,20,15,60,13,1,0,24,36,1,0,34,43,1,0,31,62,1,0,37,51,1,0,31,38,26,51,3,12,1,0,42,49,1,0,26,31,1,0,40,22,17,3,0,57,43,0,17,11,16,11,32,11,37,14,51,5,3,1,0,3,8,3,0,26,62,0,3,24,3,0,36,0,3,59,2,46,34,3,0,37,36,0,89,0,33,68,2,0,31,82,2,0,47,0,24,25,17,47,34,33,19,2,0,46,61,16,3,36,2,0,45,22,43,37,75,3,27,25,3,15,2,0,40,45,17,27,16,3,55,42,2,0,40,61,61,0,43,21,21,13,0,31,42,3,0,31,59,3,0,31,41,10,36,3,0,21,34,3,0,16,2,0,47,18,59,3,0,37,28,0,36,30,2,0,42,29,37,45,68,3,43,2,0,33,79,2,0,47,68,12,2,0,40,38,66,3,12,2,0,61,24,22,0,53,70,14,3,0,22,21,21,0,25,34,30,32,37,0,75,94,80,58,0,38,82,3,0,47,83,17,16,0,40,47,14,12,58,5,41,12,3,0,33,19,34,58,3,0,15,2,0,61,85,45,3,0,0,70,35,33,0,25,27,27,0,38,45,3,0,17,16,0,40,33,41,12,3,0,33,58,3,0,15,2,0,52,43,19,3,0,51,45,3,0,35,54,3,0,25,39,3,0,28,46,32,0,24,74,39,3,0,41,47,3,0,68,2,0,23,0,25,24,0,42,37,54,78,64,60,20,0,31,33,5,32,33,5,0,31,51,5,0,32,51,5,0,32,76,5,0,21,24,5,0,40,44,78,0,31,74,7,5,0,21,37,36,7,5,18,4,0,19,2,0,26,0,23,32,24,0,63,18,0,27,27,0,34,22,75,3,0,27,30,31,53,7,12,30,74,86,7,5,3,33,2,0,41,77,0,37,20,0,19,25,0,65,19,18,5,0,38,60,13,5,0,84,40,13,5,0,40,44,0,68,132,7,0,41,31,43,7,0,39,22,13,5,0,45,27,21,0,77,27,26,5,0,49,32,0,60,36,23,17,7,0,35,50,17,7,0,49,55,17,7,0,24,26,7,5,0,17,4,0,36,2,0,24,0,19,24,0,11,22,22,0,20,32,32,32,32,0,37,38,0,29,0,26,30,23,31,29,38,38,26,26,27,24,33,26,37,32,34,25,33,39,37,40,32,45,28,25,34,40,38,41,30,34,26,26,31,34,54,2,0,32,0,3,12,3,0,7,13,25,24,21,19,32,33,32,33,35,36,28,28,22,31,16,0,3,8,3,0,42,34,45,3,0,27,99,27,93,3,0,47,20,18,17,19,28,16,16,12,0,5,12,5,0,39,24,54,25,5,0,63,31,13,5,0,27,24,21,16,16,4,0,24,0,26,36,22,0,7,20,7,0,83,15,5,0,7,20,7,0,35,85,15,5,0,7,42,7,0,46,50,15,5,0,7,31,7,0,45,17,15,0,52,22,0,48,21,19,9,0,38,29,19,9,0,49,21,0,31,18,11,9,7,0,36,15,5,0,7,18,7,0,42,49,24,36,15,5,0,43,35,38,17,7,26,36,38,15,5,0,7,20,7,0,96,23,15,0,40,19,7,0,52,38,36,19,9,0,28,57,16,9,0,22,7,0,36,15,5,0,7,28,7,0,42,14,0,87,19,22,19,21,15,14,18,18,17,8,0,26,24,36,15,5,0,7,29,7,0,43,35,38,17,7,0,25,26,25,0,28,14,0,38,15,5,0,7,17,7,0,44,29,25,39,74,7,0,37,21,15,5,0,7,15,7,0,64,33,0,49,38,17,7,0,32,25,28,28,0,67,31,27,29,19,9,0,23,24,17,7,0,34,23,0,51,43,22,23,17,7,0,35,15,5,0,7,11,7,0,34,3,0,51,6,24,0,32,35,26,55,57,46,30,9,9,0,73,43,46,52,52,5,29,0,24,13,2,0,24,0,32,26,24,26,0,3,64,2,8,36,70,55,6,24,28,19,14,3,0,43,18,0,29,32,53,34,31,14,28,7,5,10,56,3,0,71,34,3,16,2,0,3,50,2,8,41,41,20,6,49,26,34,14,3,0,66,0,3,55,2,8,36,43,53,6,48,28,55,14,3,0,47,34,64,3,37,2,0,3,70,75,2,8,36,44,21,6,48,28,55,14,3,0,45,34,43,3,33,2,0,3,70,72,90,56,2,8,36,43,27,6,42,28,55,14,3,0,44,34,43,3,0,38,0,42,33,36,3,0,39,33,34,3,0,16,2,0,3,65,77,64,2,8,36,72,67,6,42,28,55,14,3,0,44,41,19,3,0,31,38,38,2,0,3,18,3,0,24,0,37,26,32,24,58,0,3,68,2,8,36,36,2,48,18,6,65,90,62,46,17,14,3,0,51,33,25,0,23,23,24,20,0,27,28,38,30,5,4,0,45,83,72,29,0,28,40,0,63,27,0,20,33,14,36,33,7,5,3,0,70,55,0,40,36,71,5,0,63,83,5,3,0,17,2,0,3,26,3,0,34,0,3,74,81,33,2,8,36,37,2,41,42,41,6,41,28,49,14,3,0,75,0,3,85,2,8,36,46,2,60,52,6,44,82,65,61,14,3,0,87,0,3,26,3,0,40,0,3,81,2,8,36,40,2,53,22,6,51,81,101,88,14,3,0,54,45,25,17,0,27,50,29,4,0,71,0,27,34,23,5,3,21,2,0,3,73,76,2,8,34,46,2,46,12,46,13,6,45,69,101,83,14,3,0,52,32,71,3,0,31,69,3,0,36,59,19,5,0,92,18,5,3,0,76,2,0,3,68,82,31,2,8,36,48,2,45,40,19,6,59,82,101,83,14,3,0,54,31,71,3,63,15,44,13,2,0,3,98,2,8,36,41,2,67,10,57,11,6,116,82,101,88,14,3,0,50,30,0,44,56,44,18,5,3,15,2,0,3,59,36,2,8,36,42,2,47,10,57,10,68,11,58,11,6,71,82,101,88,14,3,0,51,30,0,44,56,46,19,5,3,14,2,0,3,56,24,2,8,36,42,2,45,10,2,54,11,2,53,10,2,65,10,6,50,82,101,61,14,3,0,48,32,71,3,0,70,2,0,3,104,2,8,36,45,2,55,15,55,12,6,59,42,101,109,14,3,0,50,41,78,72,0,14,58,3,2,0,3,61,2,8,36,36,2,34,49,6,64,28,67,14,3,0,63,0,3,66,33,2,8,36,45,6,28,28,42,14,3,0,59,0,3,65,14,2,8,36,40,6,25,28,106,14,3,0,45,15,50,57,48,5,3,13,2,0,3,37,2,8,44,42,29,2,60,49,6,66,144,18,14,3,0,45,76,73,21,3,36,2,0,3,16,3,0,50,76,68,2,0,3,20,3,0,34,0,64,708,29,34,36,24,27,41,52,64,53,47,49,47,1,44,50,7,110,51,83,7,25,21,5,7,120,50,7,82,20,5,137,20,5,79,20,5,73,20,5,17,1,46,37,51,35,21,5,74,35,21,5,77,60,1,44,67,1,62,44,25,1,62,37,57,1,48,37,39,1,48,40,46,1,52,42,46,1,54,3,69,2,11,25,75,3,54,85,1,80,3,79,2,11,24,75,3,55,62,1,82,53,66,1,80,36,61,1,46,31,40,1,36,41,46,1,56,49,46,71,1,72,53,53,64,11,1,78,40,41,21,21,7,1,54,44,107,7,60,52,7,29,26,5,7,90,55,7,35,37,26,5,17,1,44,35,49,1,26,49,63,1,52,38,65,1,30,0,18,0,2,9,39,2,37,34,3,37,39,36,0,24,0,22,26,37,22,38,0,67,15,10,17,3,0,38,49,35,30,3,38,38,3,44,0,25,59,61,5,18,15,3,0,27,18,12,5,19,0,39,19,34,12,5,34,26,5,0,40,0,22,29,14,7,22,20,5,0,28,25,56,44,26,50,9,15,7,30,40,7,26,45,21,7,0,42,30,0,24,36,7,0,48,34,22,5,0,46,23,5,0,11,3,0,25,20,49,36,16,25,5,3,0,34,31,47,35,5,0,20,32,3,21,1,0,36,42,32,46,50,51,5,69,60,5,20,10,57,53,5,3,16,1,0,63,24,24,27,41,33,75,7,76,74,24,1,25,48,54,1,0,18,0,63,46,26,37,1,29,25,24,1,27,0,62,119,22,22,22,22,18,18,22,22,26,26,26,26,26,26,0,60,228,24,39,59,86,116,118,102,103,44,1,26,3,54,2,109,94,3,62,21,105,103,103,101,96,6,115,123,7,45,102,5,10,99,5,17,1,54,40,57,1,48,58,82,76,20,1,68,49,21,53,63,33,43,9,14,41,9,26,14,1,66,67,48,82,7,1,64,71,12,16,17,17,13,93,6,1,60,0,18,0,63,62,3,121,89,68,3,41,30,70,1,31,3,68,127,3,42,51,1,57,0,17,0,18,0,15,0,17,0,62,22,43,52,34,56,19,9,70,51,19,9,53,37,62,63,27,17,55,23,13,44,49,13,50,11,7,1,22,49,20,1,50,27,1,0,16,0,61,21,33,46,66,21,5,9,48,40,45,9,20,5,19,55,25,9,20,5,1,21,0,20,0,14,0,21,62,71,23,31,20,18,28,25,2,45,34,43,5,84,1,58,9,0,65,18,18,32,33,89,65,86,113,5,30,69,5,1,32,0,60,54,24,22,32,38,62,60,73,15,5,77,1,20,44,54,39,1,26,48,60,33,5,55,1,0,15,0,17,0,17,0,15,0,17,0,88,0,12,0,59,80,51,52,13,54,0,85,0,32,0,42,0,34,29,20,0,29,17,27,10,30,17,26,3,0,23,21,31,16,5,38,15,3,0,34,24,33,16,5,3,0,17,12,15,20,13,33,69,7,10,12,38,61,7,3,0,17,1,0,21,0,66,56,68,97,125,1,73,73,35,35,68,124,3,43,3,102,0,17,0,14,0,59,36,23,30,25,61,69,57,47,47,51,63,5,1,45,44,1,51,0,62,20,18,18,0,18,0,63,35,46,7,107,7,32,21,5,29,1,47,0,62,71,23,26,34,24,26,48,78,62,15,5,45,1,22,64,88,36,58,19,9,50,19,30,98,12,44,53,19,9,80,46,36,58,23,13,56,11,7,1,54,44,22,45,30,19,9,60,37,62,36,27,17,34,23,13,79,30,11,6,1,51,61,36,58,19,9,43,99,30,80,41,36,31,21,35,29,29,77,22,41,44,21,38,19,14,11,43,36,58,23,13,53,11,7,1,28,49,20,1,50,27,1,0,16,0,61,68,23,32,24,26,38,76,57,5,42,1,21,52,80,36,23,19,30,98,10,76,17,63,83,13,27,62,32,17,13,9,21,7,1,51,41,53,32,100,76,23,17,28,65,10,29,32,9,21,7,1,27,0,20,0,14,0,21,62,71,23,31,20,18,28,26,24,31,2,45,34,43,5,84,1,58,9,0,65,29,23,18,18,32,33,92,65,99,64,113,53,57,24,79,11,5,30,69,5,1,32,0,60,60,22,22,32,38,63,60,71,15,5,75,1,24,47,54,39,1,32,48,60,33,5,55,1,0,26,0,34,31,18,0,19,23,0,23,26,12,31,18,5,0,24,0,18,3,0,26,20,15,3,0,10,13,20,3,1,0,26,0,27,0,24,0,51,38,25,21,19,3,0,24,67,3,0,28,23,23,19,26,0,14,15,18,22,17,18,29,21,19,15,19,23,21,18,15,31,16,4,0,13,0,23,19,3,0,21,23,3,0,22,28,20,0,21,29,16,5,0,18,3,0,24,28,19,0,21,32,29,5,0,16,3,0,22,28,24,48,17,16,5,3,0,20,48,3,0,31,30,0,30,30,26,38,40,0,55,22,33,28,14,28,28,25,7,12,17,58,5,3,0,34,30,0,30,30,26,38,0,55,22,33,28,14,28,28,25,7,12,17,58,5,3,0,29,17,28,5,25,15,25,38,27,9,30,25,54,33,23,9,14,19,7,34,19,5,3,0,20,21,21,24,3,0,28,21,21,17,24,3,0,28,27,3,1,0,21,0,18,20,25,19,24,22,27,0,18,0,47,33,41,25,22,27,28,29,5,45,23,4,1,0,57,38,25,21,19,3,0,35,26,28,22,13,3,0,60,0,26,32,0,20,26,26,0,14,0,25,52,44,18,22,16,9,24,9,7,0,38,47,39,20,0,12,3,0,28,52,47,18,22,16,9,24,9,7,0,38,47,39,20,0,12,3,0,23,36,0,44,33,24,18,8,7,0,12,3,1,0,26,40,0,18,0,63,125,40,40,20,5,40,1,37,41,44,1,43,59,51,1,67,44,19,17,5,7,107,7,32,21,5,29,1,45,0,18,0,63,26,16,35,27,35,97,5,1,28,0,62,39,26,28,26,28,46,35,32,35,44,52,81,35,34,35,38,42,13,10,5,12,35,34,28,67,11,29,5,23,33,5,15,32,63,9,33,35,5,23,44,5,23,46,5,21,44,5,35,46,48,33,41,13,11,5,25,93,33,39,23,13,42,52,13,34,11,5,25,81,19,9,34,33,43,5,31,54,19,9,36,33,106,9,74,35,9,103,85,9,5,23,43,5,1,30,0,62,26,21,35,27,35,73,27,5,20,41,49,11,41,38,11,34,57,11,28,5,1,32,47,20,1,49,28,1,0,18,0,63,41,26,22,35,27,35,73,48,29,28,28,48,43,17,13,11,5,12,41,46,11,41,37,11,34,36,11,28,28,5,1,34,0,16,0,16,0,61,26,26,28,45,19,28,48,27,32,5,12,63,28,29,5,35,45,5,20,50,61,9,5,39,13,87,42,47,13,9,23,37,9,5,25,60,19,9,20,5,31,36,33,106,9,74,39,9,103,85,9,5,27,34,5,1,28,0,61,24,20,35,27,35,72,5,12,35,5,1,30,0,20,0,65,29,24,16,32,33,74,95,73,75,75,99,57,67,33,69,39,88,11,5,30,69,5,1,30,0,60,73,26,28,24,32,38,67,60,90,15,5,94,1,20,49,52,63,27,1,26,51,52,65,27,1,30,46,60,33,5,55,1,0,16,0,61,29,23,24,14,28,35,54,67,34,78,11,5,33,60,5,32,23,26,26,68,10,35,32,9,21,5,26,89,5,1,24,0,63,41,23,23,26,47,19,28,47,35,5,28,47,5,31,69,72,48,77,34,67,39,17,53,33,17,23,14,29,10,52,28,9,22,5,43,38,61,31,45,28,13,24,11,5,24,49,74,71,15,11,5,1,32,0,18,0,14,0,17,0,17,0,62,24,15,59,35,35,53,27,28,5,20,11,120,83,11,90,41,63,71,32,47,24,25,24,15,9,5,34,88,36,83,27,24,35,33,18,13,20,30,30,80,14,11,5,42,127,5,1,26,0,62,26,48,21,42,36,105,41,48,15,105,76,14,32,43,14,63,28,13,56,56,70,32,17,67,32,17,29,15,24,28,13,9,21,5,1,33,0,59,24,26,18,48,35,53,5,45,51,65,77,5,27,88,5,38,108,106,5,51,58,25,9,49,25,9,74,67,25,9,71,5,43,11,71,11,47,25,9,79,5,41,59,30,34,9,57,46,5,35,84,5,54,74,5,57,64,5,1,26,0,17,0,62,24,19,48,35,53,31,5,35,98,98,70,5,44,69,25,9,78,25,9,80,25,9,80,124,49,43,9,25,5,30,42,5,31,46,5,28,66,5,33,77,5,65,39,25,9,82,62,5,7,56,69,7,47,73,118,5,1,30,0,17,0,62,24,19,28,35,5,17,55,5,29,87,5,1,30,0,15,0,60,24,24,28,35,5,22,49,5,23,34,38,79,54,9,75,28,9,41,28,9,75,5,1,33,0,63,29,20,24,24,22,16,28,35,63,93,91,68,5,29,61,5,29,60,16,21,38,52,90,82,54,68,34,40,90,61,10,5,29,16,36,52,52,55,43,49,24,32,10,5,1,28,0,62,28,30,50,19,28,62,5,16,50,53,27,49,57,41,81,55,11,5,30,27,55,9,59,5,1,32,0,16,0,61,41,26,30,51,19,28,60,5,16,50,53,53,91,14,71,86,56,19,51,27,5,30,27,55,9,59,5,1,32,0,16,0,16,0,61,21,21,24,43,19,28,41,41,5,28,45,5,31,27,41,61,69,64,25,13,32,9,23,5,43,13,50,51,9,23,45,28,13,24,9,5,24,62,5,1,28,0,61,24,28,47,19,28,60,5,16,50,53,54,46,5,30,27,55,9,59,5,1,30,0,18,0,21,62,45,23,31,3,95,99,3,48,39,20,28,18,26,24,31,2,16,32,33,70,80,81,89,80,68,65,60,67,91,63,69,63,84,74,84,71,64,82,114,65,35,35,9,25,35,9,5,30,53,5,41,94,5,1,27,13,0,26,32,24,24,22,28,24,42,32,61,44,41,1,67,40,22,36,36,64,44,5,25,38,36,66,11,89,109,80,11,43,5,29,45,36,69,57,56,5,43,48,36,57,66,5,49,33,36,43,5,37,32,47,65,53,59,45,46,1,37,36,113,25,92,5,1,19,0,49,0,58,58,0,30,26,90,3,13,1,0,38,16,0,51,53,30,52,5,3,0,14,1,0,37,26,6,41,44,37,5,96,3,13,1,0,39,30,88,3,0,73,1,0,33,22,27,41,26,40,28,42,21,40,5,12,17,3,1,0,50,36,56,16,3,36,0,29,41,170,6,3,0,29,41,158,6,3,0,58,41,154,6,3,0,21,54,45,41,9,98,91,18,6,3,0,43,41,120,6,3,0,14,1,0,73,50,0,10,51,0,25,24,20,7,0,38,0,34,13,0,22,26,49,19,11,34,0,15,87,96,0,24,55,21,13,0,31,78,43,70,14,0,63,47,101,56,23,85,17,73,62,75,80,8,14,7,14,101,103,25,25,29,69,14,27,62,34,32,33,22,34,15,20,32,13,11,9,9,0,44,16,30,31,21,33,23,12,10,7,18,5,4,1,0,58,36,3,62,3,26,17,12,30,22,26,10,23,38,28,13,49,43,28,13,56,25,28,13,49,45,92,13,26,73,34,63,23,35,38,10,18,47,52,44,13,9,6,1,0,14,19,60,2,0,9,37,2,0,9,49,2,1,0,13,35,21,17,26,0,18,18,0,25,25,22,0,61,33,45,41,5,2,0,22,24,2,0,23,36,2,0,10,63,0,27,27,31,35,29,0,15,2,0,18,48,2,0,15,19,17,13,22,3,2,0,19,19,17,13,26,3,2,0,40,25,21,19,19,3,29,0,21,0,14,2,0,23,36,2,0,24,36,2,0,15,40,0,60,56,0,33,0,61,30,18,0,19,0,20,38,28,21,10,33,3,0,28,55,27,23,0,18,2,0,13,48,2,0,14,42,37,0,47,0,23,34,70,4,15,10,34,0,43,38,3,2,0,16,42,37,0,47,0,23,34,42,35,4,15,10,34,0,43,38,3,2,1,0,20,92,2,73,66,42,64,1,0,17,26,19,30,36,50,32,46,2,0,13,30,2,0,10,81,2,1,0,28,32,0,58,60,0,50,14,2,0,51,52,13,38,14,2,0,44,51,50,39,14,0,37,1,0,36,39,35,0,32,0,38,20,18,2,0,24,27,34,2,0,44,1,0,45,0,26,53,1,0,29,42,24,0,58,24,37,2,0,32,12,29,17,26,32,10,11,14,4,3,21,43,26,3,1,0,16,21,21,29,31,16,59,22,2,0,48,23,81,24,28,4,34,28,39,3,0,24,22,2,0,74,38,19,0,41,74,89,4,0,46,18,19,32,61,33,17,11,20,34,18,4,0,26,3,0,22,2,0,15,19,0,32,0,25,47,29,61,4,32,3,0,61,2,1,0,15,0,18,19,20,18,2,0,19,36,52,0,33,47,40,40,48,47,55,42,40,57,83,63,46,61,5,0,26,36,2,0,29,36,2,0,18,89,0,24,14,2,0,29,92,0,21,0,34,0,14,29,10,25,3,14,2,0,30,92,0,21,0,36,0,14,30,10,25,3,14,2,0,10,77,0,38,91,0,25,51,47,0,48,74,0,25,39,43,0,34,4,0,37,3,0,33,0,35,69,3,0,66,0,28,28,0,16,2,0,30,26,0,24,46,47,0,43,0,19,32,3,0,39,35,0,57,0,22,21,17,19,9,57,6,11,95,4,0,57,5,0,10,65,90,69,9,26,4,2,0,23,57,2,0,20,57,2,0,29,31,0,28,23,25,3,0,75,0,44,0,26,0,29,24,0,24,21,81,38,58,26,5,6,3,0,64,31,64,36,16,4,0,53,0,20,30,0,17,25,0,22,33,62,0,32,83,6,5,11,28,0,29,34,44,0,26,40,62,41,0,39,38,15,43,27,38,8,7,6,0,20,5,4,0,25,22,3,0,53,0,14,2,0,11,18,84,4,2,0,29,29,16,88,39,30,3,0,41,2,0,30,30,16,91,39,31,3,0,43,2,0,26,95,0,21,19,21,0,36,31,0,33,29,0,39,56,64,0,39,44,0,36,41,0,51,19,35,30,3,0,27,31,0,40,39,14,2,0,42,95,0,50,46,0,74,20,19,83,5,0,21,19,0,25,29,17,132,40,30,4,0,33,3,70,74,0,18,52,54,19,16,21,6,3,0,36,31,0,14,21,27,49,62,5,23,26,4,0,47,10,34,71,0,78,24,28,3,14,2,0,19,89,0,36,14,2,0,30,92,0,21,0,34,0,14,30,10,37,3,14,2,0,31,92,0,21,0,36,0,14,31,10,37,3,14,2,0,21,50,46,0,33,0,93,69,0,21,19,0,34,0,17,20,20,18,0,60,3,14,2,0,13,66,29,6,70,76,70,37,66,12,2,0,13,44,64,27,29,6,32,43,77,36,4,0,34,45,79,38,4,0,32,43,77,36,4,37,40,74,30,2,0,47,50,46,0,18,0,21,30,64,34,47,18,4,0,22,3,0,53,84,0,27,17,72,26,4,0,61,56,81,0,69,96,0,55,0,60,26,4,0,21,10,4,0,22,3,0,16,2,0,47,19,29,25,43,0,15,2,0,16,55,0,37,42,0,17,68,0,77,3,2,0,28,45,77,48,19,105,5,3,0,38,0,28,33,38,0,58,0,33,14,2,0,13,23,0,30,17,27,22,3,0,26,2,0,12,30,6,7,49,53,46,4,17,33,14,2,0,11,30,17,6,76,33,16,2,0,14,31,2,0,17,52,2,0,27,52,0,42,37,0,29,0,6,25,37,0,51,27,35,33,5,0,34,48,44,4,0,28,26,18,0,15,2,0,20,32,14,2,29,57,0,42,37,0,30,0,6,25,39,0,27,22,62,0,34,48,44,4,0,28,22,18,0,15,2,0,22,34,14,2,0,15,43,2,0,36,39,41,59,138,31,36,20,46,20,7,11,65,4,3,30,13,22,35,24,4,18,3,62,56,31,28,20,18,36,42,7,6,10,50,36,19,17,35,41,6,3,14,2,1,0,28,10652,0,16,0,21,62,76,27,23,31,45,39,12,23,26,24,28,25,29,6,1,44,19,24,44,65,31,59,36,37,19,64,1,40,27,29,28,23,35,6,3,26,79,1,41,18,30,51,38,28,28,19,67,6,40,51,41,22,118,9,43,159,9,7,16,1,37,50,26,137,1,52,52,51,21,54,57,12,19,11,1,37,18,61,1,38,16,70,37,52,1,35,123,12,50,68,28,29,29,14,74,74,21,55,17,28,29,17,72,50,50,64,73,46,52,51,30,21,29,17,54,55,29,30,42,46,17,22,54,68,17,43,22,13,65,39,37,10,30,39,66,54,45,46,46,67,42,59,34,61,38,19,13,28,29,34,14,50,51,34,38,38,34,19,35,27,49,91,10,6,1,30,39,123,12,44,68,28,29,29,14,74,74,21,44,17,28,29,17,50,66,50,58,73,46,52,51,30,21,29,17,54,55,29,30,42,46,17,22,54,62,17,43,22,13,65,39,37,10,24,39,66,54,45,46,46,61,42,53,34,61,38,19,13,28,29,34,14,50,51,34,38,38,34,19,75,91,10,6,1,38,11,0,14,0,20,0,28,0,14,14,15,11,22,19,2,14,17,27,31,33,21,25,23,23,23,13,21,25,17,31,31,13,22,2,46,21,31,31,30,2,0,30,17,33,0,25,16,20,39,3,0,12,1,0,26,22,0,32,37,14,10,41,0,29,76,34,28,5,3,0,10,15,7,4,1,3,65,26,25,3,0,3,63,2,74,71,26,2,62,25,2,25,42,22,3,0,0,34,60,9,15,7,22,62,0,47,32,0,25,14,16,43,8,5,0,34,18,12,6,3,0,33,10,9,42,4,1,3,40,2,74,71,26,2,62,2,47,42,21,3,0,29,9,15,7,22,75,37,79,0,60,0,31,1,3,78,2,78,58,2,80,74,2,22,29,29,43,32,21,3,0,27,8,5,24,37,24,7,7,12,0,30,31,46,12,49,87,35,43,5,3,0,17,18,0,12,81,35,12,56,19,5,3,0,52,33,44,1,0,13,21,43,3,0,27,23,28,3,0,13,81,3,5,76,62,4,62,71,80,5,0,0,28,11,12,9,13,0,42,29,25,20,5,0,19,0,27,40,5,0,31,25,0,27,49,39,5,0,27,22,3,0,1,0,30,0,14,48,49,53,71,17,0,0,47,28,26,33,44,0,14,36,12,81,5,0,32,32,49,32,63,3,0,39,25,34,99,0,65,0,46,18,3,0,35,25,0,45,0,18,3,0,33,25,0,52,0,18,3,0,39,25,0,60,0,18,3,0,35,29,35,0,52,0,22,3,5,71,18,4,24,27,30,23,5,0,0,51,53,0,37,19,12,55,28,43,5,0,16,3,0,43,27,73,3,0,64,44,36,43,70,0,0,39,27,117,74,34,0,0,43,20,22,18,29,0,54,19,18,22,22,23,16,0,18,46,63,16,0,17,23,22,16,7,0,27,5,0,26,46,12,11,13,11,6,3,0,37,44,29,20,7,22,22,27,29,21,22,3,0,35,35,11,9,21,33,104,3,0,16,49,61,40,5,0,16,3,0,17,24,0,49,63,50,5,0,60,3,0,39,11,9,21,63,39,11,9,24,57,3,0,20,23,13,11,23,0,51,67,7,5,0,17,3,0,18,23,13,11,23,0,51,67,7,5,0,17,3,0,31,17,3,0,18,95,51,3,0,24,55,66,33,62,12,12,9,6,3,0,18,55,11,12,9,24,46,3,0,13,49,56,0,24,29,18,38,12,16,52,66,18,19,18,12,9,7,5,0,16,3,0,35,56,11,12,9,24,11,9,21,0,39,39,5,0,17,3,0,23,11,9,21,0,38,51,49,36,17,5,0,17,3,5,74,64,4,62,71,80,5,0,0,29,65,66,62,18,3,0,14,11,16,11,8,12,11,13,36,50,59,3,0,1,0,31,38,102,12,21,27,25,3,0,16,29,37,64,0,42,59,56,0,18,21,27,28,10,24,16,13,10,7,0,25,12,37,48,5,0,23,13,13,11,29,56,61,47,5,0,23,3,0,1,44,32,49,3,0,1,43,32,48,3,0,1,41,32,46,3,0,1,37,32,42,3,0,1,0,43,19,37,19,23,25,20,7,10,21,3,0,13,1,0,35,40,24,23,0,31,96,35,115,61,18,16,5,0,18,3,0,18,55,9,12,9,24,11,9,21,26,0,90,0,17,0,39,24,0,24,15,15,16,43,20,19,45,35,26,30,0,60,17,28,9,0,79,14,18,7,5,0,27,0,18,16,9,70,60,18,19,15,12,9,0,15,15,9,80,60,18,19,15,12,9,0,14,19,5,3,0,26,11,13,13,9,21,23,25,0,63,60,67,50,0,30,21,14,60,26,7,5,0,65,35,20,3,5,41,4,24,8,13,4,15,4,24,4,15,10,10,4,13,10,10,8,79,4,34,53,78,5,0,0,25,27,11,13,9,16,23,27,0,42,58,5,0,47,49,39,0,56,44,5,0,18,3,0,1,0,31,33,45,33,31,41,59,57,53,45,53,55,45,0,38,0,43,17,40,3,28,0,0,31,58,42,16,3,5,40,4,34,56,58,5,0,0,25,27,58,21,3,0,1,0,48,28,23,21,3,0,31,58,3,5,34,53,58,5,0,0,25,27,11,16,9,16,9,18,15,16,187,68,67,25,37,24,25,0,39,23,65,59,21,14,27,31,72,0,59,38,39,15,24,9,0,63,7,0,23,5,0,124,29,20,28,15,18,20,17,45,29,5,0,20,22,77,76,53,70,41,7,0,76,35,12,26,30,27,23,14,61,7,5,0,62,57,18,3,0,29,45,68,3,0,14,11,16,11,8,11,12,11,13,36,115,70,3,0,1,0,41,17,37,3,5,42,4,34,53,65,5,0,0,25,27,44,55,18,3,0,1,0,42,19,0,61,0,52,33,14,0,38,29,0,47,64,13,15,17,20,67,13,74,3,0,29,46,36,0,16,30,91,30,33,3,0,12,1,46,52,67,63,27,26,50,48,66,3,0,26,105,0,59,67,63,53,55,69,48,14,7,5,0,29,52,55,3,0,31,33,3,5,34,53,58,5,0,0,25,27,11,16,9,91,58,0,62,105,24,0,36,68,71,23,60,25,83,42,0,16,41,71,44,36,15,21,39,0,37,22,18,11,0,37,69,32,103,26,11,0,40,34,19,22,15,21,35,39,0,37,22,18,11,9,0,31,63,0,53,71,34,0,55,27,11,9,0,25,27,7,0,16,14,7,0,73,42,52,16,33,75,67,9,7,0,58,25,52,16,9,45,86,37,0,70,77,67,9,7,0,30,20,27,15,18,20,17,57,0,28,48,70,23,26,135,67,43,0,15,28,27,0,63,0,28,29,29,9,7,0,49,57,5,0,18,3,0,29,45,32,46,7,18,3,0,14,11,16,11,8,12,12,11,13,36,78,0,44,28,13,20,14,23,67,26,5,0,70,3,0,1,0,43,17,39,21,3,0,20,30,49,3,0,20,11,9,21,23,25,0,81,0,41,18,3,0,26,11,9,21,23,25,0,66,0,60,18,3,0,25,27,43,42,39,55,18,3,0,1,0,44,49,65,27,54,3,0,17,38,27,25,36,34,3,0,26,11,9,21,25,27,30,23,0,98,66,0,28,18,28,46,38,17,23,0,38,46,13,18,24,31,11,0,16,0,17,11,42,36,17,23,42,32,11,16,0,17,11,46,38,27,17,23,44,33,32,11,16,0,16,30,107,50,44,33,11,0,24,7,5,0,22,76,24,5,0,24,101,44,38,27,5,0,18,3,0,24,11,16,9,21,43,26,0,54,0,63,42,53,0,96,28,18,28,46,38,17,23,0,38,44,13,18,24,31,11,0,29,16,0,17,11,42,36,17,23,40,32,11,16,0,16,11,68,29,26,25,28,34,24,26,14,50,83,0,37,36,32,55,66,11,7,0,66,5,0,33,0,22,74,18,0,24,64,0,34,40,34,15,21,38,9,0,30,20,24,18,0,25,18,0,18,125,9,7,5,0,18,3,5,34,53,58,5,0,0,25,24,27,11,9,16,82,0,42,40,18,3,0,29,45,37,46,7,93,35,46,7,89,18,3,0,14,11,15,17,11,13,36,34,0,30,98,31,5,0,50,15,3,0,1,0,41,5,37,4,34,53,65,5,25,27,11,9,16,67,64,60,39,18,3,0,1,0,15,15,15,16,2,44,28,23,28,31,23,3,0,31,40,3,0,18,55,9,12,9,24,11,13,9,21,45,27,26,0,54,15,0,25,89,7,0,41,24,5,0,28,0,22,41,32,34,14,26,7,5,0,41,64,23,17,17,33,0,39,36,34,15,7,0,24,0,24,54,14,60,43,20,0,69,107,72,0,52,34,16,28,53,35,9,0,52,7,5,0,60,3,0,27,11,9,21,27,16,0,18,29,0,19,17,38,16,0,17,37,16,0,17,17,17,17,17,17,17,17,17,17,19,16,0,16,48,62,24,7,0,18,5,3,0,26,11,13,9,21,40,23,25,27,0,63,18,67,101,0,30,26,49,0,30,54,32,51,44,122,71,11,0,40,49,44,38,9,70,36,0,26,81,82,69,9,7,0,30,21,14,66,7,5,0,39,55,5,0,64,18,3,5,41,4,24,8,7,10,10,4,16,10,10,8,79,61,4,34,53,64,5,0,0,25,27,11,9,16,46,60,39,42,18,3,0,29,45,71,3,0,1,0,48,28,23,22,3,0,47,37,116,3,5,34,53,58,5,0,0,25,27,11,16,9,16,9,13,15,16,36,0,19,11,19,7,67,23,0,50,21,18,11,35,76,0,38,48,43,19,28,41,13,0,67,0,47,33,0,80,74,75,15,13,11,16,0,17,11,29,19,20,15,24,11,16,0,17,11,42,36,17,23,37,11,16,0,17,17,11,41,0,157,56,31,21,22,17,26,20,13,11,22,0,16,11,36,33,34,27,25,24,26,23,0,24,39,70,28,13,0,34,76,11,7,0,62,25,5,0,64,0,15,23,13,14,9,66,41,5,0,18,3,0,29,45,32,46,48,35,38,14,23,0,31,50,9,0,42,19,7,7,18,3,0,14,11,16,11,8,12,12,11,13,36,74,17,30,27,58,31,35,0,95,71,77,26,21,7,7,41,70,3,0,1,0,45,34,25,0,30,36,23,5,0,22,3,5,67,5,0,0,18,55,22,11,12,9,24,11,13,9,21,181,56,0,17,0,47,24,0,24,185,15,15,17,15,58,20,19,142,31,15,0,25,19,24,18,27,0,19,26,18,27,0,19,24,18,22,0,19,26,18,29,0,19,24,18,22,0,19,24,18,22,0,19,24,18,28,0,19,24,18,27,0,19,24,18,25,0,19,28,18,30,0,19,28,18,39,0,19,28,18,35,0,19,28,18,40,0,19,23,18,0,19,23,18,0,19,23,18,0,20,24,18,0,20,24,18,0,19,56,19,18,0,19,56,19,18,0,19,56,19,18,0,20,71,69,0,18,0,18,115,33,9,45,35,26,30,0,47,17,28,9,0,79,14,18,7,5,0,32,13,9,12,3,0,41,11,9,21,42,65,45,0,22,123,48,5,0,38,3,5,51,4,34,53,65,5,0,0,25,27,11,9,16,56,60,60,39,18,3,0,1,0,45,34,25,0,16,23,43,30,14,30,7,5,0,22,3,5,67,5,0,0,18,55,22,11,12,9,24,11,13,9,21,108,17,0,47,24,0,24,185,15,15,17,15,58,20,19,142,30,18,15,131,45,35,26,30,0,47,17,28,9,0,79,14,18,7,5,0,32,13,9,12,3,5,51,4,34,53,65,5,0,0,25,27,11,9,16,56,60,60,39,18,3,0,1,0,37,17,33,38,0,40,41,41,0,36,36,45,0,35,37,36,45,0,35,33,54,0,40,42,0,40,42,0,30,0,12,18,26,3,1,3,66,64,76,56,56,48,52,3,0,0,20,41,26,15,39,0,15,46,0,15,47,0,15,42,0,15,42,0,15,129,0,15,131,0,15,130,0,15,46,0,15,46,0,14,39,5,3,0,26,16,17,11,11,14,10,11,73,77,54,13,14,13,18,36,46,51,57,30,0,28,80,59,68,37,33,35,7,0,47,104,151,9,0,50,69,65,26,7,0,18,7,0,85,89,65,56,68,62,26,24,3,0,30,11,19,13,9,13,45,78,0,32,71,60,31,79,41,0,0,22,11,13,13,9,13,21,29,124,25,0,128,24,27,22,0,12,32,64,38,0,61,109,125,32,35,29,23,52,65,56,21,14,69,0,161,80,81,79,42,64,9,0,56,28,61,7,0,23,50,0,0,100,61,12,12,11,24,6,3,5,34,34,81,54,5,0,0,1,0,32,23,16,0,33,52,44,18,7,3,0,23,17,0,6,33,38,9,7,40,24,32,0,35,38,0,51,0,21,0,48,58,5,0,28,16,4,0,53,0,19,1,0,27,0,26,0,28,0,38,0,49,27,58,35,1,43,136,1,0,15,0,34,82,0,52,64,39,23,26,6,39,50,15,3,0,77,15,1,0,29,22,12,23,3,0,20,71,3,0,14,30,3,0,1,0,50,16,0,46,22,0,40,19,15,12,12,19,35,17,23,25,26,9,12,5,3,0,37,63,0,0,108,33,23,12,0,52,0,25,3,0,22,49,34,39,250,5,3,0,28,51,37,147,3,0,37,37,174,3,0,22,37,54,27,109,7,3,0,25,48,37,65,3,0,32,28,27,12,39,250,5,36,0,28,0,0,12,16,3,0,17,14,14,10,14,30,11,13,17,15,12,118,41,59,34,20,25,13,16,7,26,35,57,18,0,17,56,26,17,11,84,22,28,27,13,11,49,246,7,0,24,83,89,58,49,62,18,21,11,9,19,11,12,0,29,44,24,13,14,11,20,44,0,131,20,0,34,59,9,0,35,14,53,7,12,43,28,0,67,5,0,23,62,33,55,0,15,3,0,1,0,78,0,27,52,56,56,1,0,34,14,27,3,0,15,33,46,42,26,3,0,24,33,50,31,63,3,0,12,33,62,3,0,19,33,88,28,3,0,18,19,47,14,0,76,0,15,3,0,41,42,32,66,18,19,16,8,19,43,31,3,0,1,0,43,32,54,68,33,17,15,31,17,25,28,5,31,2,0,27,34,12,19,23,31,3,0,23,75,3,0,25,54,70,114,27,5,3,0,24,42,0,29,49,26,36,19,12,57,55,67,14,23,25,26,37,5,0,15,3,0,18,54,38,3,0,41,54,11,25,16,16,24,9,10,11,13,58,0,21,23,76,7,0,38,81,29,7,5,0,234,11,10,13,17,15,12,34,32,33,7,26,83,50,0,44,118,25,5,0,43,25,56,35,72,0,59,5,0,59,0,23,73,54,33,5,0,17,28,0,34,40,0,32,72,25,7,0,35,52,49,5,0,28,101,22,0,189,84,40,5,0,94,17,0,30,35,61,62,67,45,0,65,69,3,0,1,0,44,15,26,3,0,42,30,44,44,42,18,0,36,45,31,5,0,17,36,48,50,28,3,0,11,2,0,28,20,10,10,6,12,8,16,18,6,71,97,61,126,41,3,0,23,12,25,40,3,0,14,52,3,0,20,51,11,14,19,12,44,28,0,46,75,120,5,0,29,24,91,0,61,83,122,7,5,0,22,76,19,0,0,17,38,3,0,1,0,53,0,31,52,0,27,29,52,50,5,3,0,19,1,34,24,117,48,66,0,15,97,29,74,77,12,28,5,3,0,15,41,26,61,26,3,0,24,41,32,69,3,0,12,39,3,0,19,41,3,5,27,75,68,50,5,0,0,24,73,47,0,61,0,15,3,0,41,42,0,36,121,5,0,32,28,18,19,16,8,18,34,31,3,0,1,0,23,26,21,31,27,0,38,28,35,37,7,0,27,30,12,50,5,0,37,81,77,74,79,77,77,60,0,0,24,16,12,28,86,51,0,42,33,49,40,23,69,43,18,27,29,30,13,9,7,5,0,15,3,0,28,27,68,30,47,21,15,3,0,1,0,23,47,15,2,21,18,19,2,20,17,2,21,17,2,20,39,17,24,26,4,9,18,23,3,2,0,51,14,11,9,11,14,15,36,0,18,45,60,40,19,7,5,3,0,48,25,1,0,25,27,71,55,0,47,23,0,37,8,24,32,0,21,3,0,11,2,3,80,76,50,2,23,25,71,76,13,26,75,50,41,78,60,69,75,25,3,0,0,44,16,17,23,9,12,4,47,79,42,19,26,38,0,42,117,3,0,24,23,23,13,20,18,0,28,42,36,3,0,36,46,19,0,28,17,17,16,0,17,17,16,0,17,17,16,0,16,17,7,0,17,5,0,22,69,24,24,12,81,78,33,78,7,0,21,20,28,32,28,42,68,49,22,30,28,75,0,0,135,0,43,24,33,28,28,16,26,9,7,5,0,14,3,0,43,38,23,36,0,42,26,44,67,79,55,5,3,0,13,1,0,25,15,37,15,119,42,0,0,67,0,60,48,41,28,36,0,47,26,41,20,48,5,3,0,14,1,0,41,9,15,10,9,17,22,30,37,32,75,15,16,0,53,68,66,42,13,16,16,5,0,43,15,9,38,45,0,25,24,27,20,0,24,27,20,0,24,27,20,0,24,27,20,0,24,27,20,0,24,27,20,0,24,27,20,0,24,27,20,0,20,106,11,0,17,24,9,14,0,15,85,17,16,43,47,0,86,24,19,11,0,84,0,47,17,24,9,0,14,0,14,15,5,3,0,47,90,1,0,41,24,64,10,84,77,3,0,75,85,92,1,0,22,10,7,7,33,72,75,55,42,3,0,99,57,0,188,35,35,19,17,44,31,0,19,29,53,28,0,37,5,0,34,14,31,53,30,0,12,42,18,12,19,16,5,5,66,64,0,16,56,31,3,0,65,0,16,49,60,3,0,142,85,34,96,39,1,0,57,9,12,9,9,11,9,17,16,11,10,10,0,84,42,3,0,114,19,33,68,38,45,28,235,3,0,98,88,58,3,0,55,32,58,3,0,129,81,24,0,21,11,10,23,73,76,3,0,94,0,90,31,51,3,0,14,1,0,61,9,15,17,9,16,10,10,7,9,9,11,0,34,26,36,11,7,3,0,31,20,42,43,62,0,42,46,0,42,46,0,35,62,0,14,20,5,4,0,95,48,42,128,69,42,3,0,29,0,21,34,88,3,0,13,1,0,26,9,20,6,7,4,54,84,32,0,101,27,0,16,19,15,5,0,51,0,29,3,0,11,1,0,46,17,0,21,36,17,24,12,0,36,17,29,12,0,12,86,13,3,0,15,0,51,30,0,59,22,12,5,3,0,43,55,12,0,46,57,39,12,62,103,5,0,21,3,1,49,60,0,55,89,66,3,1,39,25,52,82,1,48,14,13,11,11,18,40,0,16,34,103,7,12,52,0,34,69,14,103,7,5,3,1,0,57,35,28,22,42,31,43,27,5,17,1,0,38,9,11,10,15,62,0,16,46,57,129,3,0,98,0,73,28,105,20,5,0,30,47,57,83,5,3,0,52,1,0,36,9,8,8,11,26,0,12,11,13,13,14,12,0,19,65,78,69,43,25,12,11,43,23,31,7,5,3,0,17,40,41,40,40,42,0,36,31,42,0,36,31,42,0,33,63,0,12,18,3,1,0,47,9,8,17,27,0,27,30,50,43,65,7,5,3,0,39,121,14,1,0,29,6,4,17,36,31,42,0,36,31,42,0,12,42,3,1,0,41,7,53,0,14,49,17,5,19,28,43,27,16,3,0,7,46,72,81,63,54,22,15,19,78,33,30,16,3,1,0,34,26,9,8,11,123,2,0,41,20,15,13,4,24,21,114,0,14,10,7,15,38,37,9,58,97,71,11,0,17,19,22,19,131,58,16,9,83,0,36,24,59,69,9,0,25,14,0,33,21,56,69,9,0,22,14,5,3,0,10,13,14,10,4,1,0,38,9,12,11,10,10,0,46,31,38,0,15,54,66,18,48,0,0,31,0,34,0,15,3,0,44,53,0,46,59,61,16,3,0,7,41,71,19,43,23,16,3,34,0,0,33,25,46,9,13,14,10,41,0,18,11,13,12,29,109,68,0,123,66,27,0,29,3,0,71,64,67,3,0,42,0,12,51,53,56,42,0,13,81,5,0,41,69,3,0,29,1,0,31,86,69,64,16,3,0,9,13,9,111,28,20,33,31,0,42,11,15,17,60,0,63,37,43,23,28,36,72,74,17,16,26,98,70,9,0,73,9,81,12,50,15,19,21,0,128,71,72,16,9,7,5,3,0,50,140,63,3,0,21,13,1,0,30,12,14,9,7,4,7,7,39,9,9,15,58,61,0,76,0,14,2,0,41,41,72,20,38,0,37,61,17,10,34,0,53,57,19,5,3,0,36,1,0,41,22,19,22,22,0,46,30,0,24,40,23,26,30,11,14,0,37,23,26,31,31,11,14,0,37,57,52,42,24,14,0,39,9,44,54,0,133,78,80,11,0,36,0,52,77,80,53,81,33,27,35,14,45,31,25,22,14,36,25,22,14,0,59,55,76,86,13,11,0,66,41,27,0,52,95,11,0,26,26,9,14,0,14,57,37,36,52,0,41,40,0,46,46,43,28,0,45,25,0,20,15,82,79,27,15,11,9,0,45,70,73,9,0,5,3,0,51,10,13,9,4,1,0,40,22,19,22,26,17,0,46,30,0,40,13,13,14,15,0,62,27,19,17,7,0,25,42,0,27,21,19,9,14,26,60,30,9,0,32,36,26,0,29,23,21,11,9,7,0,25,49,33,19,17,7,0,60,61,26,27,60,21,24,28,9,57,46,21,24,29,29,9,35,117,35,12,123,56,22,26,5,3,0,42,51,10,13,9,4,1,0,33,86,70,64,16,3,0,9,13,9,111,28,20,33,0,102,140,63,3,0,21,13,1,0,41,22,19,0,46,30,0,24,40,23,30,11,14,0,37,23,32,30,11,14,0,38,52,48,0,28,90,73,9,0,14,0,14,52,108,5,3,0,10,13,9,4,1,0,40,22,19,26,22,22,17,22,0,46,30,0,40,13,13,14,15,0,63,78,34,28,24,24,7,0,26,20,41,27,69,27,28,0,36,66,69,32,33,11,0,61,71,85,19,17,33,0,74,93,81,20,13,11,16,21,9,0,24,28,20,76,67,63,28,29,7,60,21,28,9,57,46,21,30,28,9,12,17,58,71,7,0,43,0,30,26,24,14,41,24,7,0,34,17,5,3,0,42,51,10,13,9,4,1,0,33,43,33,33,31,35,37,37,43,49,45,39,43,45,45,43,45,45,49,43,53,53,35,0,24,0,26,0,38,38,0,31,16,49,36,17,34,0,5,59,4,79,4,62,71,5,27,54,0,39,40,44,47,51,48,0,73,0,20,12,109,70,18,5,4,38,15,12,9,9,38,12,0,39,110,44,17,0,80,0,20,12,114,5,0,61,0,50,18,12,13,17,37,50,33,0,58,44,7,0,80,5,0,41,14,11,11,36,3,2,0,31,48,0,46,28,100,34,69,59,7,0,60,140,104,18,5,90,3,0,13,1,45,49,40,0,30,19,0,28,28,20,22,71,44,35,0,30,22,24,73,12,15,5,0,52,27,3,0,15,1,15,17,33,22,25,2,0,45,17,12,0,93,0,99,0,93,0,93,0,93,0,28,3,0,18,26,47,0,36,21,0,46,53,58,14,49,7,0,88,26,5,0,15,3,0,1,0,72,0,30,37,22,0,14,7,21,45,41,67,59,14,33,7,5,3,0,46,1,0,44,51,30,27,14,1,0,14,42,22,17,32,21,24,2,0,44,17,12,27,3,0,12,85,61,37,3,0,22,56,135,3,0,19,133,56,0,25,53,32,50,5,3,0,18,37,3,0,41,42,144,3,0,1,0,70,0,29,48,116,43,1,0,43,28,0,84,0,13,1,0,13,42,21,17,31,20,23,2,0,43,69,31,20,0,0,31,7,7,83,16,0,18,15,28,3,0,54,0,19,51,10,48,41,0,22,50,36,5,3,0,132,3,2,0,17,47,16,31,17,51,81,33,2,19,47,16,33,17,60,81,33,2,19,43,16,37,96,92,49,78,46,74,70,15,75,60,98,0,27,51,36,24,5,0,26,4,15,9,65,2,0,87,34,66,0,20,108,50,3,0,82,36,1,0,30,26,139,51,0,40,44,59,5,3,1,40,25,95,99,3,1,18,51,42,24,73,65,36,3,1,0,33,39,35,29,31,27,39,29,59,63,0,38,38,34,0,38,47,0,27,87,46,94,3,0,52,42,3,0,13,1,0,13,24,16,34,31,34,2,0,38,47,0,36,27,66,24,5,3,0,13,1,0,13,24,16,34,31,34,2,0,16,47,16,31,38,0,48,25,24,12,75,4,0,34,2,0,36,0,19,0,84,0,114,0,46,9,9,11,80,44,1,0,17,35,93,16,32,32,22,36,51,2,17,48,16,32,44,51,36,15,9,84,2,16,56,16,31,16,23,51,35,50,2,16,26,16,31,24,45,35,41,2,16,56,16,31,16,29,52,35,51,2,16,47,16,33,36,106,41,2,16,47,16,33,16,65,34,15,9,37,2,18,47,16,33,49,0,30,32,58,84,16,4,0,41,2,101,0,19,0,84,0,24,7,28,0,25,47,16,31,38,26,4,35,93,16,32,17,22,26,4,48,16,32,23,33,26,4,26,16,31,32,85,15,9,71,4,47,16,33,65,34,26,3,0,30,74,2,0,19,0,24,7,83,0,82,0,39,34,0,41,20,13,25,14,0,13,25,14,0,14,25,14,5,0,26,45,3,0,33,35,1,0,44,9,9,11,0,27,38,67,3,0,44,1,0,33,35,93,16,32,32,22,36,51,4,48,16,32,53,22,36,26,4,48,16,32,56,23,36,26,4,24,16,31,16,31,56,48,4,24,16,31,16,30,56,47,4,24,16,31,34,57,41,4,24,16,31,16,37,57,49,4,47,16,33,36,106,41,4,47,16,33,16,60,52,15,9,37,4,47,16,33,46,0,22,76,0,15,39,69,5,0,16,4,0,41,138,0,17,15,11,7,8,2,14,28,16,18,19,19,34,14,17,17,30,6,16,24,26,6,22,33,2,0,46,16,54,58,61,18,41,0,0,111,1,0,44,55,9,18,13,16,11,15,10,86,58,0,16,67,105,77,3,0,17,21,24,79,78,0,0,15,21,19,4,0,58,40,0,15,99,0,67,0,19,5,0,22,32,3,0,130,79,18,1,0,66,76,0,14,81,72,3,0,34,58,48,36,3,0,41,24,0,34,36,0,20,87,75,7,0,23,5,3,0,14,1,0,81,0,16,23,23,15,15,10,11,19,30,6,25,23,97,100,89,3,0,48,21,44,19,17,6,66,51,3,0,31,21,23,6,63,65,39,3,0,1,0,87,0,80,0,33,0,38,36,30,0,26,20,19,12,18,22,22,24,18,21,22,24,20,16,2,23,16,36,4,0,19,49,4,0,14,34,4,0,17,47,4,0,13,33,4,0,16,46,4,0,14,34,4,0,17,47,4,0,13,33,4,0,16,46,3,0,2,25,10,23,16,19,18,43,8,19,42,6,4,8,23,16,19,18,17,8,19,43,6,4,8,19,17,19,18,17,8,19,43,6,3,2,0,33,55,69,35,73,79,3,0,65,0,11,46,58,3,0,52,75,15,15,15,15,15,14,10,27,1,0,35,64,0,17,55,87,3,0,18,0,42,59,0,103,85,10,15,71,3,0,16,76,58,3,0,16,82,0,0,39,10,5,4,19,43,0,15,27,29,3,0,17,44,31,46,3,0,25,1,0,57,9,12,10,14,13,0,43,23,21,32,28,6,58,0,47,39,47,0,18,33,41,7,5,3,0,89,56,50,88,252,25,133,1,0,15,32,121,3,0,23,67,0,25,3,0,27,31,38,3,0,31,41,42,42,61,51,35,7,0,74,7,17,3,0,17,11,9,13,55,3,0,14,33,3,0,17,26,3,0,19,38,40,0,32,35,45,5,54,0,0,18,11,10,17,13,35,31,7,0,30,35,7,0,28,3,0,25,57,79,5,0,51,88,5,0,11,9,13,69,0,15,18,20,33,25,25,7,12,18,31,30,7,0,23,5,0,16,3,0,1,0,31,41,11,9,13,0,48,32,46,49,28,30,51,32,5,3,0,14,2,0,58,0,39,20,15,13,4,23,26,0,32,26,31,92,69,14,7,0,52,0,24,31,28,7,0,17,39,71,28,60,25,0,83,76,55,29,7,5,3,0,30,0,14,76,10,42,0,13,99,90,5,0,52,3,1,0,30,13,15,48,0,27,67,61,3,0,51,102,61,3,0,10,11,10,4,1,0,47,39,53,0,17,68,61,3,0,34,50,84,68,3,0,17,1,0,52,31,28,0,39,11,14,10,18,0,19,17,13,68,25,33,9,0,29,14,0,18,22,26,90,78,9,0,13,61,25,33,9,0,29,14,0,14,19,87,74,9,0,5,0,49,3,0,103,28,13,12,12,13,12,7,0,61,34,3,0,59,1,0,37,61,69,1,0,18,24,53,30,24,25,36,21,27,23,26,24,23,3,0,14,36,36,3,0,22,36,37,3,0,15,36,37,3,0,18,39,46,27,18,5,0,36,40,3,0,17,96,3,0,24,107,3,0,27,141,110,3,0,12,91,3,0,15,73,94,3,0,19,36,34,3,0,22,66,38,39,5,3,0,29,50,51,0,55,73,33,46,31,5,0,72,68,43,3,0,24,55,59,11,22,20,26,12,16,13,0,16,45,30,5,0,47,61,72,21,34,34,32,0,36,103,0,102,5,0,16,3,0,24,99,3,0,32,116,0,17,67,65,15,14,9,12,75,5,3,0,25,11,22,15,19,21,111,17,16,23,11,35,20,93,0,6,54,104,16,20,14,9,59,67,12,9,52,15,3,0,14,94,43,0,59,43,78,5,0,21,21,30,0,23,27,0,44,103,7,0,21,27,5,0,47,31,13,12,11,56,47,29,7,7,69,0,29,72,60,5,0,17,35,16,17,41,94,0,6,26,30,0,24,53,101,173,0,46,47,7,0,73,93,66,45,50,5,0,23,91,51,5,0,35,3,0,1,0,70,0,39,51,47,0,26,34,28,36,32,0,0,53,61,22,23,3,0,128,44,52,1,0,44,24,65,3,0,1,0,42,20,11,0,45,38,28,21,15,3,0,16,1,0,38,34,50,0,23,93,73,3,0,13,1,0,32,42,58,49,22,1,0,38,36,23,21,1,0,14,13,44,11,17,20,27,16,42,24,2,0,17,0,23,0,50,71,0,33,56,35,22,1,0,18,0,20,0,3,15,2,11,18,2,42,2,43,3,35,59,9,49,19,84,5,3,0,59,9,49,19,84,5,3,0,69,9,59,19,89,5,3,0,23,26,3,0,15,2,0,24,0,18,0,3,16,2,11,15,2,46,50,2,36,3,41,7,8,25,30,39,7,30,12,39,5,17,82,3,2,0,3,15,2,11,18,2,48,2,42,3,35,19,0,38,45,10,41,27,61,8,24,57,9,3,0,45,36,27,32,7,0,36,26,34,32,7,0,10,35,10,74,65,40,9,9,91,7,7,3,0,16,2,0,24,0,40,0,24,20,0,30,30,0,26,86,0,3,38,2,38,45,2,34,3,40,37,66,0,37,25,10,44,3,0,24,24,3,0,10,39,39,14,3,2,0,3,28,2,38,2,34,3,32,5,19,4,66,158,5,23,23,29,10,0,17,41,3,0,12,2,0,55,31,0,10,15,19,38,21,25,30,30,29,28,28,29,32,32,32,6,14,25,58,57,19,5,3,2,0,42,34,75,41,0,11,48,51,0,42,21,46,26,124,11,9,0,17,17,34,7,7,3,2,0,3,14,2,13,2,38,36,42,2,42,3,57,5,43,5,27,0,5,35,5,48,0,47,17,23,20,62,7,0,39,6,3,0,56,5,43,5,27,0,5,35,5,48,0,73,0,16,58,3,0,35,3,0,3,30,2,77,15,2,30,17,2,24,22,22,3,15,0,17,35,33,33,39,47,39,36,38,38,29,36,35,33,41,40,37,37,36,31,32,41,35,33,34,33,35,33,43,33,27,31,34,36,31,31,27,27,31,35,33,35,31,31,36,36,36,46,33,33,34,29,28,31,38,34,31,36,36,38,33,45,28,36,34,34,34,37,29,48,41,39,33,36,36,33,28,29,28,27,30,30,27,30,32,28,36,36,36,36,35,37,38,36,36,37,36,39,36,36,36,36,36,36,36,36,36,39,27,41,27,35,34,35,34,34,29,40,43,27,37,37,37,34,30,34,34,39,28,37,33,32,40,31,31,33,34,33,40,31,36,34,31,31,35,47,41,47,39,38,40,38,41,37,32,31,31,27,33,39,40,39,40,27,36,38,49,54,31,29,31,32,33,35,42,29,34,31,33,33,36,31,37,34,40,29,29,33,30,43,41,37,29,30,30,33,41,33,36,37,37,35,35,33,35,33,33,27,27,27,27,31,31,33,28,33,31,32,31,30,29,31,27,23,23,21,22,23,22,23,22,22,29,22,21,22,23,22,23,22,22,21,21,21,22,21,22,21,23,19,27,20,20,22,24,22,23,23,21,21,28,21,23,22,21,23,33,23,33,24,23,21,21,21,22,23,22,22,21,22,21,21,21,21,23,23,21,23,23,23,21,23,21,27,25,21,25,26,21,22,23,25,23,21,65,28,44,53,36,26,27,21,28,29,22,23,22,23,23,21,21,27,32,21,22,23,34,30,27,28,25,26,36,36,25,25,32,35,20,20,22,21,23,22,20,22,30,24,23,20,18,22,23,23,22,23,22,21,22,30,25,22,21,22,22,21,22,26,24,37,20,21,23,22,21,21,23,25,26,26,24,20,22,21,22,23,23,23,23,29,23,22,21,22,21,21,22,22,23,22,22,22,22,21,26,27,22,2,0,23,44,32,52,1,0,66,33,33,33,45,64,37,3,76,3,30,102,50,60,48,36,12,27,22,46,50,10,23,54,23,13,68,75,59,29,26,13,10,24,38,70,48,23,13,43,33,73,60,103,13,73,23,13,63,58,59,10,34,22,18,44,62,67,96,65,53,53,57,87,57,86,70,68,85,37,19,13,20,24,39,87,18,13,18,28,13,10,35,47,65,44,56,62,44,21,17,13,9,6,1,46,74,59,45,15,5,68,45,26,5,10,15,5,1,43,37,40,5,10,47,5,1,35,15,12,38,44,17,5,42,51,66,5,10,56,66,55,5,130,57,1,41,11,103,1,3,105,54,54,2,11,8,39,45,37,25,27,12,4,42,6,2,81,36,72,100,27,3,79,50,40,57,52,37,52,29,47,41,23,28,25,11,49,71,9,5,50,77,5,74,30,25,27,29,31,26,28,26,28,9,100,7,20,1,3,71,38,3,83,19,58,41,5,41,33,17,22,5,30,55,12,27,34,71,37,74,5,10,24,81,78,79,80,65,55,55,50,56,54,151,142,59,81,83,94,36,43,9,54,43,84,36,21,25,30,31,15,40,9,81,5,23,15,1,32,87,1,68,39,42,5,36,46,67,55,51,10,1,0,62,46,105,64,23,12,44,23,49,26,13,10,18,49,27,30,17,38,36,86,17,38,13,9,6,1,21,59,75,15,5,80,29,5,41,43,48,25,13,53,76,41,13,9,61,35,29,29,51,34,61,53,46,52,43,12,50,25,5,35,20,36,19,23,38,45,36,5,1,0,51,976,0,51,1985,0,51,2652,0,51,4306,0,66,0,59,0,21,219,52,12,83,30,2,0,19,0,201,0,18,26,53,70,2,0,50,0,26,0,83,104,0,61,64,8,35,20,43,18,36,22,36,3,1,0,60,0,42,39,32,39,33,104,40,56,1,0,59,0,41,39,32,33,32,39,33,99,40,102,1,0,17,0,68,63,63,0,66,21,0,68,67,68,23,2,65,67,62,54,2,66,62,32,0,49,35,0,21,30,38,38,30,34,30,32,34,28,2,0,28,61,1,69,0,36,0,18,0,46,28,41,0,25,54,1,0,15,40,46,46,42,52,28,0,29,69,31,67,29,67,29,40,39,40,26,43,35,41,38,52,45,44,74,0,67,66,41,4,68,48,4,68,20,4,67,68,35,0,61,66,82,83,28,29,27,28,28,38,36,34,94,25,23,24,52,27,0,25,22,32,22,28,28,38,50,32,26,34,40,16,36,24,34,18,18,22,38,20,56,32,34,34,38,24,36,32,32,34,46,62,76,72,75,2,0,64,36,0,41,51,0,26,73,1,0,41,42,0,36,34,24,92,3,11,1,0,73,0,53,0,27,42,30,0,66,38,6,0,57,43,6,0,29,61,1,0,34,20,58,18,75,1,0,99,0,57,38,0,45,19,20,2,0,49,49,2,0,61,21,17,60,2,0,55,62,62,67,8,0,37,33,54,66,11,20,3,1,0,67,65,0,22,69,63,64,66,64,25,20,66,67,67,23,64,66,66,67,24,28,67,21,24,70,70,67,57,22,65,11,36,66,71,43,37,108,82,59,34,59,79,32,62,46,23,66,64,67,11,19,61,62,66,57,51,16,63,65,65,66,68,68,63,65,67,67,18,66,68,66,67,66,12,4,65,16,64,59,61,66,31,16,67,39,19,59,30,25,63,49,23,2,0,42,0,35,0,27,19,0,33,83,0,41,30,43,81,36,137,5,29,43,32,3,0,36,56,0,33,33,70,3,33,68,0,16,1,0,38,62,19,37,18,19,14,6,26,67,23,39,24,3,1,0,56,3,18,23,20,24,21,28,21,29,35,70,0,42,87,1,0,72,3,35,38,52,46,71,85,0,56,47,39,122,20,39,95,66,3,45,79,57,94,29,0,62,70,58,27,0,23,0,56,17,24,68,79,10,34,21,3,0,37,13,26,72,20,29,35,58,35,51,0,48,51,49,0,63,68,20,39,26,0,38,50,64,0,60,29,40,0,86,57,21,19,32,46,0,44,81,32,0,63,23,29,0,26,26,0,32,60,97,29,2,0,370,0,44,54,19,33,2,0,111,0,157,0,149,0,47,57,35,90,80,3,100,2,0,49,36,26,48,94,2,0,122,0,121,0,56,36,26,48,86,2,0,57,70,2,0,36,45,54,0,17,69,12,2,0,48,41,2,0,77,45,21,33,2,0,56,33,2,0,64,0,28,0,22,0,65,40,52,12,34,37,55,56,32,50,57,102,40,44,41,99,5,29,0,30,37,55,34,18,3,2,0,62,50,0,27,27,16,15,10,16,3,2,0,54,0,36,79,2,0,43,0,37,48,14,13,2,0,60,0,40,55,2,0,68,0,38,37,35,65,2,0,35,34,41,80,15,3,2,0,66,54,0,29,80,2,0,54,30,37,80,17,22,15,3,2,0,67,35,0,30,38,2,0,35,0,33,65,2,0,58,24,22,28,26,20,7,2,0,70,41,48,117,112,78,2,0,73,47,63,55,68,27,111,23,81,2,0,50,73,80,20,80,2,0,44,46,57,71,2,0,28,0,24,0,63,68,67,46,0,37,36,37,37,56,25,3,20,89,7,27,0,107,9,41,14,44,41,2,0,63,0,32,81,38,45,77,70,78,71,51,111,31,0,44,40,23,82,76,44,63,3,14,2,0,50,36,40,35,66,20,0,38,45,46,61,54,38,102,2,0,28,2,65,59,67,17,0,60,59,0,28,29,17,3,0,64,65,16,0,22,111,66,54,56,25,77,77,31,134,61,22,39,38,54,62,62,60,56,41,30,57,45,60,58,57,58,23,23,73,42,49,81,55,78,5,0,52,20,93,25,102,5,99,0,68,65,65,60,64,10,33,41,18,62,5,0,62,92,75,61,3,2,0,60,36,14,78,61,8,35,21,3,0,59,17,12,39,29,61,73,42,5,3,85,80,2,0,46,14,19,51,2,0,40,14,30,40,20,30,42,36,31,6,25,50,2,0,64,66,62,61,64,65,27,0,41,14,121,30,21,30,35,51,36,3,27,76,69,16,38,51,136,42,40,57,45,7,42,5,51,38,3,64,55,89,106,40,38,55,43,5,126,59,32,38,10,61,3,49,34,2,0,76,14,118,2,0,40,14,42,73,46,78,45,2,0,44,67,63,14,0,60,63,31,0,81,68,49,2,0,44,14,50,18,30,32,21,0,62,64,26,0,10,63,72,47,54,46,26,18,19,42,14,97,26,24,7,33,12,38,53,5,3,19,50,31,20,49,2,0,43,14,68,67,41,19,48,2,0,66,0,17,0,41,14,33,22,37,34,16,35,45,54,55,85,34,12,63,26,25,5,41,21,58,3,73,39,66,46,2,0,47,14,35,19,53,2,0,43,14,42,30,43,20,48,2,0,42,71,14,44,42,47,2,0,43,14,48,2,0,71,68,5,26,0,33,80,5,89,53,33,48,62,42,26,20,3,78,117,20,20,50,2,0,54,25,19,53,2,0,65,61,20,0,69,71,49,0,17,30,52,40,41,25,3,42,14,50,48,2,0,57,66,14,0,38,19,28,73,28,77,30,41,19,20,46,2,0,59,34,0,40,42,14,0,6,42,40,5,17,37,20,28,51,5,5,15,17,98,6,3,19,74,30,41,19,20,77,2,0,41,0,45,25,19,12,32,32,31,47,128,24,117,94,12,23,5,72,43,3,13,2,0,40,36,82,2,0,73,0,60,33,0,74,87,26,83,75,28,44,3,36,31,0,35,102,57,75,77,61,30,156,3,0,102,20,20,25,61,0,36,72,0,33,68,0,30,30,40,107,2,0,43,30,92,40,2,0,57,28,0,47,14,0,36,51,30,21,0,39,29,45,35,29,22,30,40,67,18,35,82,101,30,127,121,7,5,3,26,14,54,23,84,2,0,59,45,0,45,30,19,26,22,22,23,0,37,30,56,39,17,5,71,22,12,25,5,3,25,68,103,21,12,24,5,3,77,23,3,45,31,65,43,25,14,28,7,5,3,0,23,16,74,64,26,73,28,44,10,37,3,0,24,104,74,68,94,118,53,73,10,31,3,0,13,2,0,43,10,33,38,32,35,37,21,3,2,0,48,40,39,83,5,29,43,10,36,3,2,0,83,24,23,38,83,83,66,84,3,0,16,87,0,16,57,75,57,83,70,86,0,52,2,0,40,43,82,64,87,3,0,29,69,40,50,34,42,46,10,23,3,19,0,53,2,0,45,17,0,30,19,58,40,41,25,3,14,19,26,0,45,2,0,49,35,32,20,61,10,29,28,19,3,2,0,39,88,2,0,34,58,38,25,2,0,33,40,30,22,41,65,41,21,37,19,29,14,119,7,5,3,2,0,59,30,34,0,20,98,55,3,0,65,6,41,41,41,38,5,34,16,21,32,16,10,15,3,1,0,35,31,21,23,53,48,3,1,0,36,0,44,14,24,31,41,37,53,68,14,29,7,5,34,60,39,21,56,3,57,60,16,80,35,18,35,102,46,35,62,12,49,23,5,60,3,44,42,49,56,75,8,84,25,23,47,28,58,37,62,41,12,72,49,27,0,41,37,42,0,44,113,9,7,0,25,5,21,3,56,2,0,49,26,31,67,28,70,23,2,0,50,22,28,50,36,69,7,27,0,47,9,35,79,28,0,59,7,31,52,40,51,34,55,46,57,2,0,53,26,56,5,23,0,46,3,2,0,46,39,36,36,39,19,26,2,0,51,0,48,31,38,30,37,17,33,60,29,0,32,46,89,21,14,20,25,6,57,3,14,2,0,29,0,35,14,17,37,30,39,10,51,34,90,3,19,51,2,0,51,0,41,31,35,50,32,35,51,64,50,3,35,34,16,32,37,53,68,16,3,30,37,17,33,60,29,0,34,51,35,39,12,44,37,5,53,59,3,14,2,0,41,71,54,50,89,5,24,3,30,2,0,72,52,91,72,3,2,49,10,47,46,53,36,81,3,2,0,28,0,57,15,0,71,46,24,22,48,96,11,0,25,24,29,23,11,0,28,34,92,72,27,0,41,23,51,64,10,112,12,40,91,11,62,9,7,11,0,20,51,112,47,11,0,27,33,92,54,11,0,25,32,50,53,89,11,0,32,126,38,27,46,11,0,35,76,11,0,27,93,11,0,28,31,0,12,52,5,95,13,2,0,52,0,55,28,33,26,51,3,12,33,130,47,3,17,2,0,25,0,53,30,14,71,47,2,0,36,30,14,0,69,67,26,0,42,0,45,2,0,35,0,36,38,24,26,34,18,74,50,0,24,32,5,3,26,2,0,73,30,28,33,40,52,22,70,11,48,41,38,22,115,25,11,12,67,38,22,5,3,13,2,0,45,14,2,0,59,0,61,41,76,50,19,39,51,2,0,70,79,23,2,77,68,60,2,70,61,2,69,17,2,72,73,78,39,2,78,14,2,74,79,2,41,14,25,39,2,73,69,77,24,2,79,74,14,2,41,15,19,32,39,2,78,72,76,43,2,77,55,2,79,77,76,69,16,2,67,76,78,53,0,66,56,0,41,0,22,20,68,117,17,62,93,25,44,71,39,7,97,5,9,0,25,91,9,0,26,83,9,0,33,90,75,0,10,78,3,2,0,67,56,0,22,23,70,25,0,64,5,9,0,22,78,29,0,78,5,9,0,10,58,3,2,0,72,56,0,22,18,49,70,9,0,27,64,9,0,21,68,9,0,10,59,3,2,0,67,0,89,21,25,39,27,31,2,0,13,37,36,38,37,36,93,44,43,66,61,2,0,28,0,34,23,2,0,30,46,2,0,40,33,57,19,89,29,0,66,67,15,84,76,151,19,34,38,92,20,26,2,0,38,54,34,37,34,3,14,2,0,41,31,47,33,39,36,6,43,2,0,96,43,39,53,3,2,0,37,0,74,34,28,10,3,31,71,29,3,33,2,0,51,79,26,2,0,49,34,26,2,0,51,139,67,26,2,0,43,35,2,0,85,58,75,105,107,40,6,40,27,2,0,46,41,27,6,40,27,2,0,49,39,40,45,49,8,44,3,26,2,0,49,22,66,51,60,25,3,29,2,0,68,0,28,0,53,62,59,68,0,72,69,14,88,14,21,11,21,43,49,17,3,23,38,50,27,37,55,59,11,16,81,9,7,28,5,10,3,20,29,14,21,26,73,12,47,5,21,71,10,30,18,17,16,6,3,21,2,0,25,0,66,65,66,65,64,0,62,68,66,63,61,45,0,66,54,68,36,52,30,118,54,3,13,2,0,64,23,0,83,35,61,63,49,38,3,0,102,31,64,60,56,91,10,53,34,3,0,54,67,39,56,3,73,85,27,52,31,33,72,34,130,5,61,108,33,38,8,37,21,16,48,85,56,10,93,3,91,89,13,2,0,47,0,72,54,64,73,35,52,21,46,31,52,57,3,13,2,0,31,0,63,54,81,73,140,2,0,62,59,66,67,67,0,81,29,64,25,88,52,21,95,112,40,7,26,18,58,121,100,143,134,7,81,5,3,13,2,0,75,135,50,19,21,21,82,2,0,50,0,84,60,52,36,20,32,71,31,23,16,70,61,56,57,49,86,79,81,29,82,60,77,36,62,57,10,69,75,61,56,35,28,29,33,18,57,5,3,0,46,17,45,8,123,10,15,3,2,0,37,10,85,76,3,1,0,51,0,70,54,65,110,19,78,69,120,116,108,3,15,2,0,77,111,98,43,30,0,16,116,0,53,73,28,61,39,64,7,20,5,0,19,3,2,0,110,57,68,129,0,44,123,52,23,19,45,36,74,47,12,78,5,31,28,31,5,53,52,154,22,22,27,116,96,61,44,33,104,34,34,44,101,5,61,49,49,64,54,25,32,28,33,5,53,47,38,106,5,54,22,56,63,3,13,2,0,64,68,66,11,0,64,66,70,57,0,62,22,22,25,69,28,16,63,83,47,21,31,33,17,30,100,28,41,0,21,28,16,50,0,20,88,36,140,41,94,5,51,34,104,111,88,36,66,32,99,7,5,13,0,22,27,42,62,15,0,40,40,0,62,28,82,33,16,43,0,22,96,33,93,63,55,61,5,15,0,24,28,16,93,51,0,22,39,55,0,25,28,16,38,0,22,51,0,20,26,0,25,31,0,23,41,35,12,30,5,0,10,22,3,2,0,35,30,0,57,110,99,35,0,22,22,40,19,21,37,10,22,3,2,0,42,26,0,23,40,0,19,34,30,62,83,12,32,5,3,0,50,2,0,39,26,0,37,40,0,36,111,18,95,88,87,0,46,2,0,37,30,21,52,114,14,41,2,0,40,30,35,30,12,2,0,73,111,38,16,0,66,57,128,22,22,78,42,57,80,27,13,50,33,68,117,13,14,97,7,5,72,32,0,78,61,44,34,34,76,5,0,80,54,61,49,49,0,30,59,33,77,12,24,5,10,38,3,0,36,51,25,58,10,14,3,2,0,38,13,2,0,76,98,2,0,69,68,68,63,17,0,15,0,28,96,30,35,63,21,39,42,40,109,20,96,32,113,48,3,96,92,60,57,3,126,34,47,2,0,29,0,43,30,0,30,46,20,92,5,18,22,18,6,10,18,74,24,6,3,14,46,49,2,0,36,33,75,0,30,14,24,63,25,24,93,38,50,32,79,3,14,49,2,0,35,89,216,66,2,0,46,0,61,59,23,14,37,17,33,93,29,0,69,84,31,3,80,2,0,66,72,68,20,45,40,80,7,49,5,70,65,59,64,7,57,62,7,5,22,73,60,108,56,5,13,49,3,38,24,27,46,28,31,5,19,47,3,37,31,110,19,74,57,10,20,3,122,42,2,0,132,62,26,0,32,134,23,77,41,23,23,56,42,97,68,105,54,30,33,41,49,50,35,30,73,10,81,12,77,95,5,97,54,35,57,40,23,20,87,68,53,64,87,12,43,5,26,31,2,0,41,38,37,27,41,36,21,12,28,5,3,158,2,0,34,0,36,17,82,60,2,0,32,0,69,127,0,26,36,37,36,31,0,20,20,25,118,0,30,92,40,51,0,30,30,40,52,2,0,57,0,70,102,0,63,26,64,0,20,20,25,0,52,53,0,30,30,40,57,2,0,44,0,77,69,49,0,21,47,27,34,10,90,34,49,70,71,24,33,123,5,67,57,32,21,42,0,75,81,125,88,80,75,28,48,28,3,19,2,0,43,57,5,24,0,51,5,13,2,0,78,43,0,52,37,62,5,24,0,83,3,2,0,68,62,64,66,23,0,94,30,28,17,33,73,29,0,23,50,21,46,53,108,62,12,65,5,19,3,13,2,0,38,24,20,22,0,43,92,39,98,71,90,76,92,31,65,37,65,71,22,42,95,77,3,2,0,68,63,15,0,48,30,35,27,33,34,0,57,74,117,120,62,105,25,5,10,22,3,23,38,17,31,53,42,3,13,2,0,37,30,40,27,10,22,3,14,45,0,29,43,108,10,76,3,0,13,2,0,44,0,37,53,0,30,14,121,26,25,10,43,51,3,49,2,0,37,53,0,30,14,67,49,2,0,28,0,64,65,62,66,11,0,37,41,54,37,56,11,2,0,35,0,31,31,64,3,2,0,28,0,35,21,62,16,68,20,88,22,62,32,2,0,130,0,35,41,2,0,29,24,2,0,17,73,73,51,86,2,0,53,25,37,36,120,29,51,45,49,38,31,45,38,33,58,8,92,33,10,59,39,121,94,26,13,7,29,55,47,46,5,3,106,2,0,38,67,59,55,40,3,2,0,32,52,2,0,35,50,35,49,3,2,0,96,36,50,35,81,3,2,0,44,17,19,15,31,51,38,58,28,30,2,0,47,0,28,0,29,50,2,0,39,33,2,0,58,0,45,19,17,29,27,26,28,13,1,0,40,81,2,0,32,0,52,54,2,0,32,58,56,16,2,0,70,50,118,0,35,1018,78,52,88,52,31,27,29,29,29,28,2,0,41,696,0,31,2041,159,119,119,114,27,23,25,25,25,24,2,0,14,40,31,99,16,66,59,5,4,53,0,48,38,50,1,0,76,30,0,32,1,0,28,0,68,23,169,100,19,18,17,23,23,15,24,28,43,30,28,23,31,2,0,80,42,25,29,21,65,65,2,0,66,112,2,0,95,90,62,44,0,22,19,15,13,3,26,78,12,3,33,76,2,0,76,44,0,22,19,15,12,3,32,78,63,16,3,14,2,0,69,44,0,34,2,0,73,44,0,58,2,0,69,44,0,46,2,0,65,44,0,36,25,15,3,14,2,0,3,52,2,69,18,3,44,36,26,0,42,31,42,65,5,42,67,5,3,2,0,3,54,2,69,18,3,46,29,0,73,65,73,76,75,87,25,31,3,2,0,64,39,16,25,29,44,31,29,30,38,0,33,0,42,36,34,35,5,61,46,5,3,58,34,3,77,23,0,48,54,5,3,2,0,68,43,33,35,35,3,0,33,47,37,3,32,44,3,2,0,68,43,71,7,2,0,68,39,40,61,78,34,80,37,26,42,7,5,15,3,0,88,37,15,3,0,14,2,0,73,44,24,44,0,9,59,15,3,0,10,32,61,17,5,22,3,0,27,59,27,40,43,5,61,37,37,42,7,54,17,5,3,0,20,14,2,0,67,54,44,0,56,28,15,3,14,2,0,73,60,10,30,30,30,51,3,2,60,24,32,26,46,31,75,33,7,36,83,50,63,9,19,7,5,36,43,5,22,3,14,2,0,61,39,10,46,30,53,43,45,40,3,2,59,24,32,43,17,5,22,3,14,2,51,24,32,61,37,36,19,7,40,5,22,3,14,2,49,32,40,40,50,35,5,35,34,36,17,5,38,3,14,2,0,76,47,10,30,53,43,45,43,52,50,3,2,0,87,58,53,37,3,14,2,0,72,50,27,30,28,20,15,3,14,2,32,10,26,47,26,26,47,44,3,1,0,73,17,52,24,13,67,20,3,28,2,0,88,59,27,6,16,26,50,26,26,26,26,23,5,20,15,3,14,2,0,20,12,18,46,32,42,67,52,7,51,12,5,33,3,2,0,15,33,75,44,29,32,80,17,5,46,3,14,2,0,26,26,46,75,55,29,52,67,56,69,5,15,3,14,2,0,27,19,8,8,40,56,24,46,33,24,0,89,28,3,36,28,15,3,0,20,14,2,38,82,1,0,26,22,8,8,40,11,10,55,24,46,33,24,0,89,28,3,35,28,15,3,0,20,14,2,37,140,1,0,74,45,6,42,49,44,55,5,15,3,22,35,43,44,5,34,3,14,2,48,24,44,31,24,91,39,35,7,17,5,40,17,5,22,3,14,2,45,32,42,59,17,5,43,3,14,2,0,79,50,10,42,43,33,46,63,74,40,3,2,49,24,32,46,17,5,22,3,14,2,39,79,27,20,15,3,14,2,0,70,48,27,28,39,20,15,3,28,39,20,15,3,28,39,20,15,3,28,39,20,15,3,28,39,20,15,3,14,2,0,70,48,27,28,35,20,15,3,14,2,30,10,49,46,3,1,0,84,70,42,0,24,40,0,32,50,36,56,41,108,41,51,86,23,11,9,37,34,7,17,5,8,16,32,40,32,40,7,17,5,18,44,5,22,3,0,14,2,29,34,1,0,78,49,22,48,17,5,34,40,17,5,16,3,0,27,71,28,20,15,3,0,14,2,0,70,48,25,27,49,8,73,22,74,15,3,14,2,0,77,55,27,0,35,28,20,15,3,0,6,20,36,48,5,28,20,8,32,61,29,7,17,5,41,3,0,14,2,37,10,26,26,26,26,26,23,3,1,0,36,49,35,65,24,0,49,77,37,53,40,74,17,5,3,20,0,35,61,44,71,15,3,14,2,80,55,45,59,46,2,79,56,45,2,0,25,34,54,13,29,64,51,20,3,37,2,45,51,1,0,26,35,55,13,29,65,51,20,3,37,2,46,65,1,0,36,35,65,51,2,0,71,49,32,28,35,34,17,5,81,48,3,14,2,0,68,76,82,43,43,34,69,37,59,47,7,56,61,7,5,3,2,0,66,72,44,24,0,32,44,17,5,24,37,33,56,44,7,36,5,22,3,0,27,28,28,20,15,3,0,14,2,0,75,46,24,0,32,41,15,3,0,49,38,15,3,0,50,51,17,5,22,3,0,10,49,41,3,2,0,82,53,27,50,35,20,15,3,14,2,0,74,52,24,32,50,17,5,24,36,5,22,3,14,2,0,70,48,24,13,25,48,71,20,3,28,2,29,49,1,0,66,44,24,13,25,44,64,20,3,28,2,25,10,49,49,46,3,1,23,49,35,3,49,35,3,26,1,0,89,48,60,41,32,43,34,56,67,14,41,7,12,30,5,15,3,14,2,0,67,45,27,25,43,20,15,3,25,14,2,27,49,1,0,67,65,99,57,24,25,36,29,26,24,18,5,64,20,3,13,2,0,67,64,60,0,31,21,23,23,19,26,63,23,38,2,0,15,0,26,0,25,0,51,78,93,27,46,0,29,33,35,39,19,2,0,26,14,24,2,0,56,34,38,24,0,12,25,40,16,43,22,9,7,5,6,0,67,53,0,66,14,0,27,37,69,0,24,69,77,0,63,52,2,0,31,61,49,86,30,0,36,2,0,35,45,55,49,82,2,0,34,62,70,71,21,31,111,21,39,5,3,29,85,59,2,0,42,23,62,56,58,43,3,29,99,59,2,0,64,32,0,27,46,45,17,29,17,11,12,55,19,7,34,17,35,23,34,7,11,19,52,21,32,13,14,32,13,14,18,7,11,12,96,19,14,18,7,5,3,2,0,59,67,62,18,0,38,22,67,27,19,19,0,31,2,0,20,0,66,66,65,11,2,28,2,31,49,64,50,85,18,45,10,15,40,3,2,0,40,49,64,62,40,2,0,55,49,15,62,0,39,68,11,33,47,3,0,69,39,2,0,48,49,22,41,54,67,5,82,3,62,80,2,0,40,49,62,45,2,0,48,49,22,86,97,29,30,23,29,5,43,3,62,42,2,0,45,49,15,22,77,105,48,3,99,51,80,28,21,27,3,32,48,2,0,47,49,113,76,18,42,3,68,2,0,43,45,26,51,22,54,84,5,22,30,58,71,7,47,5,3,43,2,0,45,45,23,26,15,36,65,66,5,3,0,81,2,0,38,17,66,36,17,31,0,24,62,62,60,61,64,64,63,63,61,0,17,47,15,46,0,17,51,99,40,102,102,5,0,62,22,89,33,0,28,31,32,0,68,61,67,45,17,33,0,27,47,0,28,40,0,17,33,0,27,40,0,27,37,0,27,39,0,17,36,0,18,43,0,17,38,3,0,81,2,0,36,56,19,36,2,0,28,41,12,96,41,85,19,41,58,48,28,31,15,3,50,13,28,31,56,0,21,87,37,34,36,0,41,19,7,39,15,70,106,3,0,89,2,0,65,68,66,0,67,85,76,0,82,80,38,109,0,48,77,63,0,41,144,115,114,22,14,5,0,50,55,66,28,31,20,32,3,0,140,84,0,14,2,0,59,36,27,3,0,97,42,1,0,30,37,15,3,0,83,38,1,0,38,23,22,32,87,82,60,15,119,43,2,0,60,0,41,23,108,75,68,45,83,66,15,114,47,3,81,37,15,21,43,3,56,45,59,75,3,112,0,69,43,2,0,55,0,31,49,0,26,60,29,74,15,90,10,31,3,13,2,0,33,40,12,98,45,31,27,52,41,28,48,100,17,35,23,34,7,12,84,17,5,3,50,46,2,0,32,0,39,0,38,32,7,25,17,48,38,12,15,5,3,0,33,2,0,53,64,39,10,34,3,2,0,31,38,12,91,45,93,113,24,24,55,16,21,52,9,7,52,52,5,27,52,40,28,31,52,17,19,14,67,14,20,13,14,39,13,7,35,23,34,7,28,12,17,5,3,2,0,88,42,52,35,14,17,11,0,13,45,13,7,0,20,13,94,0,17,5,3,50,2,0,34,0,43,45,13,15,38,38,66,65,38,37,46,38,80,19,78,13,10,10,22,30,21,33,8,5,21,33,0,30,16,52,8,0,17,5,10,31,76,40,24,41,38,7,38,43,88,32,41,20,48,44,10,7,39,5,24,76,38,15,5,34,3,2,0,62,0,32,25,32,88,10,2,0,73,47,2,67,27,0,27,27,53,45,40,38,39,39,34,30,53,30,59,91,17,37,71,72,37,28,12,11,5,18,3,54,2,0,63,24,0,26,30,26,33,26,3,37,2,0,65,0,22,0,16,17,19,33,21,33,27,13,23,20,25,25,21,37,39,15,23,23,25,40,2,0,62,62,66,13,2,74,0,34,37,1,0,62,64,37,0,49,54,1,0,68,65,0,36,41,1,0,13,17,12,16,20,32,24,14,22,32,26,36,38,22,24,22,24,40,16,38,20,19,22,17,2,0,29,19,18,27,30,73,3,34,26,24,5,31,25,38,99,45,53,8,51,3,23,16,1,0,77,63,81,97,35,51,60,62,35,51,61,70,34,40,71,92,49,40,12,39,23,41,26,13,10,18,55,29,52,42,75,72,29,34,17,22,86,17,13,9,6,1,63,36,44,5,50,51,5,59,1,52,36,1,64,26,19,29,30,27,34,31,2,39,54,25,165,57,54,9,52,24,37,11,5,15,44,5,1,30,12,25,24,49,32,43,35,24,13,84,32,13,42,31,13,9,5,38,1,3,58,3,52,48,28,87,30,21,47,50,10,5,26,1,58,24,22,18,58,6,130,1,3,46,3,34,72,36,57,29,25,37,47,44,12,32,35,23,39,90,32,66,37,32,19,28,48,37,38,43,46,48,48,56,56,31,21,45,34,48,79,74,85,43,75,152,25,39,48,61,68,54,72,52,29,60,62,72,46,69,94,90,50,35,98,52,29,81,83,84,25,56,54,144,29,25,56,67,79,38,78,64,79,59,67,49,79,75,77,35,29,25,21,82,84,66,37,53,63,42,62,61,71,58,83,76,80,60,37,42,58,37,33,72,156,33,29,25,21,59,104,90,58,37,101,22,38,44,58,52,60,55,86,91,95,102,64,66,168,21,41,71,62,86,44,82,51,27,102,64,66,166,21,39,90,43,77,21,19,73,65,229,17,83,84,67,232,47,45,49,61,60,93,148,23,29,62,113,81,121,25,35,54,40,29,25,21,17,62,63,46,115,21,60,77,45,27,21,17,52,81,57,67,71,17,26,13,10,47,44,68,34,49,50,125,39,47,74,46,21,19,30,14,54,30,24,56,35,38,61,17,15,46,28,24,41,62,17,15,69,32,48,48,53,54,110,77,25,23,17,66,42,39,35,40,36,50,64,29,27,21,19,28,14,53,69,34,49,93,36,49,43,43,28,55,85,85,82,46,21,101,105,61,52,77,86,65,61,17,61,49,129,35,55,29,44,40,54,81,33,29,27,21,17,65,26,22,62,55,61,79,115,17,24,42,17,86,71,48,33,27,25,19,47,84,86,19,46,106,50,17,78,31,34,44,34,19,13,9,6,1,41,24,25,35,47,19,45,37,13,46,46,13,18,47,13,9,5,33,1,54,24,31,24,31,31,42,19,21,9,38,23,9,14,21,37,27,13,18,40,32,13,37,46,39,17,59,46,17,51,39,17,22,46,17,13,9,5,18,33,57,5,26,44,5,33,57,5,26,44,5,16,1,61,49,33,94,95,78,1,41,71,1,41,51,33,51,41,51,50,52,18,46,45,125,9,5,10,35,38,46,116,9,44,45,108,9,5,80,45,1,52,18,33,45,125,9,87,38,101,9,49,5,10,35,38,116,9,87,38,76,9,49,5,1,44,75,41,79,5,44,82,5,38,1,52,62,29,50,5,10,110,5,1,43,35,20,5,35,85,5,14,1,32,17,30,46,47,9,14,59,9,5,15,1,39,58,1,0,38,50,25,3,65,69,58,55,56,19,9,82,124,5,13,30,76,62,47,29,75,13,76,48,28,15,9,20,8,24,43,35,32,82,83,5,1,31,34,34,5,81,1,48,20,83,5,24,110,5,30,113,5,16,1,0,75,39,55,41,41,43,34,41,30,24,58,97,67,38,47,41,3,37,3,28,15,20,46,29,24,22,7,57,12,25,34,29,10,22,81,36,53,60,10,43,23,36,43,44,23,13,97,58,51,54,17,65,31,61,17,27,14,128,26,45,13,46,75,42,44,17,13,18,25,76,47,65,33,77,100,31,94,52,53,50,61,71,257,25,77,85,55,57,50,52,25,21,26,69,21,17,13,20,26,19,14,9,6,1,3,36,3,32,73,29,22,81,64,32,27,12,30,22,80,38,48,31,10,43,36,43,44,23,13,46,64,27,46,52,42,27,78,45,68,27,97,70,91,79,21,35,18,45,62,17,30,84,82,17,30,67,17,70,24,186,63,72,67,81,37,81,82,29,13,86,25,46,111,51,53,43,43,116,43,13,27,36,13,21,34,34,39,17,22,38,46,67,21,71,17,13,18,43,13,20,21,38,86,38,67,14,10,46,30,38,51,35,40,43,47,43,17,37,47,17,13,28,28,13,82,40,73,66,89,78,82,78,53,97,57,54,21,26,93,77,21,19,81,84,74,50,17,52,55,17,27,14,44,37,69,54,17,68,64,39,36,23,50,54,50,38,40,23,85,17,45,47,64,38,36,23,51,90,77,63,49,56,46,32,47,63,26,21,26,59,21,17,13,18,68,60,35,33,19,104,13,24,10,44,66,48,23,13,56,37,58,64,30,43,68,70,84,44,47,49,76,85,42,72,58,87,104,45,29,40,27,70,81,77,21,17,81,53,72,44,19,13,65,46,34,29,42,73,17,31,38,34,40,19,13,9,6,1,37,19,20,20,12,19,33,53,41,42,36,40,21,10,20,34,54,59,50,35,35,40,21,10,20,34,54,50,50,36,40,21,9,6,1,41,34,1,85,11,92,70,75,58,54,67,61,87,44,25,25,20,28,18,35,5,24,16,27,35,31,49,76,60,23,35,35,24,51,48,27,18,22,35,35,39,24,44,48,27,18,9,60,37,103,96,45,45,9,37,121,36,52,68,78,34,17,15,9,5,17,74,103,27,164,40,63,33,38,17,99,31,59,17,26,13,12,5,49,29,8,19,164,30,60,35,85,82,17,14,31,75,70,35,63,21,17,26,13,12,5,33,16,17,32,10,5,62,138,32,24,26,15,17,14,26,30,47,76,32,121,37,9,7,44,51,44,52,9,53,100,62,119,45,46,15,52,35,13,25,87,53,49,69,39,22,17,60,38,27,19,13,9,46,51,49,53,39,42,21,13,53,9,5,24,16,31,36,34,20,16,10,5,53,46,62,34,33,12,27,32,82,16,12,6,1,47,53,52,65,40,41,38,9,81,7,12,13,34,28,16,46,31,6,1,58,23,39,73,33,17,16,10,15,1,45,11,48,31,22,5,44,92,36,45,31,18,20,48,10,5,10,91,13,25,49,9,19,61,41,55,61,124,73,28,17,22,75,17,13,26,9,5,43,18,1,63,85,94,71,76,43,16,55,5,12,42,20,32,45,66,76,48,64,31,118,63,22,55,44,41,106,48,24,17,15,34,45,13,9,6,2,39,40,57,40,61,7,1,44,61,40,73,7,1,42,60,40,67,7,1,78,56,61,66,50,68,33,68,37,37,59,13,47,62,13,23,11,19,7,1,74,18,28,41,21,37,5,32,28,33,29,23,5,42,54,125,19,5,50,1,62,18,28,41,21,37,5,79,23,5,61,1,39,9,65,26,25,55,11,30,85,100,9,20,5,15,23,83,45,41,9,16,5,1,34,35,43,14,12,83,51,49,103,49,61,83,34,5,12,77,91,29,50,61,28,32,32,9,5,24,1,31,39,15,38,41,5,9,81,40,129,84,63,5,15,44,96,9,14,105,59,26,9,5,1,24,58,68,55,58,27,69,91,93,13,18,71,13,11,6,40,27,39,48,46,5,141,26,19,13,31,34,17,35,15,32,39,70,13,17,6,9,63,48,26,32,17,22,33,17,15,11,48,30,47,24,16,40,16,26,23,16,10,5,15,31,22,30,51,5,2,75,15,24,18,3,78,21,3,50,69,41,48,52,30,24,5,60,15,43,23,51,25,51,52,24,5,16,31,32,23,42,39,93,26,27,13,9,61,67,41,6,58,23,60,5,18,69,5,22,73,5,12,13,25,6,1,8,58,63,106,135,15,9,49,23,70,39,19,32,48,50,21,17,21,11,5,15,24,31,71,31,53,29,32,10,65,5,53,14,34,5,12,36,12,22,29,18,6,2,3,33,3,20,65,27,70,53,24,41,43,35,13,24,28,13,28,29,13,54,99,31,89,33,57,51,21,26,79,21,28,66,32,22,17,22,68,17,13,10,5,12,35,90,10,29,6,1,8,47,11,69,90,101,141,62,61,126,9,49,38,34,31,30,30,15,9,36,49,53,44,34,16,25,50,26,23,16,10,5,15,51,5,2,49,19,25,33,83,19,45,5,51,15,1,87,24,35,47,66,45,43,9,26,5,27,58,5,39,26,37,48,24,29,12,31,11,6,1,37,30,30,30,30,33,3,31,41,1,0,41,64,7109,8567,0,15,34,20,25,2,0,14,26,71,6,0,23,41,37,33,37,32,9,6,0,26,41,37,33,33,37,47,35,9,6,0,17,55,6,0,20,61,6,2,0,11,15,10,8,9,11,10,8,9,0,46,26,25,15,12,13,15,22,20,21,0,8,22,0,36,42,40,12,0,34,34,0,40,51,5,0,15,2,0,46,31,53,34,65,44,34,20,41,13,9,5,0,44,1,0,13,11,16,9,6,0,17,25,16,24,13,0,14,19,0,36,38,46,12,0,44,20,24,9,5,1,0,18,22,60,5,1,0,18,21,0,21,15,19,19,27,12,17,5,0,12,24,5,0,12,1,0,19,16,20,18,18,18,17,22,22,18,18,22,22,19,18,0,17,19,33,18,0,23,19,34,9,0,41,19,18,9,0,36,40,48,12,0,38,6,0,16,20,17,19,42,18,0,17,19,43,18,9,0,33,6,0,25,20,17,19,50,18,0,23,37,9,0,15,6,0,33,20,17,19,18,0,17,19,33,18,0,23,37,9,0,15,38,6,0,26,20,18,18,22,22,19,33,18,0,23,19,34,9,0,15,6,0,14,20,17,17,49,0,17,19,27,41,0,17,19,27,44,0,17,19,28,45,0,17,17,33,26,13,0,30,18,0,17,28,45,18,0,17,28,30,18,0,17,17,17,17,17,17,17,17,17,28,40,18,0,17,19,31,48,0,17,19,26,43,0,17,17,43,24,32,18,9,0,33,6,0,34,24,37,9,0,15,34,20,17,17,17,0,16,43,41,13,0,17,9,0,20,36,6,0,23,20,17,17,22,22,29,18,0,18,19,46,18,9,0,41,29,18,9,0,45,6,0,29,24,37,9,0,15,34,20,17,17,22,22,17,0,16,46,41,13,0,17,9,0,20,36,6,0,13,20,17,28,45,18,0,17,28,30,18,0,17,17,17,17,17,17,17,17,17,28,40,18,0,17,19,31,55,0,17,19,26,43,9,0,33,6,0,13,20,17,29,38,18,0,17,17,29,41,18,0,17,17,29,37,18,9,0,44,6,0,23,20,17,29,38,18,0,17,17,29,41,18,9,0,32,29,18,9,0,57,6,0,28,32,29,41,18,9,0,33,6,0,21,20,17,17,29,41,18,9,0,32,29,41,18,9,0,57,6,0,24,20,17,17,29,41,18,9,0,32,29,18,9,0,57,6,0,24,20,17,17,29,45,18,9,0,32,29,48,18,9,0,33,6,0,28,32,29,48,18,9,0,33,6,0,31,32,29,18,9,0,57,6,0,20,35,29,44,18,9,0,33,6,0,27,35,29,18,9,0,57,6,0,15,20,18,19,33,18,0,17,30,23,49,13,0,29,18,0,17,31,23,49,13,0,29,18,0,18,18,37,0,22,22,29,17,0,23,37,9,0,25,6,0,14,20,17,17,49,0,75,26,37,9,0,27,6,0,27,20,17,17,28,40,18,0,18,19,51,18,0,17,49,0,17,17,43,32,18,9,0,38,29,40,18,9,0,33,6,0,26,24,49,9,0,33,6,0,28,27,6,0,27,20,17,17,49,9,0,33,6,0,25,24,49,9,0,27,6,0,24,20,17,17,49,9,0,33,6,0,12,79,33,21,37,12,0,33,6,2,0,33,12,13,14,13,15,5,1,0,22,24,25,0,22,37,9,0,15,5,1,0,22,21,16,13,15,19,0,13,15,19,0,13,15,19,0,13,15,19,0,13,15,19,0,13,15,19,0,13,15,37,37,9,0,19,0,13,15,26,0,13,15,30,0,14,18,18,15,17,0,14,15,30,19,9,0,17,0,13,13,13,13,13,13,13,13,13,33,0,19,33,5,0,17,1,0,23,20,19,0,32,33,5,0,21,0,15,32,33,5,0,21,0,53,1,0,27,20,18,0,25,25,36,37,9,0,25,5,0,53,1,0,21,14,35,30,9,0,17,6,0,27,29,26,22,30,45,18,0,26,75,41,39,16,0,18,18,0,19,30,9,0,71,31,6,0,26,71,68,35,12,0,35,30,9,0,43,6,0,28,35,30,9,0,17,6,0,25,35,30,9,0,65,18,18,9,0,17,6,0,27,71,45,35,12,0,35,30,9,0,30,17,46,18,0,17,18,9,0,71,31,6,0,24,71,45,35,12,0,35,30,9,0,30,17,44,18,0,17,18,9,0,71,31,6,0,12,71,38,35,12,6,2,0,20,14,0,25,22,30,17,23,17,0,17,23,17,9,0,13,0,16,19,19,18,28,13,0,32,15,31,5,0,29,21,12,47,36,31,16,32,9,5,0,54,26,0,35,44,16,46,9,12,48,30,31,44,43,16,46,9,5,1,0,17,16,0,44,26,27,40,39,12,42,5,1,0,28,34,69,4,0,28,37,62,4,0,26,26,78,5,0,90,1,0,24,74,1,0,28,29,34,81,8,0,65,93,4,0,31,16,82,1,0,28,100,1,0,25,26,19,19,21,20,20,20,20,20,20,20,28,28,6,0,26,30,5,0,18,55,69,5,0,12,1,0,32,41,26,30,14,1,0,61,21,20,21,21,17,14,0,8,27,39,32,7,31,31,37,5,0,41,32,41,26,35,21,0,40,25,23,40,38,35,15,33,13,0,71,40,13,9,5,0,34,30,41,30,5,0,36,24,52,48,9,43,34,5,0,45,0,46,32,28,54,43,60,42,13,9,0,27,58,9,0,38,34,45,34,46,36,9,0,24,32,32,34,9,0,40,37,9,0,40,32,9,0,40,88,9,0,24,5,0,34,24,21,21,10,0,30,23,23,25,24,24,24,24,24,24,24,32,32,10,0,25,0,48,31,24,21,21,28,29,24,0,22,51,39,28,17,13,0,34,43,24,13,0,26,61,82,24,13,0,25,9,0,105,0,87,0,46,5,0,38,40,69,9,0,26,0,30,30,0,54,25,33,65,47,53,33,34,17,41,37,13,9,0,18,35,25,16,27,29,47,47,20,47,53,77,13,9,0,20,26,20,5,0,33,31,35,9,0,67,47,35,9,0,61,85,39,13,9,0,18,5,0,37,40,69,9,0,26,0,30,30,0,25,48,71,83,9,0,18,35,25,16,29,51,47,20,47,57,77,13,9,0,20,26,20,5,2,0,15,19,14,2,0,18,0,51,24,39,35,50,22,5,35,35,5,61,1,125,11,76,85,26,66,20,17,6,34,62,73,26,38,22,29,46,42,26,10,5,43,93,5,23,64,25,68,138,9,5,22,97,5,66,37,18,84,82,7,23,27,21,44,31,42,21,31,28,25,59,34,28,27,55,9,31,62,157,99,39,30,186,13,145,9,14,87,26,64,79,125,70,13,18,67,47,25,44,81,40,17,69,13,9,5,12,16,22,28,17,16,16,12,6,1,36,31,21,39,41,36,24,32,35,56,17,40,56,17,40,53,17,43,29,17,22,31,17,22,45,35,32,17,22,36,17,22,45,35,32,17,22,36,17,22,42,35,32,17,22,36,17,22,20,72,9,5,30,21,53,53,48,62,49,21,26,70,5,48,1,23,81,18,14,1,0,3,78,79,11,3,42,38,41,50,46,52,44,3,78,26,3,28,17,59,17,75,25,20,1,36,17,60,28,5,42,21,30,21,24,19,21,25,43,62,74,74,19,9,21,52,21,52,21,31,34,9,24,21,40,20,46,51,105,15,9,33,1,3,74,3,44,35,37,67,56,27,46,163,43,29,24,22,7,12,43,23,41,26,13,10,18,41,75,13,10,43,52,55,54,23,13,23,29,17,45,13,23,37,13,34,28,13,18,65,42,66,117,35,65,61,55,55,35,58,71,147,21,191,49,84,35,49,21,29,17,57,45,68,120,90,17,88,88,84,24,32,46,69,87,82,89,87,41,23,17,13,36,32,63,88,13,20,24,39,87,18,13,10,42,76,50,57,57,45,52,30,53,117,21,28,43,59,22,17,22,54,17,13,24,10,44,53,23,13,40,43,85,67,87,44,32,25,75,21,31,45,21,52,100,41,78,125,107,61,43,39,70,91,62,29,51,63,38,69,88,59,63,67,47,63,47,59,67,48,65,90,59,43,71,37,42,105,88,52,86,98,67,51,78,45,98,65,47,41,37,34,130,56,29,91,46,80,86,29,53,108,88,76,48,60,77,94,67,74,29,25,21,88,49,78,49,73,137,25,126,21,41,50,66,59,55,43,31,103,67,44,25,21,17,13,9,6,1,0,23,10,36,11,11,11,11,13,11,14,22,10,13,12,12,76,53,10,10,24,2,59,62,59,163,24,41,73,37,51,21,24,18,7,57,22,80,18,25,77,9,14,68,79,9,81,50,6,12,36,22,70,29,86,56,67,31,28,39,38,22,17,15,39,45,42,28,37,40,22,17,13,95,23,121,28,33,38,22,17,59,26,77,32,51,37,89,72,69,37,21,17,42,67,31,65,32,37,57,26,21,50,32,43,42,26,21,28,61,22,17,15,84,80,53,83,76,83,83,22,60,80,48,92,53,54,43,55,17,34,45,48,57,26,77,17,22,54,88,21,44,45,51,72,21,17,24,33,29,36,18,15,93,24,61,9,65,87,3,3,18,15,32,39,100,56,73,20,65,79,37,20,13,9,6,1,0,49,18,129,60,13,0,57,2,0,30,0,96,0,28,74,75,12,40,54,19,42,27,35,20,6,1,65,19,63,15,54,18,53,34,48,27,1,28,16,21,40,20,1,32,40,61,7,37,20,24,18,7,20,22,30,7,1,53,81,100,63,30,24,19,9,14,33,21,23,24,16,36,32,34,58,120,21,17,16,17,15,9,9,6,1,0,3,51,92,3,20,113,38,28,56,70,38,7,74,38,7,82,33,25,90,28,15,87,25,27,9,6,53,58,154,5,65,62,29,24,30,33,13,88,9,6,59,43,32,111,22,24,9,27,96,9,27,5,45,19,49,29,66,13,9,5,78,82,65,19,36,44,29,31,34,36,38,55,9,32,39,37,38,32,23,15,9,46,21,109,51,45,13,63,21,30,32,15,40,34,23,9,27,37,9,24,30,50,53,9,26,31,77,24,53,9,25,35,9,31,72,22,9,26,78,9,23,75,22,9,27,55,100,30,28,31,15,9,28,84,40,49,9,5,44,63,29,64,9,56,47,9,30,48,37,35,30,45,40,26,33,29,85,37,30,32,21,68,17,30,107,69,37,30,17,38,33,34,18,81,13,31,74,33,47,39,63,29,83,25,33,21,65,17,13,46,27,33,35,38,18,76,13,61,65,35,62,84,51,54,23,67,65,21,17,13,9,19,5,44,44,20,42,37,36,37,37,24,48,13,9,53,47,48,42,38,40,50,58,51,26,17,35,36,17,22,78,25,33,70,26,35,23,17,13,31,35,70,45,36,55,22,27,13,51,47,47,13,36,9,32,52,9,5,23,23,37,40,43,36,29,25,84,13,45,67,13,20,22,39,26,14,13,22,28,55,40,90,17,16,10,85,88,86,92,38,28,29,37,76,26,31,43,38,29,81,29,43,86,96,28,29,49,32,17,22,35,51,17,26,105,80,22,13,74,39,33,41,45,109,17,13,21,74,31,13,18,28,13,10,33,86,38,28,43,33,29,43,72,37,45,53,21,34,17,13,24,10,44,90,86,62,28,43,38,29,43,35,39,73,27,21,81,17,27,33,17,28,29,26,94,41,52,43,41,64,25,21,49,17,22,34,17,13,20,21,48,14,10,23,23,23,38,86,92,26,9,6,21,1,0,44,49,64,71,76,37,77,76,79,21,135,36,19,47,21,62,103,32,67,5,26,73,45,48,9,45,50,9,42,65,9,14,66,9,5,10,57,5,81,20,95,39,26,69,125,77,54,9,41,5,10,83,5,20,23,58,80,173,60,37,21,29,21,22,26,38,25,9,95,12,69,40,15,6,1,36,42,67,54,40,1,39,25,25,17,33,43,81,43,20,56,10,22,7,1,99,64,33,66,68,68,74,77,15,27,45,71,28,33,9,95,22,11,84,27,19,6,95,21,96,23,19,6,35,15,47,126,6,48,13,41,7,12,30,22,31,28,68,21,30,16,24,67,21,30,16,79,72,24,107,64,39,18,15,79,37,15,86,84,63,30,27,85,84,73,81,27,24,35,37,18,15,81,90,66,60,56,54,65,36,28,33,26,51,55,60,93,60,93,77,31,56,58,49,33,21,38,76,38,21,58,35,78,64,21,46,69,119,94,74,108,85,65,50,89,63,68,44,73,45,122,30,25,30,44,39,40,30,25,92,70,55,84,114,115,78,79,66,25,30,73,25,21,17,81,74,81,62,79,48,17,24,33,32,18,15,86,29,48,36,50,54,61,17,37,61,17,61,31,61,65,21,136,87,54,54,25,65,21,53,90,56,32,66,37,26,21,26,65,21,17,22,60,17,15,86,82,69,81,44,25,29,79,36,32,29,74,36,52,74,21,30,16,86,29,28,50,75,61,31,87,65,21,86,28,72,33,22,17,22,66,61,17,15,71,85,44,69,31,61,34,31,69,86,74,17,229,24,60,121,31,32,24,17,24,27,28,18,15,9,6,1,79,76,26,68,5,15,39,38,58,66,45,34,21,51,21,158,33,68,5,24,1,3,71,68,33,64,58,3,35,71,15,46,43,16,10,48,76,46,34,9,33,5,14,1,50,28,48,20,5,17,60,20,5,17,1,26,56,1,0,53,33,53,31,39,3,48,3,85,57,87,25,30,5,63,60,69,59,26,27,1,57,36,12,13,66,22,19,23,23,6,1,55,41,39,19,1,3,80,45,3,100,57,76,67,88,34,5,49,17,27,13,90,125,9,21,51,75,74,77,77,34,9,5,10,69,5,31,32,1,3,77,67,3,63,56,44,28,109,112,52,5,56,85,26,28,31,26,15,50,23,36,10,5,22,1,38,27,58,5,10,42,28,50,53,73,57,5,1,3,98,100,3,50,27,14,18,24,6,49,65,76,78,58,53,37,5,10,71,5,25,74,109,57,102,82,77,59,47,31,16,21,22,105,55,14,18,10,5,81,77,38,44,80,15,26,27,31,173,15,32,37,65,24,130,93,96,59,48,34,24,40,29,29,15,62,9,14,77,17,52,13,19,144,103,88,26,19,93,62,41,33,44,18,56,13,54,55,53,52,17,13,9,38,46,5,20,83,6,38,41,80,5,47,40,37,45,21,22,49,93,26,24,24,35,32,23,15,18,23,65,10,25,7,33,66,99,32,81,52,28,68,101,101,98,45,11,5,48,41,36,58,44,57,104,57,23,25,40,53,19,13,9,5,78,80,86,12,17,18,113,51,10,14,6,52,90,93,36,58,5,23,42,5,1,41,50,56,29,1,62,11,95,18,64,35,83,38,49,38,48,28,47,17,22,105,17,13,9,5,1,41,16,47,27,7,41,1,25,45,85,1,42,98,1,34,75,1,44,81,1,41,50,1,42,28,49,63,93,69,86,62,70,85,41,39,44,50,6,1,65,95,72,40,46,79,9,21,7,18,72,50,15,5,22,13,20,22,23,19,23,6,46,52,29,15,23,11,5,43,49,26,15,24,31,11,5,20,1,3,64,64,59,41,3,65,62,27,13,20,115,15,13,20,21,25,28,13,12,95,24,72,40,46,80,9,21,10,1,63,41,123,1,68,70,81,46,48,36,20,5,43,50,45,20,5,81,74,66,44,28,87,20,5,17,1,41,60,1,77,29,31,65,36,71,31,50,26,30,32,41,44,51,23,96,96,29,101,227,13,9,22,69,36,9,21,7,28,1,62,60,1,24,88,1,47,86,1,51,73,1,69,52,41,34,24,9,5,1,57,61,17,25,53,29,82,1,0,15,17,36,28,58,42,70,58,30,34,36,60,52,42,34,40,50,24,18,48,52,51,2,0,3,26,28,3,30,35,17,2,0,15,15,31,45,51,4,10,25,24,37,5,4,3,2,1,0,3,40,49,51,3,39,17,11,67,52,3,1,0,3,40,47,3,30,28,28,55,1,0,3,44,52,28,37,37,41,36,3,46,29,0,15,60,0,35,48,0,36,56,3,0,51,55,53,0,31,0,24,29,9,3,0,17,24,52,25,3,0,30,53,3,0,24,29,47,45,43,29,4,60,47,54,46,58,30,5,4,3,0,28,2,1,0,36,56,25,3,55,33,50,45,33,42,9,7,1,82,12,17,23,58,49,23,9,5,16,9,79,59,27,44,9,19,5,15,39,63,9,48,49,20,9,5,16,1,67,28,59,5,15,107,22,5,72,50,33,23,43,43,5,42,80,5,10,36,5,17,20,13,23,31,32,49,28,52,13,18,53,13,10,42,28,51,13,18,52,13,9,6,95,15,1,41,33,29,27,6,36,63,37,35,26,9,39,6,12,40,22,42,42,31,10,20,51,10,25,47,56,13,9,6,1,0,50,78,52,36,56,25,3,37,89,15,26,121,12,29,34,29,71,10,52,47,109,51,26,13,51,71,23,13,64,56,273,29,26,31,153,14,27,44,52,17,22,224,91,17,13,20,76,76,69,121,62,38,100,37,13,56,52,48,52,91,87,63,37,13,18,35,46,72,60,95,31,17,13,23,75,91,66,68,65,94,74,92,90,66,178,42,85,25,21,44,17,79,67,89,84,86,104,62,35,21,17,32,88,31,17,60,32,91,77,30,49,32,36,70,26,21,31,17,13,32,84,90,27,13,23,36,24,23,34,18,13,81,43,32,28,13,57,40,28,29,27,36,78,31,17,32,85,31,17,92,31,17,34,86,36,30,53,83,43,113,29,112,48,25,32,31,42,26,21,26,37,92,92,25,43,47,59,21,17,13,70,10,18,51,35,41,53,9,160,3,4,13,9,6,1,36,20,21,41,27,41,5,27,43,43,5,29,1,75,58,12,101,18,116,19,5,119,19,5,67,22,126,23,9,129,23,9,5,18,119,19,5,122,19,5,1,98,80,75,38,31,56,73,9,28,35,55,21,52,83,88,36,17,27,46,32,21,17,13,65,22,39,9,5,80,25,56,43,115,20,27,9,15,5,20,102,79,5,1,29,72,11,78,70,47,47,47,62,63,30,37,69,29,43,9,89,20,18,9,84,78,75,70,84,21,9,62,43,5,16,107,23,5,24,45,53,50,5,10,23,5,80,21,75,5,12,60,81,19,7,15,15,5,40,29,38,38,60,5,17,9,68,5,17,34,22,9,5,42,60,23,29,44,44,11,5,20,15,5,53,34,18,75,31,16,25,59,10,5,10,59,31,81,54,11,36,9,80,61,106,24,102,90,95,46,18,41,69,85,83,37,75,42,69,13,9,14,71,48,92,54,9,32,5,1,98,58,48,23,15,39,71,18,40,5,18,15,59,20,69,31,38,41,36,39,30,53,34,21,40,34,17,78,96,13,19,61,22,13,9,80,48,50,9,5,1,105,15,52,17,22,5,9,23,54,58,27,71,9,67,83,83,56,72,34,74,65,30,64,31,66,41,54,51,91,90,68,85,89,70,110,47,96,67,66,66,86,53,25,21,17,22,46,17,13,9,57,76,54,45,26,17,13,9,47,53,59,38,26,55,40,67,100,126,27,47,13,59,51,56,74,13,66,77,37,28,107,69,42,13,9,32,5,15,43,5,1,43,69,92,42,1,55,77,29,34,5,29,47,5,30,27,35,18,7,1,123,50,16,21,5,24,66,41,23,71,50,70,77,42,49,13,18,39,13,9,14,26,35,9,26,95,63,9,5,53,46,66,63,21,42,9,36,64,9,5,21,136,19,23,24,96,54,28,9,5,1,70,12,53,46,92,79,32,74,56,28,93,41,24,28,62,18,13,9,47,37,9,5,1,3,36,37,31,2,72,75,3,57,79,28,65,47,71,77,28,9,5,1,48,73,1,50,44,62,54,5,37,1,0,52,3,51,3,33,32,33,42,7,1,3,77,25,3,51,11,80,41,46,33,96,18,5,35,27,141,29,21,7,102,79,37,42,103,101,52,29,34,9,5,69,32,38,85,106,5,21,1,143,64,79,11,62,26,15,5,47,18,35,31,6,28,13,25,28,21,6,34,28,25,21,21,21,25,13,133,73,84,72,83,9,19,17,65,72,55,41,17,22,68,17,25,13,21,45,74,21,9,45,24,33,9,52,54,68,60,9,70,45,33,9,81,76,47,44,68,74,30,25,13,47,69,37,25,13,40,72,47,37,25,13,242,9,5,40,80,5,1,49,42,23,24,9,74,58,91,24,9,7,18,1,40,40,35,22,24,41,5,10,24,5,1,0,36,42,27,29,12,34,42,19,40,43,45,53,95,144,45,69,97,83,78,63,31,25,77,59,27,21,61,48,48,36,29,79,25,35,49,25,45,82,85,65,67,48,69,88,59,63,67,47,63,47,59,67,48,90,66,43,71,37,34,134,56,74,29,25,21,17,13,27,70,46,42,30,60,15,9,6,1,0,3,76,2,50,6,48,20,69,6,3,43,12,43,44,83,43,51,22,127,55,26,74,65,74,62,64,27,50,56,67,55,71,65,78,92,83,99,96,185,37,25,21,52,87,83,94,86,77,142,35,23,137,17,24,28,43,91,22,17,13,24,9,6,1,32,21,30,40,72,37,37,40,37,13,9,24,5,68,43,5,19,1,0,3,78,3,31,12,35,24,17,88,75,13,23,59,13,9,6,1,0,3,47,3,30,12,34,18,35,48,13,24,9,6,1,0,35,22,26,36,23,28,32,75,25,25,26,88,26,20,26,24,19,19,27,35,28,35,20,15,26,38,40,76,10,35,30,38,85,9,6,35,40,31,85,27,21,21,24,23,24,10,5,76,75,35,5,30,45,5,47,38,32,5,35,36,5,20,1,38,33,12,14,60,43,46,28,69,45,45,63,21,10,15,46,78,62,66,72,40,32,9,6,1,3,72,27,3,27,73,25,26,3,34,49,3,41,25,9,43,5,13,29,38,78,38,9,5,1,43,23,76,33,30,35,166,65,28,35,41,34,116,70,98,53,5,43,52,96,36,103,32,14,52,25,87,13,81,55,9,21,28,61,58,9,91,5,37,27,14,30,36,31,24,26,24,33,16,17,31,51,9,6,37,79,19,102,9,22,51,9,47,6,9,53,25,32,96,97,66,13,20,28,43,48,45,63,35,33,32,92,90,42,33,86,42,36,89,84,75,43,71,25,14,10,35,148,41,33,80,30,41,55,68,17,13,18,57,13,54,42,33,23,24,38,31,44,53,51,34,49,41,183,25,21,17,15,44,52,76,40,75,21,17,55,41,87,17,50,50,17,15,28,28,27,9,46,58,36,43,92,10,28,63,9,37,27,43,49,13,23,9,14,43,9,5,15,28,16,5,1,53,41,34,69,48,177,53,9,41,39,9,5,71,42,5,1,27,76,106,1,55,52,43,5,57,14,108,34,1,59,21,60,68,31,88,44,9,23,57,9,43,69,9,38,58,88,76,9,5,19,1,71,40,29,25,2,49,11,47,34,42,49,66,101,102,84,52,9,5,70,86,15,5,52,108,25,38,9,53,134,9,14,26,9,5,1,46,42,56,24,9,19,45,54,13,43,65,13,18,44,13,9,6,1,31,35,27,5,10,29,5,1,39,50,12,18,47,32,46,6,1,31,12,15,45,67,6,1,26,12,15,35,89,57,6,1,31,12,15,47,89,69,6,1,33,85,1,0,15,17,42,42,14,40,33,2,0,24,0,28,0,28,0,3,11,3,0,13,15,15,15,19,0,3,35,2,11,2,39,2,29,28,78,26,14,3,0,33,26,24,44,24,57,55,3,18,61,25,4,2,0,3,49,2,22,19,15,3,0,23,20,25,11,3,139,7,4,15,11,3,31,46,17,17,16,15,14,13,19,16,15,13,19,17,16,15,14,13,19,19,18,16,15,13,19,19,18,16,15,13,19,24,23,17,16,14,15,12,23,3,1,0,3,25,2,21,19,15,3,0,23,16,36,3,16,36,3,16,36,3,16,36,3,19,1,0,3,24,2,21,19,15,3,0,22,32,28,30,30,15,1,0,3,24,3,0,30,15,11,3,21,43,3,46,1,0,29,3,64,32,2,34,3,0,84,24,26,24,26,22,0,3,60,3,0,19,19,0,3,75,2,78,3,0,24,0,3,26,3,0,13,0,3,18,28,19,15,3,0,33,18,0,24,59,42,3,0,64,1,0,3,48,2,28,21,14,3,0,33,0,20,16,31,0,21,0,27,27,39,19,25,21,20,0,47,43,43,29,5,0,38,0,38,44,25,5,0,45,18,72,73,39,14,49,44,30,42,0,81,30,16,7,19,7,0,51,40,0,70,28,3,0,30,45,40,39,0,58,43,24,3,0,15,1,0,3,61,38,2,29,14,3,0,29,27,0,21,21,0,81,25,0,33,52,48,32,71,12,61,5,3,1,0,3,24,2,14,3,0,20,21,1,0,3,67,2,23,20,14,3,0,24,13,57,38,19,5,3,57,38,18,5,3,15,1,0,3,16,2,21,18,15,3,0,22,60,13,1,29,0,3,55,2,34,3,0,29,43,18,32,20,20,30,46,54,40,35,0,3,10,3,0,18,18,16,14,15,15,11,2,0,3,62,60,38,2,74,3,0,22,78,76,15,94,16,3,0,58,94,158,59,138,25,82,158,71,127,1,0,3,76,3,0,36,7,29,17,56,3,2,0,0,3,37,2,14,3,0,27,33,0,35,20,31,13,31,40,0,25,0,33,41,0,68,66,56,16,16,50,31,12,25,48,47,20,5,5,0,27,1,0,3,42,48,2,14,3,0,16,46,52,36,18,70,1,0,3,21,2,29,15,3,0,27,7,29,42,12,41,5,15,1,0,3,21,2,64,15,3,0,17,8,7,30,15,0,72,65,26,3,0,11,1,0,3,62,3,0,23,0,3,52,2,42,44,32,2,25,15,3,0,25,7,31,16,1,29,0,25,0,3,23,3,0,29,30,33,0,3,51,2,34,3,0,43,20,18,32,20,20,30,0,3,10,3,0,36,0,3,76,2,78,3,0,70,30,31,15,16,17,18,70,0,38,29,55,63,38,25,0,18,13,7,0,3,55,72,2,44,3,0,49,0,27,204,1,0,40,40,43,0,3,58,3,0,22,40,41,21,1,0,3,52,3,0,36,43,42,36,23,17,2,0,3,65,3,0,36,43,43,2,0,3,43,2,14,3,0,27,28,33,0,18,23,69,0,63,81,10,38,35,3,1,0,3,79,3,0,16,65,1,0,3,21,2,29,15,3,0,27,27,79,57,29,10,35,3,1,0,3,21,2,64,15,3,0,17,27,1,0,3,34,2,75,78,3,0,41,13,45,0,59,0,41,15,39,27,0,59,55,51,31,7,12,0,16,27,64,26,12,0,16,15,36,31,15,24,22,9,0,71,71,73,57,30,25,28,0,65,55,51,31,7,12,0,12,50,65,3,0,50,17,0,25,0,16,1,0,3,36,2,63,49,3,0,23,25,0,46,41,62,3,1,0,3,61,3,0,23,23,0,3,65,22,3,0,68,32,8,29,1,0,3,12,47,15,3,0,3,18,10,3,0,28,0,3,81,42,11,3,0,133,0,3,44,11,3,0,113,0,3,51,11,3,0,52,0,3,79,2,76,76,74,27,2,78,80,75,12,2,22,19,10,3,0,28,20,79,44,1,0,3,14,40,34,43,15,3,0,3,20,11,3,0,32,0,3,18,10,3,0,32,0,3,57,2,71,19,10,3,0,31,24,40,0,15,15,3,0,13,16,16,20,0,58,36,19,26,14,19,25,14,19,25,14,19,24,14,19,24,14,14,17,5,0,30,46,5,0,26,19,3,0,28,44,11,1,0,33,0,3,11,33,15,3,0,3,18,10,3,0,22,0,3,66,2,23,25,10,3,0,31,28,73,0,20,0,42,23,0,46,70,0,20,0,42,25,41,0,28,23,51,21,15,21,15,9,5,3,0,23,14,32,3,0,22,10,47,22,41,5,3,0,22,14,3,0,25,0,14,1,0,3,29,11,3,0,32,33,43,18,31,12,13,0,52,43,29,5,0,31,3,1,0,3,14,33,47,15,3,0,3,18,10,3,0,36,47,0,3,23,11,3,0,20,0,3,13,11,3,0,26,48,16,68,0,3,61,36,2,22,29,19,10,3,0,38,36,33,14,3,0,39,32,0,12,1,0,3,44,2,22,20,10,3,0,28,26,0,42,22,64,3,0,42,22,97,3,0,15,18,1,0,3,45,2,22,29,11,3,0,48,12,15,23,0,28,19,22,0,20,20,3,0,36,63,0,29,22,43,0,24,34,0,37,61,3,0,19,30,25,10,3,0,35,29,0,33,24,37,3,1,0,3,38,2,22,21,11,3,0,40,34,0,48,37,54,42,3,0,32,1,0,3,30,2,22,21,11,3,0,30,26,63,31,0,31,26,0,44,25,5,3,0,22,0,17,1,0,3,63,2,30,29,11,3,0,43,38,0,48,0,48,53,36,21,4,1,0,31,0,3,11,33,52,15,3,0,3,23,11,3,0,34,26,20,0,3,18,10,3,0,30,42,0,3,40,2,29,19,10,3,0,25,20,0,26,23,20,3,0,30,0,27,30,17,3,0,18,26,20,0,34,1,3,62,2,29,19,10,3,0,28,28,0,32,15,24,3,0,38,0,27,30,17,3,0,18,26,20,0,42,1,3,48,2,22,19,11,3,0,26,70,23,3,0,21,19,20,0,72,42,35,40,32,25,30,41,39,36,9,13,25,25,25,25,25,25,16,18,27,5,3,0,29,15,9,0,17,17,26,0,24,22,24,3,0,12,1,0,3,46,2,22,28,20,11,3,0,33,41,25,54,26,1,0,20,19,30,21,22,13,18,19,40,21,24,26,23,27,18,27,28,16,20,23,20,19,29,29,22,23,27,20,20,29,25,40,26,19,15,26,30,28,23,33,32,29,23,30,31,17,28,31,27,32,28,42,40,32,26,22,30,26,37,34,31,24,35,23,41,2,0,3,11,33,47,15,3,0,3,23,11,3,0,25,0,3,18,10,3,0,24,0,29,28,0,24,50,0,29,19,12,12,12,12,12,12,11,2,0,32,16,12,12,11,2,0,53,16,12,12,11,2,0,3,45,11,3,0,48,15,0,58,30,30,0,26,31,31,45,0,19,21,5,0,12,1,0,3,23,2,62,61,61,60,22,2,30,20,10,3,0,24,33,70,15,3,0,33,58,3,0,10,29,18,64,12,3,0,33,67,10,1,0,3,9,47,15,3,0,3,18,10,3,0,24,0,3,59,11,3,0,39,43,0,46,41,17,5,3,0,14,1,0,3,41,2,25,10,3,0,27,16,54,3,0,44,16,20,10,3,0,21,38,10,3,0,15,44,0,46,28,0,69,14,5,0,26,26,3,1,0,3,15,52,15,3,0,3,23,11,3,0,42,26,30,38,36,26,22,0,3,20,11,3,0,37,27,0,26,48,16,70,39,0,3,34,2,26,11,3,0,39,32,36,45,0,30,26,16,32,30,17,16,33,17,15,1,0,3,18,10,3,0,36,0,3,50,2,23,24,28,21,10,3,0,45,27,0,20,62,0,23,29,0,25,16,12,15,0,39,35,47,12,5,0,22,14,39,39,0,33,46,44,14,37,39,7,0,26,46,12,18,19,75,5,0,34,0,32,25,38,5,0,30,27,54,27,12,5,0,20,43,3,1,0,3,33,2,21,19,11,3,0,32,56,20,3,0,36,38,0,41,22,36,3,0,16,1,0,3,61,2,21,25,22,19,11,3,0,45,10,0,29,58,20,0,47,53,27,5,3,0,32,1,0,3,37,2,21,19,11,3,0,35,21,80,21,3,0,25,92,25,3,0,18,1,0,3,37,2,62,64,2,31,19,11,3,0,32,7,44,15,21,3,1,0,3,33,2,31,19,11,3,0,38,30,0,54,67,17,3,0,15,1,0,3,52,2,22,21,11,3,0,28,45,26,21,1,0,3,17,2,31,31,25,26,26,11,3,0,54,21,20,43,0,22,28,41,0,23,29,0,23,67,55,0,23,62,69,0,32,16,12,5,0,26,3,0,24,12,10,3,0,39,14,0,22,25,15,1,0,3,39,2,31,26,11,3,0,36,17,10,3,0,34,41,22,37,3,1,0,31,0,3,32,2,29,30,2,19,39,2,20,20,19,14,3,0,29,32,15,24,22,5,3,11,2,15,0,3,10,32,35,47,15,3,0,3,23,11,3,0,48,56,34,35,31,34,0,3,18,10,3,0,29,0,3,20,11,3,0,48,15,0,26,46,16,68,0,3,31,2,21,10,3,0,27,61,20,39,18,17,13,1,0,3,62,61,63,66,12,2,67,66,39,2,60,46,32,10,3,0,37,18,19,0,25,34,19,15,3,0,18,44,24,24,40,36,6,3,0,30,40,44,3,0,25,38,29,3,0,23,64,51,0,14,2,0,3,44,24,2,11,3,0,47,16,46,19,25,25,0,27,44,13,21,5,0,27,47,0,22,21,34,25,5,0,31,71,19,5,0,20,31,0,15,17,23,13,5,0,17,45,28,0,49,77,23,5,0,59,61,38,23,5,0,58,46,22,78,0,29,45,32,26,7,5,0,28,51,3,0,9,2,0,3,26,2,39,36,2,18,2,43,44,45,27,2,40,34,37,2,28,2,42,53,2,24,14,3,0,34,41,48,2,0,3,25,11,3,0,51,28,18,30,0,78,0,7,34,34,34,13,40,36,29,13,5,15,24,14,3,0,13,14,1,0,3,33,2,21,11,3,0,24,65,1,0,3,37,2,22,11,3,0,28,43,21,3,0,37,0,67,52,16,1,0,26,0,2,13,17,12,2,35,57,53,61,0,24,41,79,2,0,20,1,0,28,6,23,16,3,0,66,0,57,72,18,53,16,3,0,57,17,32,43,3,67,19,5,41,16,3,0,57,17,62,26,5,56,29,16,3,0,14,16,70,15,2,1,0,82,10,27,13,0,45,30,0,25,40,24,4,3,0,30,41,45,50,39,5,4,3,2,0,11,2,0,27,0,3,7,52,15,3,0,3,18,3,0,22,31,0,3,49,2,24,26,58,64,32,47,3,0,57,0,3,35,2,25,30,19,10,3,0,33,35,54,3,0,15,53,3,0,21,36,28,12,0,34,43,45,75,5,3,0,31,23,17,3,0,29,19,43,0,21,63,14,3,0,43,38,0,37,35,21,15,32,20,5,3,0,12,1,0,3,37,2,25,18,11,3,0,27,14,16,16,0,18,54,35,24,28,30,9,13,24,48,28,13,14,20,13,5,3,0,16,42,0,13,1,0,3,51,2,22,30,10,3,0,28,49,18,51,3,0,24,40,33,20,18,0,19,38,31,3,1,0,14,0,28,28,0,18,16,46,29,29,4,0,24,56,3,0,51,39,54,56,22,9,7,19,41,38,49,40,12,29,5,3,0,42,43,19,16,0,52,25,21,43,18,10,42,21,21,43,29,10,21,20,23,10,12,65,23,21,43,48,10,21,20,23,10,5,0,19,3,0,38,34,23,92,5,12,42,20,6,3,0,42,39,14,48,21,8,5,16,3,0,50,67,21,0,26,130,21,20,47,10,37,98,5,50,21,44,29,10,5,0,19,3,0,45,41,19,18,30,84,5,36,14,45,22,8,5,16,3,0,37,101,34,14,38,21,8,5,16,3,0,39,53,30,19,36,36,59,34,34,50,9,7,5,3,0,42,21,80,0,31,18,50,50,46,58,45,53,33,0,38,15,14,73,57,54,45,18,7,12,24,50,50,53,33,13,5,3,0,33,98,31,34,26,12,44,20,8,5,0,52,52,18,20,16,58,36,79,48,42,52,43,14,11,0,31,72,36,27,22,44,50,15,15,18,19,11,9,9,6,3,0,69,36,0,5,0,35,0,18,0,25,43,32,57,32,0,44,38,40,46,0,3,30,26,30,30,32,30,3,0,19,56,97,26,31,42,30,72,0,70,97,97,0,35,35,50,0,35,44,41,3,0,30,24,24,32,34,41,53,14,44,7,5,0,30,32,23,90,7,61,5,58,3,2,0,39,31,12,16,41,33,38,40,22,19,24,23,6,3,0,29,11,23,24,50,7,66,32,0,56,66,0,53,79,28,62,12,30,5,0,32,79,81,53,41,60,58,74,0,51,47,25,28,3,0,22,29,24,0,9,44,62,0,31,94,57,39,0,62,76,44,79,15,0,35,33,24,15,105,36,33,24,15,13,11,16,44,24,28,18,11,37,37,9,7,21,26,15,27,5,3,0,34,14,9,53,21,27,5,34,3,0,36,14,9,61,73,85,84,19,25,5,17,3,0,17,52,29,12,24,5,3,0,30,73,37,50,17,13,5,25,20,5,30,25,5,42,34,11,53,64,42,24,9,47,43,88,45,81,14,55,49,11,29,9,23,29,7,5,3,0,25,50,0,66,3,1,0,3,38,35,40,27,28,27,29,30,3,0,3,112,38,109,3,44,47,71,32,14,91,40,100,49,89,3,0,22,37,2,0,49,43,21,29,45,38,43,5,2,0,37,43,32,0,28,0,31,0,3,67,2,43,34,3,0,53,33,56,3,0,48,0,24,28,0,78,81,89,18,36,21,68,27,20,5,3,0,34,64,15,3,33,2,0,73,0,32,40,0,3,56,54,63,3,19,45,63,0,3,35,26,24,3,45,38,19,3,36,47,58,3,34,44,3,27,2,0,3,36,39,29,31,28,3,69,37,40,45,76,44,3,38,0,60,37,22,38,5,3,0,57,57,36,55,40,5,3,0,34,2,0,3,36,35,26,37,3,73,25,60,3,79,48,0,30,37,30,74,31,42,26,104,50,0,27,40,63,76,5,3,0,72,2,0,32,32,0,18,7,7,7,7,6,5,7,7,6,7,8,7,7,7,12,6,7,7,6,7,7,8,6,7,6,7,8,7,9,7,7,7,9,7,8,7,7,7,7,7,7,8,7,7,7,7,8,8,7,8,7,12,7,7,9,7,7,7,13,13,13,7,7,7,8,7,7,7,6,7,8,11,7,7,7,7,7,6,6,7,11,6,8,8,8,8,8,7,7,7,7,7,7,8,7,8,7,7,7,7,7,7,7,6,7,8,7,7,7,7,7,7,7,7,8,7,7,7,7,7,8,7,9,7,7,8,8,7,8,7,7,7,11,9,5,7,7,7,7,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,8,8,7,8,7,7,8,8,7,8,8,7,7,7,7,7,6,7,7,7,13,7,7,7,7,8,7,7,6,7,7,8,7,8,8,7,10,7,7,7,6,7,7,7,7,7,7,8,7,7,8,7,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,8,8,8,7,7,6,7,7,7,8,9,7,7,7,7,7,8,7,8,8,8,7,8,8,6,9,7,7,7,6,5,7,7,2,0,36,0,29,44,0,45,0,97,0,21,0,21,0,28,27,31,0,23,27,23,29,30,29,36,23,27,0,26,24,28,0,36,38,36,32,34,36,35,45,41,0,36,32,32,81,0,30,0,30,33,41,52,33,0,20,27,26,19,22,24,19,24,32,31,27,36,31,35,23,28,33,0,41,40,39,39,16,0,25,32,57,36,7,25,10,23,25,16,10,10,15,25,19,27,23,23,21,29,6,16,0,36,0,38,38,40,38,46,0,55,0,56,30,27,20,10,12,3,2,0,45,29,36,50,3,22,2,0,34,24,27,16,10,21,3,2,0,42,31,33,27,34,22,3,2,0,71,0,3,25,3,0,19,0,48,54,0,3,37,28,30,30,36,39,3,0,3,39,3,35,0,3,38,37,51,48,55,49,48,3,78,45,19,51,0,77,76,36,23,84,8,5,4,7,50,19,22,3,1,0,3,70,66,37,55,19,19,3,64,46,20,37,31,5,2,0,3,57,57,23,41,51,66,3,67,54,44,0,30,14,28,36,53,6,39,3,13,49,45,45,10,36,11,14,59,50,52,6,25,45,74,66,66,50,13,45,26,30,24,14,28,7,7,12,26,30,30,13,6,41,3,52,0,73,49,16,46,42,42,37,47,36,27,10,40,44,31,26,5,4,2,0,23,0,52,54,39,0,3,61,57,37,41,63,66,29,3,71,42,48,0,37,94,31,21,3,0,58,0,13,49,45,10,11,31,35,12,26,30,14,66,51,58,11,39,85,70,9,8,6,45,3,52,0,77,50,16,46,42,37,44,33,46,26,5,4,2,0,3,9,3,23,0,3,44,3,18,17,62,1,0,3,56,38,42,54,3,34,32,44,44,52,23,47,48,39,0,13,24,76,42,66,15,35,7,10,62,15,41,35,7,3,16,1,0,3,48,26,44,73,54,3,38,24,11,3,42,44,50,28,24,0,53,35,0,46,66,46,11,44,36,84,36,36,58,54,9,56,36,31,79,16,31,9,23,67,44,7,73,38,82,34,34,56,52,7,27,5,4,25,55,0,43,87,55,42,3,0,16,1,0,3,51,45,51,36,45,83,3,52,24,11,3,30,49,0,41,63,31,0,17,9,40,17,28,18,5,0,32,24,58,51,55,7,12,20,49,50,5,26,16,3,0,49,41,16,3,0,41,1,0,71,44,53,0,20,63,27,3,0,52,28,0,46,46,50,12,38,26,25,13,5,28,47,22,0,98,13,5,0,26,25,13,5,55,57,24,60,33,0,74,64,0,57,5,44,0,31,34,28,27,15,7,65,0,16,0,56,52,50,47,36,31,43,67,69,41,56,14,28,42,9,0,25,0,79,94,6,4,1,0,3,86,30,26,30,55,55,56,27,64,3,71,68,57,79,84,3,0,50,41,31,16,13,0,40,85,18,81,34,5,0,61,52,47,0,74,7,3,16,1,0,3,49,59,37,73,63,63,65,21,3,62,36,53,12,17,3,0,52,31,33,39,55,53,3,0,60,7,67,32,51,14,19,5,0,108,15,30,46,64,34,101,34,44,63,56,7,40,64,34,53,56,52,93,34,0,44,37,72,7,12,65,5,12,0,42,17,0,19,39,14,18,5,3,1,0,1,0,36,0,36,0,25,32,57,0,13,5,41,17,78,1,0,15,21,54,35,45,45,32,27,5,3,1,0,7,19,25,27,25,23,11,21,18,19,18,16,20,18,20,25,23,0,16,13,12,33,23,13,16,0,60,0,38,38,44,0,44,0,3,25,3,0,3,43,38,34,39,3,0,37,3,100,43,3,35,0,57,30,33,0,33,59,3,0,3,38,40,69,52,3,52,46,16,2,0,3,85,22,47,56,67,77,29,3,68,87,0,50,45,0,60,59,58,59,37,27,3,0,47,47,0,55,72,8,34,53,38,4,0,57,66,28,54,81,30,45,27,12,5,3,0,30,41,10,12,45,17,71,41,55,40,38,11,0,52,8,6,42,3,0,73,49,16,31,0,33,20,41,63,51,28,9,5,4,1,0,59,17,36,16,52,40,14,43,20,7,5,3,0,15,2,0,58,61,0,61,35,12,79,11,2,0,80,33,36,64,65,51,2,0,3,9,3,25,0,3,44,3,18,17,1,27,40,41,21,39,39,5,16,3,0,22,38,1,0,77,62,90,1,0,83,7,37,32,33,87,12,100,5,19,34,87,12,100,5,3,1,0,84,57,0,30,61,56,46,50,5,10,29,30,78,0,70,68,51,56,64,7,0,24,73,48,5,7,50,7,88,36,75,3,1,0,3,52,73,63,50,81,54,2,64,64,32,58,32,8,33,48,13,42,56,7,48,37,43,42,47,58,6,0,39,71,52,18,13,37,26,36,51,37,91,16,104,9,14,89,7,12,27,27,28,96,27,25,96,7,5,4,0,37,14,13,18,21,4,0,24,16,1,0,3,52,43,56,60,81,27,3,71,49,70,0,45,29,0,7,48,32,42,35,5,0,31,0,67,63,59,33,51,57,38,53,7,36,24,18,39,35,5,3,1,0,3,2,24,26,3,54,34,36,64,38,0,34,41,31,19,0,49,63,3,1,0,44,30,41,17,48,16,17,4,40,1,0,3,34,53,86,51,73,27,3,61,24,11,3,32,85,0,45,0,60,7,65,32,51,17,5,30,49,94,0,63,56,0,37,40,50,54,48,34,77,30,17,9,71,0,68,33,0,64,75,40,53,83,0,83,16,77,9,57,30,9,12,69,28,5,19,49,115,28,28,5,3,0,45,47,43,55,12,19,11,48,20,54,5,3,1,0,1,0,44,40,0,63,25,30,44,28,44,32,24,26,38,0,36,48,7,9,11,9,12,12,13,16,9,11,0,12,10,0,16,18,25,9,14,0,8,14,14,7,10,11,11,17,16,14,16,12,11,0,25,10,8,16,0,34,40,0,3,25,96,68,3,0,3,2,33,37,40,24,29,33,30,32,34,33,3,0,70,40,24,30,28,12,24,5,5,16,2,0,32,5,26,5,40,52,71,3,40,2,0,69,69,28,49,22,36,19,3,38,46,3,16,22,3,13,2,0,33,69,78,0,57,47,88,2,0,40,33,16,3,30,51,3,33,2,0,53,0,3,19,24,30,3,16,5,22,36,5,35,20,40,28,27,3,0,13,25,23,63,3,0,22,25,23,23,31,0,26,9,25,19,32,73,7,5,3,0,13,25,23,27,3,0,5,29,5,17,25,23,31,3,0,13,23,21,31,22,24,3,1,0,29,30,19,45,19,60,31,52,38,33,49,66,86,43,38,40,7,33,61,3,0,27,32,67,41,69,78,5,0,27,90,5,0,26,3,0,20,39,68,6,3,0,21,26,70,47,82,43,25,51,42,3,0,21,33,21,85,36,87,7,17,3,0,20,23,72,27,59,41,49,98,11,9,5,92,3,1,0,3,59,67,2,22,26,59,3,40,51,20,10,0,18,62,0,38,28,35,28,28,33,0,39,30,0,42,33,0,28,22,0,28,56,63,81,51,63,67,68,0,67,70,0,72,50,48,0,46,46,55,30,3,0,85,14,27,3,0,82,65,50,30,43,0,51,30,57,29,12,35,5,3,52,20,53,3,0,71,81,52,0,64,0,69,65,36,12,63,50,36,3,56,0,21,27,17,41,33,32,68,50,5,4,58,29,22,0,36,25,54,10,50,3,0,46,22,1,0,17,0,3,61,35,83,64,36,3,34,46,22,33,12,33,49,0,82,45,23,7,36,7,3,0,35,34,32,44,19,5,0,77,36,53,0,47,45,34,0,16,5,0,58,59,55,72,10,48,37,16,31,93,35,19,8,23,30,52,76,9,7,3,0,14,1,0,3,64,99,36,2,17,31,35,29,0,27,68,64,46,35,5,0,26,0,33,34,52,5,0,47,45,34,5,0,14,1,0,3,62,28,2,9,45,21,0,23,28,21,68,29,58,6,52,32,23,29,52,81,28,5,0,103,28,1,0,3,31,33,2,14,23,41,81,59,5,19,1,0,26,21,53,1,0,17,17,0,3,29,54,41,44,53,19,19,95,3,44,26,0,28,50,56,25,29,54,53,47,0,36,9,52,31,16,3,0,20,30,43,24,55,30,38,44,11,62,18,5,61,34,40,5,3,0,79,37,16,35,22,38,25,65,30,26,16,27,9,38,7,6,0,73,16,3,0,28,61,33,3,0,46,69,5,68,14,9,35,20,75,38,21,3,32,0,14,1,0,3,28,23,111,3,21,35,57,85,5,31,3,30,1,0,3,32,56,38,73,82,3,38,41,47,3,0,34,49,23,38,0,19,23,17,3,0,20,23,34,40,24,32,47,17,4,45,47,24,13,1,0,19,28,1,0,3,36,127,38,117,27,86,3,52,21,0,22,54,52,3,0,25,0,42,43,50,55,15,7,0,37,0,55,55,7,47,37,0,28,41,36,14,36,27,53,17,10,7,7,4,0,39,35,22,25,41,37,21,7,7,32,23,48,6,3,1,0,19,42,1,0,3,57,37,45,21,3,25,60,27,31,37,0,58,33,69,44,90,65,3,0,42,1,0,26,38,1,0,3,89,68,61,65,3,31,101,45,0,56,1,0,20,20,0,3,38,50,54,3,27,70,41,92,32,1,0,15,15,0,3,30,75,54,60,2,28,55,0,29,54,24,52,25,1,0,3,37,48,61,71,56,18,2,39,72,58,74,45,41,35,17,61,0,78,60,51,0,62,78,36,3,0,70,51,39,51,0,53,72,0,56,48,38,22,0,76,118,65,64,115,41,40,3,0,67,21,75,74,64,33,3,0,63,68,29,33,60,72,0,71,34,26,3,1,0,3,33,21,3,18,24,36,58,1,0,3,37,21,3,18,42,23,38,29,1,0,3,2,21,27,3,30,22,37,14,14,34,3,20,1,0,23,26,73,39,28,32,23,5,30,17,35,25,5,5,16,1,0,1,0,25,31,0,3,49,72,41,50,3,35,41,21,17,2,0,23,0,64,24,49,5,16,55,64,5,10,52,28,28,16,5,1,52,15,25,62,47,32,33,37,35,34,7,48,76,5,23,1,34,36,13,74,9,19,25,9,5,17,1,41,64,9,51,42,53,11,75,50,9,23,5,11,129,21,49,68,30,23,5,1,59,45,63,32,42,33,64,72,17,22,81,52,17,13,18,60,26,13,10,40,45,56,26,11,7,1,0,33,0,17,59,32,47,57,33,37,34,16,2,0,51,0,3,48,2,56,70,40,10,3,38,47,40,0,49,17,0,41,24,28,25,3,0,59,0,16,1,0,3,39,2,44,39,62,62,54,10,3,54,36,49,3,1,0,3,41,2,46,39,10,3,32,43,29,3,1,0,3,41,2,44,41,10,3,31,49,22,3,0,75,1,0,3,33,2,38,30,22,10,3,27,29,0,41,0,10,0,36,28,40,69,10,28,32,3,0,13,1,0,5,43,0,26,21,48,67,65,6,35,25,26,52,43,5,4,40,26,21,16,35,25,19,4,1,0,30,28,0,3,68,41,3,17,5,29,4,78,28,5,28,25,21,19,6,47,19,21,3,0,5,29,4,41,12,5,12,24,17,3,0,5,58,4,13,5,12,50,0,27,36,0,21,23,5,3,1,0,24,0,27,0,40,24,49,0,54,56,44,37,35,33,0,2,72,85,51,2,69,2,16,0,3,37,3,27,5,42,4,52,78,53,72,57,75,22,80,43,76,45,73,74,76,16,76,16,78,20,70,5,46,38,34,21,77,32,25,25,0,23,0,23,25,52,42,15,45,5,3,0,5,19,5,30,32,3,0,5,43,4,42,12,5,11,22,0,48,47,5,48,47,5,44,72,5,44,72,59,43,5,0,18,3,0,5,52,4,75,44,12,5,26,58,0,32,43,44,0,23,3,0,5,50,4,12,5,13,24,28,27,5,0,24,48,0,28,27,0,21,17,20,74,11,10,7,5,3,0,5,44,4,59,44,13,5,26,31,46,10,50,47,41,48,60,76,56,41,9,21,7,0,18,7,0,20,70,5,0,39,49,5,39,49,5,55,65,5,55,65,15,49,40,7,45,5,0,20,3,0,5,47,4,63,44,13,5,28,31,0,8,56,39,7,75,5,0,41,66,74,7,15,52,63,74,7,22,66,8,5,0,18,3,0,5,26,4,75,67,13,5,35,40,44,32,0,31,78,9,0,25,0,47,31,31,64,34,64,16,13,24,39,32,62,14,11,54,29,62,32,62,14,11,22,19,49,46,11,31,32,62,14,11,16,56,9,0,28,9,7,0,26,3,0,5,42,4,41,76,40,12,5,35,31,52,15,30,9,7,3,0,5,40,4,51,76,40,12,5,33,31,50,15,30,9,7,3,0,5,21,4,41,76,40,13,5,36,58,0,25,48,24,44,37,29,0,45,44,18,9,47,38,35,48,46,5,0,40,0,30,42,0,31,42,0,16,30,29,22,15,7,0,37,32,35,8,0,52,30,29,14,40,37,0,68,32,9,7,0,27,7,3,0,5,19,4,51,76,40,13,5,34,58,0,25,48,24,44,37,29,0,45,44,18,9,0,38,35,0,46,5,0,40,0,30,50,27,10,72,10,15,7,0,35,32,35,8,0,53,0,8,61,39,8,38,0,38,35,0,66,30,7,0,27,7,3,1,0,44,0,3,63,2,40,11,3,31,29,37,1,0,3,63,2,40,11,3,31,37,0,6,47,62,5,31,11,3,0,63,60,39,45,15,1,0,3,64,2,39,11,3,30,4,75,37,4,43,28,23,1,0,31,0,2,28,2,47,46,2,30,30,30,6,2,18,22,59,60,60,60,60,60,61,61,2,0,3,55,2,39,69,10,3,36,10,20,21,22,22,23,34,4,1,0,3,56,68,15,2,42,78,10,3,28,25,12,0,19,32,17,10,42,26,10,24,39,44,9,21,7,0,13,42,35,10,23,39,39,72,88,9,21,7,0,13,42,44,10,23,39,39,39,72,49,35,9,21,7,0,13,12,19,5,3,0,14,1,0,5,48,0,24,43,22,69,6,28,4,40,24,43,30,28,4,1,0,55,0,46,7,31,31,29,26,14,63,83,0,19,32,32,19,19,20,0,3,32,2,20,3,37,5,33,4,45,77,77,19,78,30,78,77,65,5,29,12,0,63,48,40,46,60,35,0,28,23,0,29,28,27,25,25,22,21,0,33,28,25,0,27,23,3,0,5,46,4,53,63,34,13,5,31,70,0,40,30,23,3,0,5,47,4,53,40,13,5,14,29,0,68,0,38,35,38,29,5,0,38,0,8,35,36,0,28,47,14,71,40,7,0,22,20,0,15,3,0,5,29,4,34,13,5,17,12,22,0,8,28,22,31,16,35,42,16,35,42,16,22,25,16,22,33,16,16,24,29,17,7,25,0,12,3,0,5,42,4,54,13,5,13,34,25,13,5,0,32,0,35,25,21,19,38,13,13,35,8,5,0,48,0,77,25,21,19,29,13,13,33,8,5,0,41,33,40,0,32,23,27,23,21,31,15,15,35,10,7,0,30,27,23,21,29,15,15,33,10,7,0,38,64,29,27,23,21,43,15,15,33,10,7,0,36,60,23,27,23,21,28,15,15,31,10,7,0,23,27,23,21,31,15,15,35,10,7,0,39,27,23,21,58,15,15,49,10,7,12,25,21,19,41,13,13,31,8,5,0,73,44,0,25,26,27,23,21,29,15,15,32,10,7,30,25,21,19,29,13,13,32,8,5,0,73,78,34,3,0,5,41,4,54,13,5,24,34,25,13,5,0,58,29,3,0,5,41,4,54,13,5,24,34,25,13,5,0,32,36,0,6,79,53,6,41,25,21,19,65,14,13,48,8,5,0,70,29,3,0,5,34,4,54,13,5,16,53,54,80,27,23,21,38,16,15,45,10,7,5,0,45,32,3,0,5,22,4,13,5,13,34,25,13,5,0,33,27,3,0,5,22,4,34,60,13,5,15,30,0,30,54,27,15,7,0,47,0,10,23,77,9,33,7,5,0,62,0,27,30,32,13,5,0,22,8,79,33,8,53,33,5,0,30,3,0,5,23,4,41,34,13,5,24,82,0,65,30,0,23,42,77,20,20,25,42,20,19,49,13,12,9,0,34,7,0,36,28,0,25,7,3,0,5,28,4,49,13,5,17,20,48,40,0,35,30,27,27,0,31,17,0,48,50,56,65,16,27,9,0,41,14,53,0,61,29,25,18,37,17,17,33,12,9,0,41,7,5,0,27,3,0,5,31,4,40,60,13,5,24,32,25,0,30,52,19,37,23,21,37,15,15,49,10,14,42,0,41,25,23,42,17,17,39,12,9,0,34,0,61,25,18,37,17,17,33,12,9,0,41,19,7,39,30,12,30,5,0,27,3,1,0,26,0,3,26,2,74,44,78,16,45,51,41,11,3,69,28,60,4,0,40,23,34,13,1,0,76,49,0,46,51,49,71,0,42,35,0,3,30,3,16,5,31,4,66,80,79,12,5,49,40,0,23,40,41,5,0,26,0,31,27,0,28,28,21,3,0,5,69,4,52,43,77,16,79,20,75,15,78,12,46,78,17,78,17,48,12,5,31,13,22,19,28,0,23,46,0,33,35,14,35,7,0,66,17,5,0,19,0,35,10,41,42,9,42,14,33,33,7,12,31,63,5,0,35,0,30,18,26,34,18,26,5,0,76,0,69,40,0,30,0,32,42,39,32,43,5,0,45,0,22,33,33,33,33,0,43,0,16,56,22,5,0,47,26,3,0,5,45,4,65,70,79,36,12,5,31,12,0,29,27,70,78,52,34,33,12,45,0,25,79,7,0,43,33,0,37,27,14,25,7,5,0,21,32,16,39,11,35,19,22,17,6,0,26,61,12,55,5,3,0,5,44,4,40,74,36,12,5,24,19,17,0,35,43,23,12,30,31,37,5,0,27,79,5,0,21,32,16,39,11,35,19,15,17,6,0,26,62,12,56,5,3,0,5,44,4,40,74,36,12,5,24,19,17,0,35,43,23,12,30,31,37,5,0,27,79,5,0,21,32,16,39,11,35,19,15,17,6,0,26,62,12,56,5,3,0,5,44,4,40,43,79,16,74,24,79,17,75,15,36,12,5,27,82,40,32,0,19,17,0,35,43,23,12,30,31,37,5,0,30,34,10,15,28,33,37,42,42,9,9,58,7,28,12,19,17,5,0,48,0,28,20,34,25,41,27,37,15,17,12,8,0,28,70,14,54,7,12,21,30,36,27,43,29,39,17,19,21,11,10,8,5,3,0,5,26,4,54,75,15,43,77,16,79,20,75,15,78,12,46,78,17,78,17,36,13,5,41,20,56,13,5,0,82,0,48,27,63,35,30,65,10,0,46,0,54,40,53,0,60,9,0,15,7,0,50,30,31,55,21,7,3,0,5,37,4,13,5,13,52,41,0,52,54,5,3,0,5,31,4,53,13,5,19,50,29,3,0,5,19,4,45,36,13,5,23,28,26,34,38,28,12,38,5,3,1,0,22,0,91,0,30,30,32,36,34,34,30,38,0,3,31,3,13,5,26,4,47,64,5,21,25,23,3,0,5,14,5,16,25,3,0,5,19,5,14,23,3,1,0,71,69,0,3,36,2,17,3,32,5,31,4,47,74,55,72,30,79,34,75,38,5,35,16,0,64,71,80,3,0,5,19,5,14,23,3,0,5,19,5,16,25,3,0,5,20,5,18,27,3,1,0,74,76,78,0,3,37,2,17,3,32,5,31,4,47,74,55,72,59,5,35,16,0,70,74,3,0,5,14,5,15,24,3,0,5,19,5,17,26,3,1,0,75,77,0,3,38,2,17,3,34,5,33,4,47,74,55,55,5,35,16,0,67,3,0,5,14,5,14,23,3,1,0,76,0,3,76,29,2,9,3,21,5,32,4,76,51,80,27,74,78,66,12,5,50,16,0,29,52,51,49,11,0,30,35,8,34,49,47,15,37,68,11,0,30,35,8,34,41,47,16,32,11,0,30,35,8,33,35,40,0,30,35,8,12,13,5,0,72,36,0,23,31,12,29,5,4,0,5,30,4,72,53,12,5,38,50,83,44,14,7,5,3,2,0,19,13,13,8,14,14,2,0,56,0,3,76,14,2,65,55,72,22,11,3,33,52,29,1,0,3,63,2,55,37,10,3,26,37,35,27,25,23,20,16,17,16,15,12,0,34,32,0,38,51,36,17,18,61,9,48,70,27,70,9,0,32,46,28,37,39,16,31,9,0,25,14,68,7,41,51,36,50,48,50,27,70,9,0,32,53,28,46,39,36,9,0,25,73,43,25,14,68,7,12,8,74,56,61,8,23,39,70,9,36,52,27,28,39,38,61,27,18,45,28,16,70,9,70,24,58,36,68,32,50,27,70,9,0,32,45,27,43,31,9,39,28,46,39,36,9,0,30,25,14,68,7,5,3,0,67,53,3,0,26,41,36,32,10,34,32,30,56,12,37,5,40,3,0,16,1,0,3,60,2,76,58,10,3,31,32,25,49,76,27,26,28,20,46,39,62,29,61,30,16,13,24,10,20,6,16,1,0,55,0,77,0,45,38,37,32,32,72,45,0,46,26,22,7,15,15,15,23,12,14,27,6,14,7,56,16,47,42,0,31,36,33,64,58,0,3,34,2,24,3,42,5,30,4,62,60,49,5,44,12,0,39,27,37,33,38,28,26,25,24,46,26,24,24,0,27,31,29,26,0,36,23,45,66,30,25,16,34,9,7,0,54,12,28,5,3,0,5,73,74,11,4,19,5,20,28,3,0,24,45,0,28,0,6,47,6,58,3,0,5,19,5,24,51,0,76,3,0,5,19,5,20,48,3,0,5,20,5,18,24,3,0,5,21,5,28,17,16,3,0,5,21,5,28,17,16,3,0,5,21,5,28,16,16,3,0,5,21,5,28,19,16,3,0,5,19,5,18,26,3,0,5,19,5,20,28,3,0,5,19,5,13,21,3,0,5,50,4,75,26,65,43,79,20,76,77,65,13,5,36,35,34,35,31,37,52,7,0,78,30,26,0,34,32,0,48,42,42,46,40,40,0,25,24,0,46,0,38,36,34,40,0,40,22,3,0,5,30,4,13,5,15,24,44,62,13,5,0,62,68,5,0,40,42,60,3,0,5,31,4,57,62,63,52,66,46,63,62,54,46,23,4,80,69,16,12,5,21,55,53,79,52,5,0,50,10,31,80,9,27,7,0,13,5,0,43,62,8,79,60,8,22,0,34,0,10,35,50,9,27,7,7,0,6,63,6,34,46,18,6,3,0,5,22,4,12,5,11,8,51,44,7,13,5,0,24,25,3,0,5,17,4,39,68,76,12,5,24,53,74,5,0,37,16,30,44,16,23,5,0,57,0,47,37,13,5,0,51,54,3,0,5,17,4,39,68,76,12,5,24,53,74,5,0,37,16,30,44,16,23,5,0,57,0,47,37,13,5,0,51,54,3,0,5,23,4,12,5,12,8,51,44,7,13,5,0,25,72,3,0,5,25,4,40,45,76,13,77,15,78,17,76,79,12,5,27,53,74,5,0,40,19,19,5,0,57,0,47,37,13,5,0,18,39,28,21,16,16,6,0,63,28,5,0,54,3,0,5,35,4,12,5,15,55,53,79,52,5,0,23,45,29,5,3,1,0,3,32,22,3,50,19,42,3,0,3,32,32,3,60,19,42,3,0,3,26,22,3,44,19,36,3,0,3,26,32,3,54,19,36,3,0,3,29,22,3,47,19,39,3,0,3,29,32,3,57,19,39,3,0,3,28,22,3,46,19,38,3,0,3,28,32,3,56,19,38,3,0,1,15,19,15,13,13,15,7,25,79,3,0,2,70,80,2,59,63,21,11,54,71,7,0,18,6,18,54,45,48,16,9,7,0,48,0,46,36,9,5,5,3,0,58,64,0,28,0,3,33,2,56,60,44,47,76,16,77,18,77,24,77,11,76,14,60,36,76,25,60,37,75,63,11,3,63,16,41,34,30,28,27,21,15,32,26,24,24,23,18,20,20,19,4,0,57,25,64,62,6,3,0,16,0,33,24,34,10,9,37,17,55,5,0,29,3,0,49,57,24,0,67,23,72,51,54,30,65,3,0,26,51,0,37,16,12,40,13,5,3,0,42,49,62,32,24,0,61,53,44,48,37,25,18,50,29,26,25,19,4,52,39,0,31,48,68,12,21,6,55,68,7,3,25,39,10,39,43,33,9,30,62,10,7,0,32,5,0,65,3,20,36,57,12,40,5,3,49,62,3,0,21,39,0,31,25,3,0,10,0,29,37,47,0,49,0,8,78,46,8,44,0,20,61,53,9,7,15,50,48,7,8,73,75,8,40,33,31,28,5,0,6,80,78,28,6,54,37,61,5,0,41,0,31,8,72,64,80,76,79,79,44,8,53,5,10,41,3,0,21,29,74,7,3,0,28,46,0,32,38,5,0,31,42,38,0,8,17,29,26,22,7,55,71,15,7,0,18,0,15,0,11,44,19,64,42,15,7,0,56,66,23,18,12,55,8,5,5,0,44,35,0,6,69,25,6,64,0,32,0,39,27,24,0,57,81,13,5,0,61,18,0,35,30,71,48,57,7,34,47,5,0,20,53,13,5,0,53,0,75,0,47,31,23,77,26,53,15,7,0,21,0,11,53,21,66,53,15,7,0,53,0,10,38,63,9,79,53,15,7,0,11,80,21,66,53,15,7,0,64,26,5,0,39,38,34,49,7,5,0,12,1,0,3,43,2,54,35,11,3,44,46,31,24,1,0,3,51,2,45,77,11,3,30,36,30,1,0,3,54,2,45,80,11,3,30,27,0,57,68,3,0,30,1,0,3,41,2,54,76,37,44,11,3,55,46,0,33,49,0,25,28,19,0,52,8,78,48,54,8,30,5,0,56,10,24,66,62,3,1,0,3,76,60,2,54,37,34,11,3,46,13,41,0,6,80,75,73,36,6,70,45,3,0,11,26,68,48,6,12,3,1,0,3,53,2,39,48,11,3,43,39,0,39,35,30,0,60,0,57,46,0,39,37,1,0,3,50,2,11,3,28,39,0,54,1,0,3,50,2,52,11,3,31,39,0,54,59,0,6,76,52,6,48,0,38,3,0,31,1,0,3,51,2,11,3,29,33,1,0,3,52,2,57,75,11,3,44,53,1,0,3,49,2,59,11,3,31,39,0,51,31,1,0,3,49,2,59,11,3,31,40,1,0,3,27,2,47,11,3,25,18,1,0,3,52,2,11,3,26,39,0,46,44,42,0,46,0,12,0,4,79,78,77,79,79,80,41,4,6,38,37,55,47,5,37,3,0,28,0,33,0,38,0,6,50,51,5,26,10,54,55,3,1,0,3,51,2,40,11,3,30,51,17,3,1,0,3,50,2,11,3,24,39,0,46,28,13,1,0,3,52,2,11,3,28,39,0,48,25,0,18,48,19,3,1,0,42,0,3,78,2,55,38,10,3,26,30,17,15,12,0,35,38,0,47,34,15,16,59,7,46,41,25,68,7,0,30,0,48,0,36,77,7,0,30,23,12,66,5,3,0,35,53,3,0,42,0,32,73,3,0,26,19,1,0,39,0,82,0,43,37,45,0,30,44,34,28,39,0,41,0,18,18,17,0,3,41,2,24,3,44,5,41,4,50,77,28,79,22,75,73,79,13,68,78,79,27,69,78,22,77,65,74,78,80,70,5,34,12,0,15,36,32,31,28,27,25,22,66,19,17,17,17,16,16,6,0,8,71,71,42,7,26,76,29,8,5,0,31,56,46,0,28,40,38,11,22,9,26,21,21,24,16,8,32,36,5,0,23,64,0,58,53,45,41,64,9,9,5,0,75,33,31,36,5,0,27,26,3,0,5,79,70,76,26,4,61,12,5,13,32,68,5,0,35,34,3,0,5,80,46,4,71,12,5,13,33,15,34,53,11,7,0,40,13,5,0,35,0,40,26,0,55,25,32,52,7,0,25,33,44,16,39,9,14,42,7,12,34,0,30,50,0,8,76,25,8,26,24,9,5,3,0,5,70,4,64,67,12,5,21,28,41,72,0,55,5,0,16,3,0,5,35,4,57,75,26,65,34,12,5,40,38,0,15,52,42,16,58,0,8,29,58,13,28,42,29,7,41,5,0,71,30,0,45,11,60,21,43,7,5,0,75,26,0,8,39,42,7,54,39,13,31,8,0,11,63,0,54,76,74,9,21,43,7,5,0,6,60,6,36,20,15,78,66,11,8,0,51,79,26,73,11,0,31,23,16,22,16,19,17,14,12,11,15,7,0,79,5,0,76,3,0,5,41,4,55,68,44,57,75,26,65,34,66,13,5,70,6,70,6,70,0,29,22,75,54,8,5,0,66,0,37,25,24,0,21,41,27,28,39,6,0,48,0,25,8,61,8,51,54,42,0,21,60,32,7,5,0,54,72,38,51,9,57,34,5,0,6,67,6,39,0,54,50,0,32,42,57,7,0,23,27,28,32,0,58,44,9,9,5,0,16,3,1,0,38,0,3,76,9,2,49,62,74,13,11,3,36,69,0,37,43,47,5,4,1,0,3,47,2,49,11,3,28,25,23,1,0,3,34,2,11,3,26,17,1,0,3,61,2,76,53,51,61,11,3,57,24,51,15,26,34,51,16,6,0,17,59,28,44,25,20,15,6,3,0,48,19,1,0,30,24,17,12,14,16,13,2,62,12,32,67,40,36,95,74,65,38,37,19,54,55,71,62,52,19,13,11,5,10,42,38,52,27,160,81,81,39,67,26,92,43,50,48,19,30,15,43,56,9,14,83,47,23,51,13,9,45,58,5,38,39,38,23,23,17,49,13,21,69,23,64,88,23,51,75,11,59,28,55,33,9,7,28,38,112,9,7,80,43,38,38,36,36,32,54,35,43,43,41,26,21,26,42,21,57,18,22,15,9,38,5,78,75,75,24,29,12,29,47,34,18,50,58,17,51,13,11,30,19,49,35,13,18,101,13,11,23,73,10,23,24,46,27,35,35,33,18,13,18,34,13,64,40,23,13,56,45,60,46,45,17,15,10,17,53,49,39,19,36,30,36,21,26,42,56,42,48,33,38,46,33,31,25,30,38,25,21,19,15,9,6,1,0,60,37,29,100,56,15,28,47,44,36,83,63,45,26,9,69,43,26,9,53,68,32,76,15,22,19,9,107,35,53,32,43,15,85,96,19,9,15,6,1,0,32,0,34,0,20,0,41,17,0,3,56,75,2,15,11,3,20,0,2,77,78,77,69,42,2,20,41,0,4,79,73,4,46,1,0,3,45,2,46,62,80,15,11,3,32,15,25,28,1,0,3,36,2,74,49,46,62,72,26,11,3,57,33,59,3,0,53,44,0,85,73,63,0,17,1,0,3,23,2,74,47,11,3,35,67,35,1,0,3,70,28,2,15,10,3,25,30,24,1,0,3,74,13,2,19,10,3,59,16,12,11,0,44,0,41,74,3,0,37,62,3,0,15,2,0,3,53,2,49,45,10,3,62,43,35,0,27,40,0,71,27,3,0,12,2,0,3,61,2,49,45,10,3,70,43,36,0,27,29,26,2,0,3,60,2,49,70,10,3,72,44,0,39,0,35,28,10,8,0,21,82,0,18,64,68,72,76,80,84,5,0,57,33,5,0,48,10,33,10,0,34,90,0,20,66,70,74,78,16,74,39,11,0,60,7,5,3,0,14,2,0,3,36,2,49,46,69,34,10,3,61,54,2,0,3,45,2,49,46,69,34,10,3,65,53,2,0,3,41,2,49,75,71,56,34,10,3,91,44,0,38,12,26,16,3,0,36,0,21,8,28,34,49,7,28,5,10,78,10,33,39,53,9,34,7,5,0,6,77,6,84,31,3,0,14,2,0,3,57,2,51,34,10,3,80,10,0,14,42,49,10,32,26,3,0,14,2,0,2,53,2,67,63,0,2,21,2,31,0,2,59,2,41,0,2,21,2,1,32,1,18,0,18,0,3,48,2,49,59,62,65,15,3,54,36,15,0,26,0,21,16,14,23,0,17,15,24,0,15,23,0,18,23,0,16,17,3,0,20,2,0,21,23,37,45,28,0,47,25,0,3,48,3,21,3,55,52,11,2,12,2,50,39,2,77,60,44,61,3,68,2,15,3,0,66,54,81,0,50,69,66,4,0,49,45,0,23,46,3,0,21,33,3,2,19,31,3,0,58,98,3,0,0,42,47,0,4,104,62,4,24,46,55,59,51,3,0,0,69,44,58,25,9,0,4,69,4,37,37,14,0,4,75,78,53,4,57,0,59,0,29,27,95,45,24,3,18,2,0,3,44,44,20,2,12,2,32,18,2,43,3,49,2,15,3,0,39,23,26,0,31,0,16,2,0,3,79,2,46,2,36,2,15,3,32,69,0,14,12,54,2,0,3,52,2,46,2,64,2,15,3,47,66,2,0,3,75,2,39,2,15,3,0,29,6,86,6,51,34,29,33,14,0,37,0,4,82,28,4,13,34,29,37,39,4,0,76,21,0,60,40,0,26,2,0,3,52,2,31,65,80,2,15,3,89,30,48,68,7,3,116,17,34,39,31,29,12,39,19,5,19,21,31,12,20,16,5,5,2,0,3,77,2,48,2,15,3,24,30,14,0,37,24,0,0,40,0,3,19,2,70,69,12,3,0,26,0,5,51,4,46,49,70,4,17,5,61,36,51,5,4,0,5,64,63,4,46,49,70,4,17,5,61,36,70,75,75,5,4,0,88,79,39,53,47,56,0,79,34,15,7,0,32,37,39,37,7,36,45,7,0,48,5,4,5,48,40,4,46,49,70,89,4,17,5,68,64,60,62,24,43,42,80,97,11,78,93,11,52,10,0,75,69,5,0,73,65,5,0,46,63,68,27,63,41,49,7,5,0,57,41,53,42,7,29,7,4,0,5,46,4,46,49,70,4,17,5,65,84,32,43,49,12,43,5,3,0,2,0,38,0,12,0,27,17,9,38,53,5,27,40,38,5,3,33,2,0,34,20,35,36,46,33,22,0,56,75,40,33,54,53,4,3,0,25,39,31,29,2,44,30,40,2,49,36,48,2,41,31,19,2,0,44,57,27,22,33,26,22,23,26,23,30,32,0,32,25,42,3,0,42,18,48,36,4,0,30,25,1,66,0,51,37,21,2,0,53,75,50,21,35,3,0,53,86,73,3,39,24,20,3,0,73,48,26,19,17,5,11,3,60,77,43,70,57,3,49,8,57,17,3,2,0,34,73,34,35,20,27,3,44,24,20,3,0,33,14,38,51,3,8,20,46,44,25,47,7,24,3,2,0,52,66,38,46,2,0,54,62,37,42,2,0,45,71,18,0,35,37,29,53,50,3,0,47,31,24,34,5,44,27,19,14,29,3,0,36,25,24,24,34,27,5,0,38,45,45,48,19,47,5,23,64,5,3,0,30,17,33,3,0,52,20,28,3,8,52,3,0,23,38,31,31,34,0,14,2,0,47,1,30,37,29,59,46,4,3,0,44,65,66,64,5,3,0,69,38,25,25,3,0,60,62,52,21,53,28,38,5,24,3,0,43,42,46,24,38,5,10,62,57,5,3,2,0,0,57,61,29,40,63,24,74,11,3,0,62,51,29,57,55,3,0,30,38,70,49,0,26,31,43,52,3,0,29,78,25,40,14,20,43,32,63,32,45,34,32,20,36,9,56,38,36,36,34,67,11,9,57,31,24,9,7,9,3,2,0,55,70,34,39,37,26,28,32,29,7,3,0,70,72,65,69,44,56,43,60,46,32,39,70,23,0,56,69,61,54,13,5,0,60,49,71,70,88,72,79,74,52,79,35,57,36,65,5,0,75,84,0,75,56,64,64,74,0,43,20,9,56,5,19,54,13,5,0,36,43,28,52,51,0,69,104,71,5,0,43,61,58,11,80,7,19,32,15,7,43,5,0,37,9,29,5,19,54,5,3,8,54,44,41,36,0,15,34,3,2,0,70,26,21,17,21,36,4,0,23,27,52,32,71,74,0,46,48,25,38,27,13,48,9,21,36,38,9,7,47,36,7,12,27,24,39,7,42,27,23,7,0,21,31,43,45,25,48,0,68,34,56,5,0,50,44,77,27,28,5,0,52,46,88,80,7,5,17,1,0,26,33,0,70,34,17,33,50,32,39,25,25,29,33,48,25,4,30,42,3,17,1,0,48,16,31,29,34,29,5,3,67,41,1,0,48,31,52,17,36,5,10,59,25,5,3,38,50,54,36,21,1,0,32,43,64,3,30,18,1,0,43,51,73,1,0,10,67,38,0,41,41,25,24,48,0,47,21,3,0,60,0,3,19,2,70,69,12,3,0,0,19,0,5,63,4,46,49,62,4,17,5,0,58,60,43,42,46,5,4,0,5,67,4,46,49,62,4,17,5,0,48,25,45,5,4,0,5,57,4,46,49,62,4,17,5,0,50,29,0,71,18,70,35,41,6,0,55,44,54,59,23,7,0,99,4,0,5,63,63,25,4,46,49,62,4,17,5,0,62,0,20,70,0,74,27,29,0,25,52,86,74,8,0,54,71,73,36,43,0,47,47,5,0,28,81,61,6,0,71,44,51,61,7,7,0,56,48,30,60,26,9,5,0,50,35,23,7,0,79,66,32,37,0,48,39,64,56,34,9,0,18,34,16,51,9,7,5,0,43,0,48,65,0,59,45,62,9,7,0,26,58,40,61,11,80,60,14,59,7,7,3,0,2,0,35,35,22,0,3,19,2,73,69,12,3,0,2,20,2,3,0,0,18,5,54,35,4,46,30,4,17,5,0,69,55,23,18,5,0,60,23,18,5,4,0,5,57,4,46,30,62,4,17,5,0,54,29,0,18,70,33,62,6,0,55,44,54,59,23,7,4,0,5,62,63,4,46,30,62,4,17,5,69,0,52,63,33,0,36,40,22,9,0,48,43,9,20,16,33,6,0,31,0,50,0,0,87,59,6,0,71,84,0,20,42,44,65,25,128,25,7,7,0,71,47,0,60,41,63,9,0,78,69,54,38,26,9,0,38,0,72,0,8,82,47,8,91,0,49,0,39,61,7,0,64,0,35,16,30,14,47,7,19,5,3,2,0,20,31,46,44,38,38,38,28,27,0,31,0,3,49,34,2,12,2,38,22,2,44,3,95,2,15,3,0,33,0,28,53,68,42,33,20,0,37,44,25,0,15,7,0,35,9,42,26,9,29,45,40,43,0,15,7,0,40,26,7,0,35,0,49,50,59,9,0,62,84,7,0,44,11,35,40,10,48,41,43,11,119,16,9,7,6,4,1,46,0,31,17,0,26,69,0,76,75,25,0,56,21,5,0,54,20,5,0,39,0,1,0,49,0,48,4,51,50,4,44,14,3,2,0,57,21,59,0,36,51,31,0,23,92,3,0,38,0,14,2,0,50,18,21,29,3,0,75,19,24,19,38,5,5,0,67,40,50,3,64,16,0,35,36,5,0,50,0,32,2,66,40,50,3,64,16,0,35,36,5,0,50,0,34,2,16,0,89,45,0,0,3,28,2,12,2,47,53,2,60,2,80,2,14,3,0,0,37,4,64,4,7,62,62,57,62,62,53,53,85,122,124,80,108,130,94,102,133,127,7,4,56,55,20,7,5,0,34,1,0,0,50,50,50,0,0,0,0,3,48,3,30,0,3,37,39,37,2,44,49,41,12,49,3,0,28,0,45,55,43,23,47,36,39,56,9,56,36,87,32,26,15,11,29,40,9,69,48,7,21,57,19,32,44,61,59,129,79,43,56,25,67,52,31,21,17,13,11,5,100,57,28,40,57,55,35,34,69,59,47,73,38,21,56,61,88,38,21,54,61,44,21,17,72,35,52,17,45,23,13,9,15,6,1,49,73,33,1,0,24,0,29,0,32,0,55,26,34,0,35,30,31,13,24,19,16,40,8,20,64,13,24,19,16,64,8,20,66,13,24,19,16,42,8,20,55,13,24,19,16,50,8,20,5,0,39,22,46,55,40,57,27,79,0,45,17,74,53,26,22,19,12,9,0,70,32,22,7,5,0,38,64,42,13,24,19,16,56,8,20,5,0,51,66,28,11,4,2,0,59,33,16,42,76,3,0,15,25,17,16,5,1,0,39,80,62,62,18,5,3,15,1,0,29,34,26,42,37,3,22,1,8,0,26,0,38,50,52,52,19,13,28,35,92,86,41,21,26,45,21,17,13,9,7,100,63,60,6,1,0,3,7,52,15,3,0,3,18,10,3,0,18,0,3,23,11,3,0,35,30,0,3,20,11,3,0,41,0,3,26,2,32,19,11,3,0,29,28,22,44,3,0,27,19,23,27,21,22,0,29,38,39,20,0,50,1,0,3,24,2,38,28,34,19,10,3,0,33,23,54,3,0,28,32,57,18,14,0,22,75,78,3,0,24,19,21,24,0,13,16,9,1,0,3,41,2,22,20,15,3,0,24,21,60,15,3,0,16,42,69,69,50,49,1,0,3,29,2,23,19,11,3,0,25,48,36,0,39,1,0,17,33,20,22,28,2,51,104,28,15,5,48,29,18,15,5,57,49,32,18,37,47,9,5,34,30,46,74,9,5,25,21,11,1,0,26,0,31,0,43,0,29,35,27,0,52,31,24,24,3,1,82,26,8,43,29,30,1,0,53,46,1,0,34,30,0,60,32,56,3,46,2,0,52,33,52,3,25,27,39,31,12,21,5,10,16,3,12,2,0,42,33,52,3,21,2,0,46,33,52,3,32,2,35,0,21,21,25,36,0,48,36,122,3,3,0,55,43,66,139,3,3,0,0,31,69,1,0,27,29,1,0,35,83,0,47,0,63,30,45,0,7,45,15,101,3,1,0,31,20,0,72,45,44,57,0,22,1,0,47,53,2,0,44,27,73,2,0,52,31,85,78,2,0,35,44,35,2,0,57,142,38,2,0,57,30,14,2,0,50,29,2,0,37,28,2,0,36,47,2,0,40,52,2,0,42,19,28,27,0,71,2,0,54,92,2,0,73,41,46,49,2,0,73,53,53,61,2,0,41,47,2,0,48,54,2,0,59,40,78,2,21,0,3,2,22,22,3,31,58,1,0,3,2,22,30,26,3,49,22,20,21,9,0,26,22,47,48,4,43,9,0,23,6,5,42,6,34,38,47,12,44,5,5,0,41,9,0,22,6,5,27,6,40,53,5,0,42,9,0,21,46,9,0,27,42,9,2,0,14,1,0,51,43,58,49,52,47,36,12,9,34,33,34,28,31,11,5,17,38,22,34,114,5,16,27,34,36,36,41,25,56,108,24,5,57,94,83,5,69,34,66,66,61,48,67,49,54,92,17,66,78,17,22,42,65,17,13,43,9,5,56,34,24,53,35,70,67,47,69,17,22,52,78,68,51,57,25,21,17,61,13,18,47,34,55,75,57,101,21,17,22,42,57,54,65,85,21,17,13,9,25,55,78,43,38,67,48,51,44,53,85,88,62,13,18,44,146,13,9,32,51,32,71,47,74,13,18,71,47,75,13,9,5,72,15,47,47,55,27,23,13,63,59,55,50,58,71,57,17,13,61,112,83,50,47,80,72,86,17,13,18,78,13,10,28,87,10,31,74,33,15,85,51,13,9,7,45,62,38,13,23,39,52,14,17,11,5,10,28,36,5,12,27,12,24,37,6,1,45,3,59,33,3,70,27,35,27,38,42,45,19,9,24,33,41,9,27,6,39,145,5,47,38,45,9,44,54,9,46,48,54,69,17,22,66,17,15,9,45,45,30,59,17,15,9,50,50,9,14,45,9,5,18,29,52,35,13,50,78,35,13,56,38,13,45,57,65,60,67,17,13,40,83,69,58,75,41,63,21,17,87,47,44,82,47,31,21,73,46,71,120,107,51,29,60,39,92,67,39,71,69,119,120,196,39,29,55,25,23,19,13,83,57,55,13,58,71,37,59,17,13,10,29,42,9,7,68,32,44,41,48,7,1,51,21,40,49,50,32,21,5,29,45,31,25,9,22,41,25,9,5,24,65,21,5,19,52,80,21,5,49,41,60,21,5,33,45,33,27,21,5,44,21,5,52,34,21,5,16,1,86,94,27,73,1,42,50,1,59,17,73,74,5,17,1,0,42,32,33,21,30,33,29,21,54,52,2,1,0,3,21,32,3,0,3,19,25,35,3,0,3,23,28,3,23,19,25,0,27,43,0,36,0,22,32,0,19,31,36,27,53,4,3,2,0,58,1,0,24,0,28,37,36,2,1,0,31,32,34,30,2,0,32,32,37,29,20,2,0,12,1,0,38,41,30,40,2,1,0,44,35,31,30,56,61,39,37,44,63,34,3,2,1,0,26,39,1,0,47,28,26,0,27,27,30,2,0,43,32,2,0,25,13,66,57,48,0,49,59,24,20,3,0,67,48,37,2,0,30,54,1,0,18,13,15,2,0,41,36,0,52,54,0,16,31,24,45,3,0,44,76,0,16,1,0,30,34,0,42,44,0,53,70,72,0,18,0,20,26,27,39,41,67,2,0,18,30,64,44,38,46,36,5,2,0,65,46,60,0,17,39,50,69,0,48,41,0,80,5,2,0,81,0,35,19,39,49,61,65,61,0,37,51,36,3,0,104,57,0,72,22,20,3,0,23,44,3,0,40,53,3,1,0,35,24,30,22,56,0,3,68,2,8,36,36,2,48,18,6,65,90,62,46,17,14,3,0,49,33,25,0,23,23,24,20,0,27,28,38,30,5,4,0,45,81,72,29,0,28,40,0,63,27,0,20,33,14,36,33,7,5,3,0,70,55,0,40,36,71,5,0,63,83,5,3,0,17,2,0,3,26,3,0,30,0,3,74,81,33,2,8,36,37,2,41,42,41,6,41,28,49,14,3,0,71,0,3,85,2,8,36,46,2,60,52,6,44,82,65,61,14,3,0,83,0,3,26,3,0,36,0,3,81,2,8,36,40,2,53,22,6,51,81,101,88,14,3,0,52,45,25,17,0,27,50,29,4,0,78,0,27,29,23,5,3,21,2,0,3,73,76,2,8,34,46,2,46,12,46,13,6,45,69,101,83,14,3,0,50,32,69,3,0,31,67,3,0,36,55,19,5,0,92,18,5,3,0,74,2,0,3,68,82,31,2,8,36,48,2,45,40,19,6,59,82,101,83,14,3,0,52,29,71,3,61,15,44,13,2,0,3,98,2,8,36,41,2,67,10,57,11,6,116,82,101,88,14,3,0,48,30,0,44,54,44,18,5,3,15,2,0,3,59,36,2,8,36,42,2,47,10,57,10,68,11,58,11,6,71,82,101,88,14,3,0,49,30,0,44,54,46,19,5,3,14,2,0,3,56,24,2,8,36,42,2,45,10,2,54,11,2,53,10,2,65,10,6,50,82,101,61,14,3,0,46,32,69,3,0,68,2,0,3,104,2,8,36,45,2,55,15,55,12,6,59,42,101,109,14,3,0,48,39,76,70,0,14,58,3,2,0,3,61,2,8,36,36,2,34,49,6,64,28,67,14,3,0,59,0,3,66,33,2,8,36,45,6,28,28,42,14,3,0,55,0,3,65,14,2,8,36,46,6,25,28,106,14,3,0,43,15,50,55,46,5,3,13,2,0,3,37,2,8,44,42,29,2,60,49,6,66,144,18,14,3,0,43,76,73,21,3,34,2,0,3,16,3,0,48,76,66,2,0,3,20,3,0,30,0,21,14,15,19,31,36,78,75,78,29,42,68,9,5,2,37,41,100,63,81,69,26,9,30,6,1,45,41,100,63,75,75,29,67,45,39,60,41,26,9,39,51,23,74,93,26,60,22,13,9,25,51,45,58,13,9,46,81,66,36,9,63,19,9,25,33,9,30,6,1,39,49,100,62,37,75,75,82,40,40,51,109,23,13,46,28,50,26,42,9,14,19,9,6,1,42,44,40,20,36,95,21,53,20,82,20,17,1,54,44,20,5,40,93,29,64,0,95,47,58,29,78,18,5,10,79,82,15,5,17,1,41,60,28,17,10,29,43,13,14,27,9,14,11,4,1,0,46,56,50,38,54,80,78,79,78,76,79,6,42,69,45,52,43,6,70,78,73,73,20,6,77,43,33,58,18,33,67,31,82,85,39,13,18,65,80,57,83,50,32,62,13,11,5,65,61,24,30,23,53,27,9,6,61,43,16,18,25,7,41,19,1,61,15,36,69,36,62,30,69,37,88,17,80,79,35,80,33,59,22,5,14,133,30,20,19,11,67,63,29,80,24,52,24,9,52,83,20,79,48,64,17,67,83,13,23,42,28,17,13,9,19,17,65,143,13,23,70,35,19,13,9,5,10,79,37,35,33,9,14,30,9,5,23,43,80,90,85,87,9,14,24,9,5,51,63,47,16,72,71,19,11,7,34,72,48,20,95,5,10,80,36,34,5,26,64,50,62,9,5,22,44,11,17,16,46,10,74,70,52,16,44,12,41,5,18,1,0,80,64,36,53,32,15,12,36,34,29,10,24,23,66,159,31,46,66,52,55,36,87,74,31,78,53,25,29,82,50,25,31,92,84,73,53,35,25,122,55,92,139,57,29,25,21,72,87,88,79,25,75,21,31,82,49,21,17,13,9,6,1,35,86,56,50,70,45,14,1,35,84,49,42,70,45,14,1,0,48,38,55,38,61,69,100,67,35,67,26,9,16,13,96,9,19,27,9,43,13,62,82,30,45,89,88,61,43,105,25,83,62,65,27,21,31,94,92,94,48,39,64,40,47,38,49,26,89,53,65,27,21,17,22,73,201,30,78,65,27,21,26,38,21,17,13,53,71,64,48,73,45,49,112,114,17,13,35,39,36,35,32,45,84,84,38,84,26,40,44,111,53,17,51,65,34,202,79,41,37,17,73,68,113,19,29,72,85,64,42,59,88,62,39,23,17,13,9,19,104,57,41,72,30,17,45,40,23,13,96,57,41,72,30,17,74,75,67,77,73,77,23,13,27,9,15,6,1,0,43,79,40,84,22,51,19,23,11,6,1,39,36,53,5,10,105,5,1,44,81,11,88,22,56,46,64,9,5,44,27,134,5,35,22,30,37,102,58,70,68,194,5,2,88,52,36,24,23,49,61,35,50,5,10,77,69,67,80,39,76,43,82,5,36,31,94,24,44,28,45,41,16,48,39,79,46,37,32,9,32,85,51,92,76,116,21,104,9,142,6,50,44,19,9,22,36,58,22,83,13,56,44,13,9,59,46,27,49,45,38,15,9,41,54,25,41,51,30,50,72,17,13,9,7,75,78,55,69,58,76,101,8,24,12,13,15,13,30,24,35,75,18,40,13,9,6,2,38,100,67,32,26,9,49,55,126,58,51,21,75,87,59,61,23,17,27,35,17,13,9,15,6,1,0,44,31,100,56,51,28,32,72,25,42,10,15,6,1,0,44,56,35,89,1,46,47,54,50,48,91,58,62,50,30,63,157,13,35,9,19,49,9,15,5,57,58,47,17,32,21,11,15,5,52,63,33,24,13,18,39,43,14,6,42,37,77,34,53,13,9,5,37,42,37,90,28,31,15,21,36,50,25,86,15,9,14,66,72,9,15,5,68,1,66,23,41,31,32,55,29,21,9,37,60,25,34,21,9,77,44,22,31,41,13,5,25,81,24,27,11,17,31,11,5,10,34,82,59,17,27,19,11,5,1,68,11,112,52,43,5,10,48,69,58,58,88,41,109,102,65,26,17,13,9,5,29,91,5,1,67,12,75,65,56,21,5,31,24,27,29,11,76,76,48,81,85,13,9,21,5,31,20,5,19,80,81,34,64,20,5,44,55,49,28,35,33,15,21,9,46,51,24,9,62,24,9,5,17,1,43,24,15,5,18,37,31,25,24,34,41,49,50,9,7,1,44,49,65,67,25,27,33,56,7,13,22,42,7,1,3,50,72,81,2,23,3,48,31,65,35,24,28,18,28,49,26,11,24,5,47,36,24,32,33,35,38,56,17,40,38,56,17,40,38,53,17,43,29,17,22,51,43,52,25,30,92,88,82,48,25,21,57,43,49,25,48,37,25,30,37,25,21,17,22,45,35,30,55,45,37,21,26,42,21,17,22,39,17,22,45,35,30,55,45,37,21,26,42,21,17,22,39,17,22,42,35,30,55,45,37,21,26,42,21,17,70,29,17,22,39,17,22,20,71,9,5,17,1,21,89,37,18,14,1,76,76,72,39,60,19,57,34,22,38,20,68,51,25,17,22,41,17,14,33,11,55,5,10,23,5,1,0,36,55,46,31,80,54,49,40,61,1,34,40,42,5,15,1,3,78,2,54,2,80,2,73,28,2,12,19,10,22,12,58,10,2,80,69,2,12,27,10,22,12,30,10,3,39,34,80,43,29,24,22,7,15,12,37,34,29,10,52,81,72,26,28,13,97,63,50,80,28,13,55,23,29,30,50,41,13,17,45,13,23,56,65,33,72,30,109,134,94,52,32,13,43,83,79,71,34,55,26,100,30,13,31,40,31,46,18,65,43,49,43,125,54,23,59,49,17,44,122,64,40,59,113,127,118,119,91,53,58,79,67,29,25,21,17,71,32,76,30,42,21,157,17,55,89,59,87,57,67,57,17,75,68,81,96,76,17,22,38,17,41,38,17,78,83,51,67,25,91,17,56,27,61,50,81,82,74,86,75,55,55,53,76,43,68,25,21,87,88,57,25,89,61,86,25,21,31,92,64,36,32,21,81,56,17,42,14,80,81,71,38,66,85,50,70,29,48,56,42,47,60,42,38,76,63,110,55,29,25,21,47,38,21,74,55,69,200,53,88,50,57,50,40,60,27,78,74,55,47,30,25,85,33,35,27,21,29,17,58,66,50,32,47,75,33,21,40,30,51,87,37,25,51,37,25,21,34,57,33,21,62,52,69,55,61,110,90,95,21,32,93,46,45,127,44,57,52,106,73,73,129,99,114,119,86,122,65,113,115,90,77,129,37,33,56,68,58,101,215,37,42,83,102,56,90,65,47,41,46,72,100,41,37,55,33,29,47,119,29,27,21,59,55,66,53,43,47,63,21,17,67,81,76,56,57,38,76,32,75,40,64,34,62,88,143,70,86,111,21,58,69,53,116,21,17,13,25,41,63,34,30,22,47,50,61,55,98,21,17,35,13,33,43,38,39,42,70,37,117,106,13,40,107,13,50,53,61,111,55,73,37,19,13,56,81,49,42,59,57,36,135,17,77,74,61,60,43,17,149,46,63,17,13,22,124,49,80,53,98,73,108,55,35,25,91,55,23,19,13,88,89,89,55,51,32,13,20,36,13,18,30,13,9,6,1,3,89,76,3,40,34,23,58,21,5,26,38,21,5,55,78,21,5,16,1,3,75,80,78,79,10,2,79,76,20,2,28,3,66,37,30,28,15,44,49,38,37,9,31,31,32,45,50,54,56,50,62,13,62,34,44,46,19,13,64,84,13,55,54,75,53,80,56,49,102,82,17,22,80,51,17,13,9,63,69,97,64,62,39,68,13,50,125,13,18,87,13,11,29,59,9,33,63,9,32,5,1,0,18,22,11,44,11,23,25,35,41,41,36,39,30,29,34,43,23,59,16,73,50,63,41,9,5,1,41,24,15,5,18,25,77,1,19,28,35,40,39,83,42,41,5,39,57,44,5,23,64,5,28,47,5,24,49,19,35,35,49,15,9,5,69,115,48,50,94,118,35,38,39,5,21,37,31,45,56,11,5,7,78,76,25,7,89,46,48,62,29,30,49,52,62,27,35,33,9,78,38,40,42,42,82,17,13,11,35,55,49,52,62,27,26,9,32,5,43,75,47,19,38,21,32,46,32,52,59,68,37,46,67,13,39,9,19,5,76,76,74,37,31,37,64,33,42,63,9,42,44,49,25,13,9,40,24,35,19,5,45,50,81,22,32,59,58,100,57,67,45,65,9,100,5,1,0,28,0,25,0,15,0,25,6,31,14,14,15,2,1,0,28,6,75,14,15,2,1,0,24,32,51,2,0,19,2,0,33,25,30,0,23,36,15,2,0,58,21,16,3,0,14,2,0,6,89,25,14,15,2,2,0,34,27,8,29,1,0,52,112,0,46,21,19,9,23,18,17,4,14,17,3,4,0,15,2,0,29,45,61,30,28,42,0,31,60,0,33,0,3,44,0,6,34,2,39,34,72,35,0,16,0,27,19,39,21,3,0,41,0,33,7,55,29,12,0,28,28,3,0,80,87,0,26,28,3,0,57,72,0,20,3,5,0,43,17,0,28,7,69,19,23,3,2,0,19,2,0,35,12,14,20,21,30,12,3,0,34,54,14,17,6,2,0,67,34,0,26,44,14,9,18,27,4,6,2,0,13,25,32,0,29,19,0,21,36,3,0,27,37,3,0,28,30,3,0,12,32,3,61,52,0,19,76,78,0,20,16,21,22,12,20,4,0,15,55,3,0,37,0,21,34,3,0,12,84,78,60,24,41,4,30,48,3,0,32,60,49,3,0,87,89,9,12,17,10,91,53,0,57,31,8,58,27,13,0,56,60,62,3,0,32,38,3,0,22,63,61,40,39,3,2,0,22,36,2,0,56,47,2,0,85,0,20,43,36,0,41,55,55,12,5,0,24,6,5,2,0,20,0,19,2,0,35,34,45,2,0,18,13,8,4,2,0,36,32,43,2,0,54,91,63,2,0,18,13,8,8,26,3,4,2,0,35,59,16,2,0,37,0,19,46,2,0,19,1,0,68,20,31,2,0,23,50,2,0,41,1,0,16,0,63,25,17,61,4,7,74,135,2,4,0,64,19,58,17,4,56,4,0,61,26,17,48,4,72,4,0,17,23,0,18,0,31,0,24,22,0,23,0,39,47,42,0,17,15,3,0,31,35,15,3,44,37,58,17,5,3,14,1,0,44,49,16,3,36,1,0,38,39,58,5,1,0,33,56,1,0,19,22,0,23,0,38,39,50,5,1,0,33,48,1,0,36,50,1,0,36,22,21,21,0,41,53,41,53,0,29,29,29,17,0,24,33,33,30,0,12,1,0,9,69,19,8,14,1,0,22,20,0,38,38,17,17,3,0,12,40,50,5,0,51,54,17,21,16,22,9,9,6,3,0,47,72,13,68,18,19,7,5,15,5,1,0,31,36,7,41,16,66,18,12,14,5,3,1,0,49,38,34,0,29,36,22,0,33,68,0,35,35,0,67,47,72,7,7,46,46,43,68,7,6,30,65,9,61,0,18,53,26,3,0,10,12,12,15,3,2,0,35,34,13,13,3,11,13,0,65,19,0,54,29,53,39,0,29,71,0,44,73,13,0,30,5,0,66,30,33,28,57,22,20,30,12,33,7,43,7,5,0,62,2,0,33,18,0,65,19,0,45,29,71,0,44,73,13,0,47,33,11,60,17,22,28,14,22,9,21,5,3,0,30,16,0,18,15,0,29,2,0,22,25,0,30,0,35,48,55,0,28,16,2,0,95,2,0,28,47,36,0,29,22,37,0,56,50,30,52,49,99,0,73,75,26,13,46,23,23,9,5,0,17,0,9,47,43,67,11,17,19,15,30,31,9,5,0,76,97,19,84,5,0,20,1,0,35,80,1,0,40,0,17,0,52,51,0,29,24,46,0,15,1,0,53,24,19,0,55,0,58,64,44,0,64,48,36,40,0,44,0,29,21,0,24,46,0,44,32,50,5,0,15,1,0,32,34,0,31,0,36,0,41,42,0,14,14,2,0,66,38,0,24,18,2,0,52,2,0,25,40,0,33,45,21,38,0,11,0,9,41,46,27,31,0,69,45,1,0,34,0,29,40,23,34,0,45,45,67,0,32,41,0,60,0,18,41,33,0,38,5,0,23,1,0,32,19,22,5,0,40,46,0,69,61,0,89,68,50,104,100,100,40,77,0,84,85,58,0,37,56,97,0,76,0,62,58,115,5,0,18,1,0,42,45,39,23,20,5,0,83,88,0,30,20,16,13,16,24,19,20,17,10,6,0,53,58,1,0,22,0,43,0,43,78,23,24,50,31,33,7,1,0,39,17,15,5,0,33,0,37,75,57,73,30,51,0,22,59,13,9,0,91,6,1,0,39,48,55,5,0,16,1,0,43,48,59,5,0,16,1,0,16,21,17,21,18,2,0,33,24,24,0,40,26,51,0,30,74,0,75,87,45,0,19,1,0,44,26,51,0,30,77,0,109,82,0,18,1,0,27,33,36,0,36,36,0,33,0,3,53,47,2,15,45,67,2,3,43,35,3,73,80,3,40,38,70,78,48,55,5,48,49,5,17,1,53,44,78,24,7,33,25,180,9,7,16,1,44,53,56,53,64,123,45,13,49,53,67,96,95,31,15,24,9,21,28,9,5,78,96,93,84,62,28,5,23,36,9,66,85,20,5,17,21,5,1,0,22,0,36,32,41,48,9,51,61,9,36,64,9,14,96,9,17,2,0,44,45,23,75,18,25,64,40,44,0,15,29,57,1,0,46,39,49,44,56,73,54,63,46,53,13,26,12,11,2,0,33,30,45,71,22,49,26,0,26,23,25,38,24,19,9,50,29,9,0,62,10,74,73,75,58,71,78,75,77,29,21,21,21,37,26,24,21,27,0,55,32,68,22,25,28,13,29,34,34,17,39,29,17,38,35,31,40,63,37,32,42,25,21,40,45,21,26,33,21,17,13,44,26,13,59,33,13,45,33,32,89,17,80,13,32,27,13,32,37,13,26,9,0,54,0,19,0,32,19,32,22,38,23,42,79,17,43,33,72,17,50,27,13,55,38,23,13,18,55,30,42,33,24,56,42,17,13,45,9,6,31,32,31,24,9,32,10,0,35,64,41,19,33,20,0,36,59,9,28,5,1,0,11,55,57,59,67,63,69,63,69,67,71,67,73,73,76,20,53,55,49,51,56,58,55,57,53,55,56,58,55,57,55,56,2,0,13,15,23,15,17,20,28,26,28,23,13,27,2,0,15,17,13,13,21,18,14,16,13,15,17,19,16,18,17,19,17,18,2,0,29,32,45,0,63,79,24,31,35,35,0,52,24,44,3,58,30,29,7,40,64,59,53,44,49,50,9,7,46,35,77,43,10,20,52,57,54,35,18,9,0,59,66,0,66,34,9,7,46,36,42,39,35,58,20,61,53,44,49,52,9,7,5,19,16,3,0,40,27,31,34,31,3,0,15,2,0,29,0,74,48,9,11,13,18,3,82,27,16,16,21,16,19,24,18,17,58,21,42,15,16,71,15,46,17,23,57,17,16,16,45,16,25,16,70,19,17,19,16,18,20,22,19,21,20,22,20,22,45,3,0,54,64,48,19,2,0,3,45,2,66,18,76,2,28,3,0,25,33,29,34,43,0,26,40,0,33,38,18,16,83,6,23,58,28,7,18,78,8,5,18,39,3,1,0,36,19,15,17,16,17,3,14,1,0,38,27,48,39,39,41,10,13,15,16,3,1,0,25,0,64,33,28,46,0,35,10,3,0,46,38,32,3,0,55,0,57,16,36,10,3,0,6,35,35,37,5,66,55,68,102,68,72,45,3,0,19,90,37,10,24,3,0,50,67,68,65,34,3,0,37,70,25,39,16,34,26,6,10,75,3,49,25,0,20,60,5,5,0,46,45,5,1,0,34,0,34,29,30,0,77,46,38,32,3,0,38,30,24,3,0,37,0,59,58,16,27,83,12,78,16,5,3,2,0,11,5,41,1,11,65,65,59,63,39,1,51,16,20,24,124,19,21,29,60,149,32,29,13,54,55,44,38,15,72,29,13,69,49,42,13,18,55,13,11,6,20,1,47,83,23,43,30,29,31,26,11,5,24,29,5,1,0,3,72,68,18,3,39,15,37,89,90,35,20,5,12,38,29,54,93,48,105,24,39,40,35,35,22,18,13,9,6,1,61,32,37,52,75,55,45,87,43,49,32,13,9,65,6,1,39,37,49,56,18,47,6,1,35,11,110,187,1,0,33,33,95,63,76,81,79,69,44,18,23,5,91,43,17,22,35,6,24,35,7,25,1,99,35,64,23,27,5,24,29,5,44,61,18,50,65,5,23,38,6,68,62,48,30,27,62,60,6,36,55,88,72,72,73,28,15,45,22,21,24,29,25,12,6,63,63,27,38,19,47,61,9,30,125,34,43,53,13,91,43,43,13,18,64,13,64,23,9,108,6,39,71,45,29,79,9,30,6,41,41,36,55,37,39,27,49,21,19,13,9,5,9,72,64,190,110,5,15,25,49,74,49,99,32,49,24,15,9,16,5,36,1,60,57,67,68,69,70,24,92,46,22,9,27,6,77,97,69,67,37,43,28,35,60,9,21,54,27,76,62,61,13,28,9,78,69,70,18,7,12,50,17,5,10,40,77,81,35,53,30,33,61,9,5,9,45,29,5,13,28,5,1,46,24,77,25,32,61,71,28,41,50,9,5,27,24,19,35,37,151,9,7,1,29,80,1,0,51,3,89,28,3,23,38,30,30,51,69,27,90,29,6,15,34,26,27,42,34,112,31,15,30,9,6,67,44,53,78,66,33,9,44,6,22,36,82,71,26,35,67,67,36,17,82,35,19,51,95,83,66,65,35,69,23,17,115,35,19,46,57,31,13,23,40,51,50,61,17,13,10,30,5,50,51,34,35,77,19,33,71,74,67,67,58,71,74,41,71,67,27,86,60,58,9,61,74,69,32,9,34,72,70,71,70,68,67,13,76,54,96,94,96,46,65,63,98,19,50,48,85,82,55,49,92,21,17,82,35,63,55,79,21,58,127,21,17,83,88,61,52,62,37,63,71,65,73,58,21,17,30,115,17,60,52,14,31,41,38,43,57,59,55,49,39,17,22,92,39,23,17,13,18,40,88,92,88,48,46,114,39,23,17,22,45,42,47,61,55,49,21,96,39,23,33,17,13,9,19,120,48,77,37,25,9,36,21,86,5,27,67,75,20,43,24,32,21,11,5,28,75,76,46,68,47,83,27,11,27,5,60,97,5,55,43,115,9,43,49,24,29,9,42,20,25,9,46,22,54,58,27,9,33,63,15,57,26,80,81,81,76,158,80,37,57,11,79,40,34,19,33,31,45,39,35,31,34,39,32,13,23,78,52,23,5,25,1,0,68,20,14,38,26,53,19,59,24,17,47,16,2,80,74,40,51,32,21,5,78,32,1,28,86,1,31,51,40,1,3,43,3,56,32,23,40,24,32,20,43,1,3,43,3,80,29,23,41,23,40,24,32,20,45,1,0,48,77,50,88,42,34,31,5,34,37,14,75,71,71,65,18,33,25,61,10,28,37,30,23,7,100,80,60,44,20,20,15,20,19,106,31,10,19,16,35,11,20,21,29,40,58,10,33,40,40,38,60,36,55,36,73,73,22,17,80,13,132,10,29,26,78,53,13,10,37,60,10,33,56,10,23,48,63,54,13,31,32,27,34,33,15,10,21,29,73,13,18,80,13,10,38,42,65,78,50,59,19,13,42,10,29,28,44,30,39,35,6,65,31,13,33,9,17,28,9,6,41,55,45,5,36,63,37,35,28,9,39,6,42,37,45,61,9,55,39,41,17,52,13,25,25,34,42,19,13,9,7,33,59,7,36,65,7,40,44,80,58,11,5,52,25,42,37,65,9,5,82,20,28,46,5,32,34,25,79,5,12,35,16,68,5,11,30,48,5,29,67,25,100,76,24,7,39,82,32,27,65,5,32,49,25,50,57,19,55,53,5,28,77,50,42,55,31,53,22,104,60,33,22,11,5,20,63,33,44,64,9,6,40,32,65,58,55,31,21,51,36,39,17,27,48,27,17,13,41,11,5,10,39,24,5,18,1,67,11,41,22,73,5,41,135,51,54,43,36,58,13,39,28,36,7,17,57,25,68,50,23,83,76,109,13,18,26,13,11,5,37,76,43,18,97,5,18,1,38,18,25,5,28,34,41,32,34,39,11,7,36,27,7,51,48,26,35,26,32,17,22,30,17,15,9,14,22,9,7,1,38,61,1,50,27,20,35,14,6,83,118,21,51,5,64,63,65,78,42,5,17,125,25,12,6,85,51,137,5,18,1,38,17,60,68,25,50,41,50,21,27,13,11,5,25,9,53,5,17,49,27,11,15,5,34,40,65,25,41,9,33,25,41,9,5,77,26,40,62,53,28,31,9,5,10,62,5,54,37,1,0,13,17,28,44,47,2,0,13,19,23,44,23,17,19,81,24,68,24,59,44,23,39,59,63,41,19,61,47,26,54,21,26,44,34,28,21,26,27,25,63,99,65,53,65,60,51,40,36,78,78,22,67,65,23,17,22,92,17,31,101,63,56,73,13,18,40,59,13,65,9,50,60,43,54,24,38,49,35,24,10,47,45,25,24,26,52,61,10,45,70,49,13,25,24,26,50,59,10,44,54,46,30,44,16,56,24,10,15,6,1,0,49,35,84,84,51,12,77,147,129,132,129,132,129,137,6,1,3,78,16,3,38,15,76,26,180,11,36,25,71,5,12,37,16,60,5,27,76,40,19,18,20,8,35,51,75,54,33,29,58,13,39,28,14,7,23,76,43,18,83,5,12,15,19,21,70,9,6,1,0,17,17,46,17,2,0,37,36,38,5,43,21,5,31,20,5,47,46,1,50,19,18,5,78,33,39,20,33,47,108,14,11,5,58,96,7,1,48,25,51,34,9,61,44,9,5,16,1,30,40,31,16,26,33,10,5,12,22,40,145,53,66,69,10,55,28,28,13,60,88,32,28,13,92,48,101,13,154,9,6,1,0,3,75,2,66,18,56,3,30,62,44,12,26,29,36,28,42,28,17,40,34,32,86,77,115,49,26,21,26,84,21,17,48,24,45,42,58,23,41,18,13,23,65,87,36,71,26,69,13,9,6,1,0,48,60,54,3,80,15,3,41,12,35,38,76,48,81,50,58,57,58,25,52,82,17,51,49,17,22,78,17,42,35,78,17,38,78,17,27,69,69,81,74,70,66,72,80,13,129,76,74,65,96,13,9,6,1,34,18,31,32,105,5,21,1,0,43,46,15,34,21,71,58,55,50,9,21,60,5,10,63,78,82,81,22,21,42,71,12,21,48,57,25,76,9,14,56,25,65,9,5,35,2,45,32,12,26,23,38,26,13,10,24,38,58,13,40,23,13,58,20,38,61,2,9,6,2,0,35,34,51,36,46,40,45,5,37,40,42,16,1,47,37,85,1,50,56,1,47,56,1,58,50,37,61,40,25,28,16,31,51,10,38,7,14,9,82,19,45,11,28,47,47,59,13,52,47,101,45,33,19,13,11,5,13,29,5,70,1,73,41,20,50,90,89,71,46,54,9,55,46,68,46,46,54,65,88,50,35,30,28,15,80,30,67,53,50,73,65,105,69,31,63,13,9,5,29,1,56,46,40,15,63,57,5,65,60,43,103,42,17,22,20,7,35,37,1,34,47,12,28,22,37,34,34,34,34,15,10,18,19,26,53,34,116,30,17,13,10,32,19,43,55,24,61,18,13,32,111,23,13,20,26,43,82,53,86,46,28,78,144,53,92,19,151,25,83,15,15,68,45,22,17,22,73,17,13,18,66,53,13,93,53,20,64,108,11,81,14,10,27,70,77,13,9,6,1,0,3,75,3,27,15,12,31,34,29,10,48,177,71,13,9,6,1,0,33,58,31,47,28,84,91,94,6,26,38,39,78,5,78,30,18,21,26,35,10,32,80,9,39,40,58,38,11,5,35,15,30,124,31,39,40,47,50,15,9,30,56,26,30,25,10,59,47,25,93,39,32,35,72,18,32,47,42,19,39,5,50,45,12,28,38,97,35,80,44,23,13,16,66,32,35,37,43,23,13,78,27,28,13,34,44,60,52,19,13,44,36,22,50,35,42,52,64,76,13,31,28,13,50,41,60,13,26,9,6,1,0,50,41,39,26,35,24,20,5,45,28,25,5,43,52,32,25,5,35,68,61,24,24,5,38,75,46,25,5,41,9,50,5,15,73,86,106,5,58,31,5,21,1,44,47,15,12,44,34,29,10,44,19,43,82,49,35,47,72,17,51,64,17,51,34,39,21,38,79,97,55,76,167,21,17,24,42,18,13,18,85,43,51,55,160,26,75,76,65,74,62,64,88,107,21,56,67,127,21,53,95,103,28,34,79,21,26,76,63,69,21,87,41,23,17,24,28,43,91,22,17,28,13,9,6,1,0,3,76,3,27,12,36,41,34,42,38,14,24,9,6,1,0,79,47,52,32,101,32,12,45,42,42,49,22,42,49,19,23,30,30,46,20,46,34,23,11,47,38,26,72,20,31,26,20,27,32,28,25,29,30,63,43,42,28,23,29,80,19,16,77,22,1,0,27,0,23,27,31,0,24,44,1,0,21,77,27,36,0,28,31,50,58,17,0,63,53,0,48,26,0,44,51,15,30,33,60,39,31,64,64,0,73,73,0,65,78,62,0,31,0,42,28,32,40,52,17,11,32,9,50,52,36,0,44,29,50,9,14,40,25,7,0,21,23,38,0,41,57,83,7,5,3,0,12,1,0,32,81,1,0,39,27,55,24,50,56,58,0,16,31,45,5,35,34,5,3,0,7,66,103,0,48,68,39,14,32,41,9,0,20,34,86,18,90,11,9,7,7,0,21,15,16,55,5,0,23,3,1,0,22,9,7,2,0,44,42,30,0,28,0,38,48,63,0,41,72,0,52,60,28,0,29,0,28,31,48,14,27,56,58,96,0,43,35,7,0,47,16,4,0,40,106,0,50,3,0,41,56,3,0,15,2,0,24,0,44,3,54,77,80,57,3,31,18,1,82,43,30,36,48,76,74,33,32,44,5,23,13,15,6,32,31,105,25,60,41,61,9,5,20,50,45,41,7,84,52,26,22,80,17,25,9,28,24,9,49,59,9,14,39,9,7,85,21,35,96,20,105,6,23,74,34,23,58,22,50,13,9,5,19,107,25,67,72,6,47,52,75,74,111,28,30,26,28,6,22,32,77,23,53,56,79,85,69,83,23,69,44,5,30,78,67,30,83,36,62,17,86,56,45,46,22,72,40,41,27,30,56,19,26,28,27,37,71,40,81,28,13,18,27,40,74,40,38,75,47,56,55,49,65,60,48,58,51,46,34,29,28,13,120,10,6,33,69,99,13,77,51,22,18,73,115,21,27,23,32,37,17,16,13,24,21,29,15,36,63,14,23,21,23,31,30,10,29,70,10,15,32,23,23,28,29,50,113,46,13,10,37,6,32,157,59,125,47,167,94,32,149,28,44,24,56,11,5,58,70,145,6,75,89,40,5,57,26,15,106,33,9,7,23,71,5,46,26,15,88,42,9,7,24,73,5,47,26,15,90,43,9,7,33,112,5,63,26,15,19,129,113,9,7,92,195,5,74,26,15,212,25,9,7,86,102,5,122,116,85,61,5,20,1,3,80,32,3,54,67,39,36,5,31,124,46,19,5,19,30,23,48,52,42,9,5,10,31,36,104,30,9,5,26,30,98,20,5,16,1,64,35,34,37,28,21,9,37,31,32,21,9,47,77,54,21,9,62,53,21,9,40,33,52,31,21,9,62,158,21,9,56,105,21,9,28,5,18,1,58,74,1,27,11,17,11,17,41,30,5,72,50,56,1,33,27,37,61,17,32,12,1,45,59,70,35,29,36,46,67,5,19,13,19,6,25,46,5,17,1,35,26,27,29,18,39,36,35,42,36,16,38,11,5,52,1,96,47,83,21,21,22,26,68,9,61,55,25,9,5,17,21,59,57,42,42,25,9,5,10,68,29,81,51,40,9,28,87,56,45,29,13,9,28,85,55,44,28,13,9,28,87,56,45,30,13,9,5,24,39,20,5,9,23,20,71,71,48,23,85,84,83,70,78,83,29,61,80,13,18,85,81,33,89,75,13,9,26,72,65,48,85,64,9,62,35,26,34,71,9,16,48,19,24,10,5,15,111,16,5,1,58,40,37,32,26,21,25,21,38,28,23,18,13,41,30,65,45,77,36,46,30,25,23,17,14,13,44,30,74,96,32,76,46,126,108,86,26,23,17,13,9,7,43,12,19,80,6,1,65,54,56,59,36,51,9,14,44,9,6,44,52,34,54,50,18,1,52,11,27,92,50,5,33,19,22,52,40,39,34,6,67,68,36,64,37,40,9,5,34,85,19,73,126,15,55,18,23,47,38,15,69,64,72,45,37,17,46,67,53,59,17,13,9,5,15,1,52,35,52,126,5,21,1,0,22,26,26,40,36,36,36,56,54,58,24,24,36,48,26,34,40,36,26,30,50,38,44,48,50,56,22,42,52,0],"data":null,"url":"\")"},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/saxes@5.0.1/node_modules/saxes/saxes.js":{"lineLengths":[13,62,44,44,48,18,26,42,32,24,26,26,48,38,34,61,56,16,66,20,23,27,2,22,66,20,13,12,12,15,14,2,20,15,19,36,51,33,47,44,52,26,31,32,46,47,26,45,35,37,28,37,29,43,43,42,31,34,47,47,35,41,42,40,39,48,47,51,44,33,41,26,35,47,37,48,49,49,30,44,14,15,15,19,18,20,17,20,19,27,23,18,19,21,22,26,27,17,36,52,32,62,56,62,73,43,21,19,40,77,13,18,21,42,81,13,18,16,5,18,29,39,67,68,22,18,27,29,27,68,26,24,83,26,24,87,13,18,16,5,1,42,47,51,5,1,49,44,26,28,36,3,32,3,18,14,11,28,14,14,19,16,14,15,12,12,10,12,2,36,30,24,39,30,30,40,34,30,32,26,26,22,26,2,19,7,37,7,22,61,47,58,57,42,23,86,85,86,14,68,19,14,52,42,35,73,56,73,48,74,65,61,37,49,51,13,9,14,50,40,33,73,59,73,51,9,10,82,84,16,10,27,66,24,34,26,31,22,28,30,34,29,35,34,24,30,23,25,27,31,26,32,31,24,30,31,30,25,25,27,35,30,28,36,31,35,32,26,31,25,29,37,30,36,36,38,27,35,10,21,5,7,75,42,7,18,28,5,13,15,31,23,23,27,25,22,23,24,26,24,31,19,23,45,46,29,69,43,37,52,74,84,39,74,21,44,42,43,45,46,52,88,13,38,9,46,35,29,29,24,31,32,34,10,22,24,52,57,84,5,7,76,18,6,74,61,7,20,43,5,7,75,67,6,79,80,80,61,6,73,18,7,23,54,5,7,77,79,47,6,42,6,41,7,23,70,57,5,7,30,6,50,7,15,70,59,5,7,79,80,71,19,6,65,6,66,7,24,15,75,33,33,27,13,49,9,29,24,9,40,5,7,81,81,14,6,42,6,20,7,19,44,42,36,22,9,14,25,9,20,5,7,38,6,42,6,20,7,18,26,85,9,24,29,80,26,23,23,9,45,37,9,83,80,83,81,66,53,62,58,49,9,33,53,19,74,21,78,83,82,44,56,20,42,9,36,27,19,32,74,46,9,36,39,5,7,79,25,6,20,7,13,32,5,7,81,43,6,48,6,35,7,17,34,23,82,52,23,32,23,9,75,34,41,22,28,48,28,13,27,24,32,36,59,30,24,90,57,89,91,32,39,21,88,29,53,32,36,59,35,24,84,55,32,13,9,28,80,84,50,54,51,13,24,9,59,47,23,84,53,31,47,9,21,5,7,81,43,6,48,6,44,7,17,34,23,82,52,23,32,23,9,75,34,41,22,28,79,31,28,13,27,31,32,36,59,30,33,84,28,57,54,91,87,39,21,72,17,39,33,34,32,36,59,35,24,55,32,13,9,28,86,83,59,54,51,13,24,9,59,47,23,82,69,31,47,9,21,5,7,78,32,7,19,33,38,5,13,28,22,5,7,74,18,6,81,63,6,81,79,15,7,22,32,31,57,22,37,43,44,57,60,29,13,27,67,31,13,9,5,7,71,6,79,70,6,80,32,7,25,32,31,57,22,35,24,29,71,35,27,26,25,52,33,24,13,29,60,28,13,9,5,7,80,19,6,79,79,15,7,24,41,57,22,37,28,48,27,13,82,33,60,46,13,9,5,7,25,6,70,79,15,7,18,57,22,41,39,25,13,9,5,28,41,63,32,35,42,9,14,35,42,9,61,5,27,80,57,14,80,82,79,65,57,50,21,26,9,40,5,24,82,83,82,83,40,31,36,37,41,9,20,22,41,86,56,45,62,17,22,21,22,20,29,36,45,9,5,16,15,53,20,27,65,105,31,36,69,22,13,21,22,20,53,41,39,17,38,49,31,17,9,5,21,25,36,49,26,35,9,5,12,49,24,19,9,45,34,35,9,30,41,9,30,38,23,9,5,18,25,36,49,31,26,9,5,20,37,45,20,22,50,39,22,26,38,22,20,35,9,5,24,62,46,26,26,62,35,9,5,19,40,29,46,9,5,25,37,45,71,5,24,37,45,28,31,9,14,44,56,44,39,9,5,14,43,29,41,9,5,20,37,45,28,31,9,5,13,10,80,73,79,47,10,82,83,82,76,81,39,10,37,36,9,14,41,9,5,15,83,32,31,67,14,57,22,37,29,73,35,26,33,55,80,51,31,40,56,38,21,26,58,41,21,89,44,21,57,31,17,25,54,57,31,24,13,9,5,17,74,82,74,18,33,52,33,36,25,41,9,14,24,35,45,49,26,26,50,43,49,26,30,49,26,24,66,40,49,13,9,5,21,70,36,27,68,65,55,17,69,65,54,17,37,39,22,22,39,39,22,27,39,51,78,17,39,22,20,85,48,52,51,17,9,5,16,40,42,9,5,22,15,37,26,41,61,101,27,9,14,55,35,9,5,21,37,28,44,56,44,56,35,9,14,32,9,5,14,48,40,9,5,20,37,34,42,9,14,55,33,9,5,21,15,37,20,27,65,103,31,36,22,13,31,33,22,20,60,37,9,5,80,81,20,37,82,61,37,53,35,9,44,66,66,9,14,78,53,35,9,5,15,81,39,41,57,22,41,28,52,23,13,85,22,37,64,50,43,50,52,98,25,92,21,26,74,21,17,22,86,61,17,22,13,9,5,15,37,41,33,41,13,31,52,13,9,73,40,48,37,9,5,17,15,37,28,38,51,91,13,61,86,33,32,15,43,32,9,34,84,86,83,22,29,9,14,55,35,9,37,5,25,36,73,40,29,70,43,19,9,24,41,48,9,5,20,59,73,40,29,43,35,27,56,19,9,39,19,9,31,23,55,39,23,75,26,23,78,26,24,83,13,9,74,5,18,37,73,40,29,43,56,19,9,21,19,9,26,41,9,44,5,26,37,73,40,29,43,56,19,9,21,19,9,26,47,27,9,14,23,9,38,5,21,53,73,40,29,43,27,56,19,9,24,19,9,32,23,28,29,65,38,47,84,51,75,17,79,53,48,17,22,13,28,63,58,34,17,53,46,22,30,56,80,17,41,48,22,20,82,52,9,23,42,5,25,37,73,40,29,70,43,19,9,22,46,25,9,43,5,22,15,37,28,42,82,13,47,58,69,13,61,104,27,43,32,9,14,83,76,32,85,9,37,5,16,15,42,24,19,9,32,28,44,10,23,28,54,9,57,96,28,51,62,9,20,25,31,22,31,46,22,20,30,67,17,38,9,5,21,41,38,9,14,73,34,9,5,15,36,24,19,9,33,25,39,9,33,27,9,39,42,9,14,65,9,5,19,42,26,40,9,26,49,9,33,50,50,39,27,9,29,65,9,5,27,36,20,21,23,23,44,22,20,54,39,55,31,31,36,35,17,46,33,47,17,22,73,42,17,9,5,20,37,25,23,47,9,27,51,49,25,9,5,26,81,47,34,32,57,22,37,23,91,47,34,55,27,25,64,42,67,27,24,29,25,70,35,26,26,64,55,27,25,52,27,24,13,9,5,26,37,21,34,9,33,27,9,39,42,9,38,59,25,39,9,14,65,9,5,28,76,78,82,64,61,67,20,21,38,65,22,22,51,22,21,22,20,48,80,17,54,43,36,35,17,22,42,17,9,5,17,42,28,28,9,26,47,9,29,62,9,5,25,36,25,32,22,21,22,20,66,9,5,34,24,84,81,80,84,10,84,78,10,48,53,67,18,57,22,37,28,45,48,46,69,48,50,43,25,54,43,25,21,53,57,35,17,25,42,52,48,68,21,53,57,35,35,45,45,63,34,47,71,34,55,34,32,64,21,26,29,71,84,21,53,26,29,48,75,21,35,53,26,25,48,56,21,57,35,24,53,13,9,45,5,29,84,77,83,33,32,53,29,67,21,57,22,40,27,28,45,48,46,69,48,50,43,25,54,43,25,21,57,38,17,25,42,52,48,68,21,36,57,38,29,48,75,21,35,26,25,48,56,21,57,38,24,37,40,21,13,9,24,19,9,76,78,17,60,57,47,9,61,57,46,9,5,31,15,51,52,35,57,94,33,41,69,75,13,40,46,9,36,41,37,43,9,5,34,15,37,35,57,94,5,7,77,31,6,20,7,11,19,28,63,9,30,33,35,51,9,66,41,9,30,32,61,93,27,9,28,57,82,21,20,5,7,34,6,43,6,80,7,21,19,37,32,23,9,30,64,41,36,27,13,9,30,32,23,9,109,5,7,58,6,36,6,15,7,17,53,40,27,47,9,44,44,67,50,9,33,5,24,15,36,29,9,40,59,32,30,98,32,41,72,17,33,86,37,17,13,9,38,19,9,35,31,55,59,40,49,20,23,32,62,30,13,18,43,73,41,40,86,33,17,44,13,35,61,13,29,27,36,9,29,5,27,36,56,47,51,49,59,13,37,9,29,5,7,79,74,21,7,15,15,30,30,29,34,83,75,57,91,23,28,23,5,7,82,79,40,7,26,23,30,30,29,33,83,75,57,91,57,92,98,27,35,9,28,23,5,7,80,74,22,7,16,36,80,23,28,23,26,48,31,19,9,45,28,25,46,32,61,75,36,22,13,47,9,22,35,9,25,57,38,9,5,7,70,6,43,6,34,7,25,66,85,32,50,40,31,13,65,56,33,9,22,65,48,9,44,48,9,76,32,53,33,9,41,5,1,34,33],"data":{"version":3,"file":"saxes.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/saxes@5.0.1/src/saxes.ts"],"names":[],"mappings":"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"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/xmlchars@2.2.0/node_modules/xmlchars/xml/1.0/ed5.js":{"lineLengths":[13,3,77,2,33,15,36,3,62,2,13,2,70,22,43,204,91,2,23,2,62,57,84,72,101,71,12,13,13,17,2,9,2,46,38,3,66,2,27,2,55,3,20,41,44,39,40,1,24,3,71,2,27,2,52,3,17,60,1,18,3,77,2,27,2,66,3,29,39,35,21,21,23,23,35,35,39,39,39,39,39,39,39,39,40,1,42,3,71,2,27,2,60,3,24,32,35,21,21,21,39,37,1,32,31],"data":{"version":3,"file":"ed5.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/xmlchars@2.2.0/src/xml/1.0/ed5.ts"],"names":[],"mappings":"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"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/xmlchars@2.2.0/node_modules/xmlchars/xml/1.1/ed2.js":{"lineLengths":[13,3,77,2,33,15,36,3,62,2,13,2,69,93,22,43,204,91,2,23,2,62,84,57,84,72,101,71,12,13,13,17,2,9,2,46,38,3,66,2,27,2,55,3,20,42,39,40,1,24,3,77,2,27,2,66,3,30,36,20,20,34,35,33,1,44,3,78,77,79,40,2,27,2,73,23,3,36,25,22,22,33,23,36,39,40,1,56,3,71,2,27,2,52,3,17,60,1,18,3,77,2,27,2,66,3,49,29,39,35,21,21,23,23,35,35,39,39,39,39,39,39,39,39,40,1,42,3,71,2,27,2,60,3,24,32,35,21,21,21,39,37,1,32,31],"data":{"version":3,"file":"ed2.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/xmlchars@2.2.0/src/xml/1.1/ed2.ts"],"names":[],"mappings":"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"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/xmlchars@2.2.0/node_modules/xmlchars/xmlns/1.0/ed3.js":{"lineLengths":[13,3,54,2,33,15,36,3,62,2,13,2,43,207,97,2,23,2,90,78,110,3,65,2,27,2,46,3,49,31,39,21,35,35,35,39,39,39,39,39,39,39,39,39,40,1,46,3,59,2,27,2,46,3,26,34,22,25,39,27,43,42,1,36,31],"data":{"version":3,"file":"ed3.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/xmlchars@2.2.0/src/xmlns/1.0/ed3.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,EAAE;AACF,aAAa;AACb,EAAE;AAEF,2CAA2C;AAC9B,QAAA,kBAAkB,GAAG,iLAA2K,CAAC;AAEjM,QAAA,YAAY,GACvB,MAAI,0BAAkB,yCAAsC,CAAC;AAE/D,EAAE;AACF,uBAAuB;AACvB,EAAE;AAEW,QAAA,qBAAqB,GAChC,IAAI,MAAM,CAAC,OAAK,0BAAkB,OAAI,EAAE,GAAG,CAAC,CAAC;AAElC,QAAA,eAAe,GAAG,IAAI,MAAM,CAAC,OAAK,oBAAY,OAAI,EAAE,GAAG,CAAC,CAAC;AAEzD,QAAA,UAAU,GACrB,IAAI,MAAM,CAAC,OAAK,0BAAkB,UAAK,oBAAY,QAAK,EAAE,GAAG,CAAC,CAAC;AAEjE;;;;;;GAMG;AACH,iDAAiD;AACjD,SAAgB,iBAAiB,CAAC,CAAS;IACzC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;QACxB,CAAC,KAAK,IAAI;QACV,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;QAC5B,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;AAC1C,CAAC;AAhBD,8CAgBC;AAED;;;;;;GAMG;AACH,SAAgB,YAAY,CAAC,CAAS;IACpC,OAAO,iBAAiB,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,KAAK,IAAI;YACV,CAAC,KAAK,IAAI;YACV,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;YACxB,CAAC,KAAK,MAAM;YACZ,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC;YAC5B,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;AACnC,CAAC;AARD,oCAQC"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/http-proxy-agent@5.0.0/node_modules/http-proxy-agent/dist/index.js":{"lineLengths":[13,72,62,2,52,37,37,1,34,58,63,56,38,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/http-proxy-agent@5.0.0/node_modules/http-proxy-agent/src/index.ts"],"names":[],"mappings":";;;;AAIA,oDAAsC;AAEtC,SAAS,oBAAoB,CAC5B,IAAyD;IAEzD,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC;AAED,WAAU,oBAAoB;IAmBhB,mCAAc,GAAG,eAAe,CAAC;IAE9C,oBAAoB,CAAC,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;AAC5D,CAAC,EAtBS,oBAAoB,KAApB,oBAAoB,QAsB7B;AAED,iBAAS,oBAAoB,CAAC"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/http-proxy-agent@5.0.0/node_modules/http-proxy-agent/dist/agent.js":{"lineLengths":[13,90,112,64,99,102,118,78,7,2,72,62,2,62,46,46,46,50,61,43,55,28,78,1,3,71,72,2,14,3,49,24,17,40,46,9,14,25,9,20,92,9,64,20,46,64,31,71,71,50,45,50,9,40,53,9,39,78,74,77,42,30,34,9,27,5,7,66,24,6,21,7,25,61,48,57,35,42,13,35,69,13,58,48,13,39,73,59,33,13,70,70,52,68,29,108,13,62,23,30,58,54,13,18,58,54,13,79,79,78,30,26,33,76,35,38,58,32,91,42,65,80,59,17,71,33,91,51,65,44,68,71,17,13,79,79,81,65,57,26,11,5,1,33,33],"data":{"version":3,"file":"agent.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/http-proxy-agent@5.0.0/node_modules/http-proxy-agent/src/agent.ts"],"names":[],"mappings":"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"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@tootallnate+once@2.0.0/node_modules/@tootallnate/once/dist/index.js":{"lineLengths":[13,62,47,45,28,105,50,53,9,35,22,26,9,31,22,24,9,98,34,37,7,1,23,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@tootallnate+once@2.0.0/node_modules/@tootallnate/once/src/index.ts"],"names":[],"mappings":";;AAOA,SAAwB,IAAI,CAI3B,OAAgB,EAChB,IAAW,EACX,EAAE,MAAM,KAAkB,EAAE;IAE5B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACtC,SAAS,OAAO;YACf,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC9C,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACtC,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC1C,CAAC;QACD,SAAS,OAAO,CAAC,GAAG,IAAW;YAC9B,OAAO,EAAE,CAAC;YACV,OAAO,CAAC,IAA+C,CAAC,CAAC;QAC1D,CAAC;QACD,SAAS,OAAO,CAAC,GAAU;YAC1B,OAAO,EAAE,CAAC;YACV,MAAM,CAAC,GAAG,CAAC,CAAC;QACb,CAAC;QACD,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC3C,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC1B,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;AACJ,CAAC;AA1BD,uBA0BC"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/agent-base@6.0.2/node_modules/agent-base/dist/src/index.js":{"lineLengths":[13,72,62,2,35,50,60,44,21,60,1,29,34,34,21,106,1,38,49,1,25,7,40,55,6,33,18,7,47,38,20,29,49,41,13,32,32,13,70,32,59,44,13,75,70,36,32,44,30,34,31,30,9,27,63,48,13,49,9,28,41,9,24,60,45,13,59,9,25,38,9,33,119,9,11,71,55,10,22,11,32,50,59,57,13,36,40,13,36,59,13,40,73,13,41,75,74,76,62,33,13,30,33,38,36,41,46,55,29,40,33,33,59,38,34,27,39,73,81,37,14,37,33,32,107,38,29,14,44,29,27,41,44,37,17,29,14,42,29,27,40,44,37,17,38,72,76,35,98,49,27,17,29,47,54,23,41,27,17,119,29,14,54,64,23,13,44,48,76,82,17,22,61,17,13,65,61,13,66,46,13,17,105,99,13,25,57,13,9,34,73,29,9,19,64,9,5,30,43,56,38,29,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/agent-base@6.0.2/node_modules/agent-base/src/index.ts"],"names":[],"mappings":"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"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/agent-base@6.0.2/node_modules/agent-base/dist/src/promisify.js":{"lineLengths":[13,62,24,33,49,52,26,32,17,22,33,17,15,11,6,1,28,37],"data":{"version":3,"file":"promisify.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/agent-base@6.0.2/node_modules/agent-base/src/promisify.ts"],"names":[],"mappings":";;AAeA,SAAwB,SAAS,CAAC,EAAkB;IACnD,OAAO,UAAsB,GAAkB,EAAE,IAAoB;QACpE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACtC,EAAE,CAAC,IAAI,CACN,IAAI,EACJ,GAAG,EACH,IAAI,EACJ,CAAC,GAA6B,EAAE,GAAyB,EAAE,EAAE;gBAC5D,IAAI,GAAG,EAAE;oBACR,MAAM,CAAC,GAAG,CAAC,CAAC;iBACZ;qBAAM;oBACN,OAAO,CAAC,GAAG,CAAC,CAAC;iBACb;YACF,CAAC,CACD,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC;AACH,CAAC;AAjBD,4BAiBC"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/https-proxy-agent@5.0.1/node_modules/https-proxy-agent/dist/index.js":{"lineLengths":[13,72,62,2,52,38,37,1,35,60,64,58,39,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/https-proxy-agent@5.0.1/node_modules/https-proxy-agent/src/index.ts"],"names":[],"mappings":";;;;AAKA,oDAAuC;AAEvC,SAAS,qBAAqB,CAC7B,IAA2D;IAE3D,OAAO,IAAI,eAAgB,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC;AAED,WAAU,qBAAqB;IAoBjB,qCAAe,GAAG,eAAgB,CAAC;IAEhD,qBAAqB,CAAC,SAAS,GAAG,eAAgB,CAAC,SAAS,CAAC;AAC9D,CAAC,EAvBS,qBAAqB,KAArB,qBAAqB,QAuB9B;AAED,iBAAS,qBAAqB,CAAC"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/https-proxy-agent@5.0.1/node_modules/https-proxy-agent/dist/agent.js":{"lineLengths":[13,90,112,64,99,102,118,78,7,2,72,62,2,62,46,46,46,52,50,43,82,57,3,75,73,2,79,79,78,38,2,70,59,2,14,3,50,24,17,40,46,9,14,25,9,20,92,9,65,20,46,64,31,71,71,50,45,50,9,40,53,9,46,78,62,47,9,39,78,74,77,42,30,34,9,27,5,7,66,24,6,21,7,25,61,48,62,23,30,58,54,13,18,58,54,13,61,57,61,68,29,103,13,61,54,54,55,35,13,32,41,54,59,13,80,43,72,37,43,42,74,66,64,68,139,39,17,30,13,80,78,77,33,77,70,80,31,14,56,29,77,39,80,39,67,62,80,78,28,33,29,15,30,11,5,1,34,25,20,1,38,73,1,28,78,1,29,19,12,22,34,32,9,5,15,1,33],"data":{"version":3,"file":"agent.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/https-proxy-agent@5.0.1/node_modules/https-proxy-agent/src/agent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,8CAAsB;AACtB,8CAAsB;AACtB,8CAAsB;AACtB,oDAA4B;AAC5B,kDAAgC;AAEhC,2CAAkE;AAElE,kFAAwD;AAExD,MAAM,KAAK,GAAG,eAAW,CAAC,yBAAyB,CAAC,CAAC;AAErD;;;;;;;;;;;;;GAaG;AACH,MAAqB,eAAgB,SAAQ,kBAAK;IAIjD,YAAY,KAAsC;QACjD,IAAI,IAA4B,CAAC;QACjC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC9B,IAAI,GAAG,aAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACxB;aAAM;YACN,IAAI,GAAG,KAAK,CAAC;SACb;QACD,IAAI,CAAC,IAAI,EAAE;YACV,MAAM,IAAI,KAAK,CACd,8DAA8D,CAC9D,CAAC;SACF;QACD,KAAK,CAAC,2CAA2C,EAAE,IAAI,CAAC,CAAC;QACzD,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,MAAM,KAAK,qBAAgC,IAAI,CAAE,CAAC;QAElD,wDAAwD;QACxD,uBAAuB;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAE/D,+DAA+D;QAC/D,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC;QAC1C,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;YACnC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE;YAC9B,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;SACzC;QAED,sCAAsC;QACtC,sEAAsE;QACtE,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC,EAAE;YACpD,KAAK,CAAC,aAAa,GAAG,CAAC,UAAU,CAAC,CAAC;SACnC;QAED,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE;YAC7B,kEAAkE;YAClE,8DAA8D;YAC9D,iEAAiE;YACjE,8BAA8B;YAC9B,OAAO,KAAK,CAAC,IAAI,CAAC;YAClB,OAAO,KAAK,CAAC,QAAQ,CAAC;SACtB;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IACG,QAAQ,CACb,GAAkB,EAClB,IAAoB;;YAEpB,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;YAEpC,kDAAkD;YAClD,IAAI,MAAkB,CAAC;YACvB,IAAI,WAAW,EAAE;gBAChB,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;gBAC1C,MAAM,GAAG,aAAG,CAAC,OAAO,CAAC,KAA8B,CAAC,CAAC;aACrD;iBAAM;gBACN,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;gBAC1C,MAAM,GAAG,aAAG,CAAC,OAAO,CAAC,KAA2B,CAAC,CAAC;aAClD;YAED,MAAM,OAAO,qBAA6B,KAAK,CAAC,OAAO,CAAE,CAAC;YAC1D,MAAM,QAAQ,GAAG,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YAC7C,IAAI,OAAO,GAAG,WAAW,QAAQ,eAAe,CAAC;YAEjD,wDAAwD;YACxD,IAAI,KAAK,CAAC,IAAI,EAAE;gBACf,OAAO,CAAC,qBAAqB,CAAC,GAAG,SAAS,MAAM,CAAC,IAAI,CACpD,KAAK,CAAC,IAAI,CACV,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;aACvB;YAED,iDAAiD;YACjD,0CAA0C;YAC1C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;YAC1C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;gBACzC,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;aACnB;YACD,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YAEpB,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC;YAC7B,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACxC,OAAO,IAAI,GAAG,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;aAC3C;YAED,MAAM,oBAAoB,GAAG,8BAAkB,CAAC,MAAM,CAAC,CAAC;YAExD,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,MAAM,CAAC,CAAC;YAE/B,MAAM,EACL,UAAU,EACV,QAAQ,EACR,GAAG,MAAM,oBAAoB,CAAC;YAE/B,IAAI,UAAU,KAAK,GAAG,EAAE;gBACvB,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBAE3B,IAAI,IAAI,CAAC,cAAc,EAAE;oBACxB,sDAAsD;oBACtD,8CAA8C;oBAC9C,KAAK,CAAC,oCAAoC,CAAC,CAAC;oBAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC;oBAChD,OAAO,aAAG,CAAC,OAAO,iCACd,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,KACjD,MAAM;wBACN,UAAU,IACT,CAAC;iBACH;gBAED,OAAO,MAAM,CAAC;aACd;YAED,oEAAoE;YACpE,kEAAkE;YAClE,iEAAiE;YACjE,qBAAqB;YAErB,iEAAiE;YACjE,0DAA0D;YAC1D,oEAAoE;YACpE,mBAAmB;YACnB,EAAE;YACF,4CAA4C;YAC5C,MAAM,CAAC,OAAO,EAAE,CAAC;YAEjB,MAAM,UAAU,GAAG,IAAI,aAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YACvD,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;YAE3B,oEAAoE;YACpE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAa,EAAE,EAAE;gBACpC,KAAK,CAAC,2CAA2C,CAAC,CAAC;gBACnD,gBAAM,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEpC,gEAAgE;gBAChE,8DAA8D;gBAC9D,YAAY;gBACZ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACjB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;YAEH,OAAO,UAAU,CAAC;QACnB,CAAC;KAAA;CACD;AA3JD,kCA2JC;AAED,SAAS,MAAM,CAAC,MAAkC;IACjD,MAAM,CAAC,MAAM,EAAE,CAAC;AACjB,CAAC;AAED,SAAS,aAAa,CAAC,IAAY,EAAE,MAAe;IACnD,OAAO,OAAO,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACtE,CAAC;AAED,SAAS,OAAO,CAAC,QAAwB;IACxC,OAAO,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC3E,CAAC;AAED,SAAS,IAAI,CACZ,GAAM,EACN,GAAG,IAAO;IAIV,MAAM,GAAG,GAAG,EAEX,CAAC;IACF,IAAI,GAAqB,CAAC;IAC1B,KAAK,GAAG,IAAI,GAAG,EAAE;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;KACD;IACD,OAAO,GAAG,CAAC;AACZ,CAAC"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/https-proxy-agent@5.0.1/node_modules/https-proxy-agent/dist/parse-proxy-response.js":{"lineLengths":[13,72,62,2,62,50,72,37,45,87,88,86,38,30,27,25,36,18,26,16,46,9,28,48,52,52,52,9,31,47,9,26,27,9,31,22,37,24,9,28,28,38,67,62,38,33,70,23,23,13,86,56,62,21,27,24,15,9,36,36,32,15,7,1,37,48],"data":{"version":3,"file":"parse-proxy-response.js","sourceRoot":"","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/https-proxy-agent@5.0.1/node_modules/https-proxy-agent/src/parse-proxy-response.ts"],"names":[],"mappings":";;;;;AAAA,kDAAgC;AAGhC,MAAM,KAAK,GAAG,eAAW,CAAC,wCAAwC,CAAC,CAAC;AAOpE,SAAwB,kBAAkB,CACzC,MAAgB;IAEhB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACtC,+EAA+E;QAC/E,gFAAgF;QAChF,8EAA8E;QAC9E,8BAA8B;QAC9B,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,MAAM,OAAO,GAAa,EAAE,CAAC;QAE7B,SAAS,IAAI;YACZ,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;;gBACZ,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC;QAED,SAAS,OAAO;YACf,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACpC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACxC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YACxC,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACzC,CAAC;QAED,SAAS,OAAO,CAAC,GAAW;YAC3B,KAAK,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;QACpC,CAAC;QAED,SAAS,KAAK;YACb,KAAK,CAAC,OAAO,CAAC,CAAC;QAChB,CAAC;QAED,SAAS,OAAO,CAAC,GAAU;YAC1B,OAAO,EAAE,CAAC;YACV,KAAK,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC,CAAC;QACb,CAAC;QAED,SAAS,MAAM,CAAC,CAAS;YACxB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,aAAa,IAAI,CAAC,CAAC,MAAM,CAAC;YAE1B,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;YACvD,MAAM,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAElD,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;gBACxB,iBAAiB;gBACjB,KAAK,CAAC,8CAA8C,CAAC,CAAC;gBACtD,IAAI,EAAE,CAAC;gBACP,OAAO;aACP;YAED,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAClC,OAAO,EACP,CAAC,EACD,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CACxB,CAAC;YACF,MAAM,UAAU,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,KAAK,CAAC,+BAA+B,EAAE,SAAS,CAAC,CAAC;YAClD,OAAO,CAAC;gBACP,UAAU;gBACV,QAAQ;aACR,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAExB,IAAI,EAAE,CAAC;IACR,CAAC,CAAC,CAAC;AACJ,CAAC;AAvED,qCAuEC"},"url":null},"file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/lib/index.js":{"lineLengths":[13,0,62,0,43,53,26,17,12,12,14,14,18,0,12,19,3,1,55,78,150,29,17,16,16,16,12,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,0,12,19,3,1,0,16,26,23,25,21,22,3,0,1,22,27,24,22,27,33,23,19,3,0,1,37,15,20,12,27,0,68,11,37,3,0,48,1,65,9,9,10,15,51,1,0,18,17,35,45,3,0,27,43,44,12,55,0,40,21,7,0,57,0,53,91,23,9,7,0,18,5,3,0,33,26,0,101,3,0,1,0,46,44,37,10,47,3,1,0,45,43,36,10,46,3,1,0,43,41,34,10,44,3,1,0,57,25,26,0,41,32,3,0,68,47,10,57,3,1,0,41,23,60,38,3,0,24,11,18,19,51,41,35,42,0,43,39,10,5,0,11,22,13,0,25,40,39,0,35,40,40,34,14,39,40,9,0,14,7,5,3,0,30,11,14,18,0,76,43,61,7,0,44,61,7,12,13,29,27,20,0,59,28,34,31,34,66,18,0,32,40,65,18,0,37,36,41,30,29,36,62,18,0,33,30,33,64,18,0,40,35,66,18,0,18,13,47,13,9,14,41,7,5,3,0,31,11,18,19,0,56,44,5,0,33,3,0,43,11,18,19,11,12,21,29,47,0,41,35,5,3,0,45,11,18,19,51,41,35,0,25,40,39,43,0,33,37,40,38,38,14,7,5,3,0,1,0,34,43,66,3,0,42,56,82,116,88,98,89,109,77,73,76,92,77,93,69,64,62,73,189,106,139,72,72,65,127,67,72,90,56,61,57,56,160,98,88,72,76,107,42,109,49,125,96,53,65,66,49,48,73,37,47,58,72,63,46,46,61,35,93,57,78,68,62,98,68,56,101,69,59,48,87,41,69,115,84,94,95,101,55,56,52,55,56,130,111,84,91,91,36,71,60,167,144,81,193,125,125,123,100,103,86,97,151,128,58,177,181,183,69,69,141,75,58,59,61,104,80,78,39,167,66,71,175,179,181,68,127,65,84,48,92,99,89,88,53,59,76,44,121,69,84,106,81,75,85,99,140,47,57,54,49,65,82,76,81,27,58,85,90,37,0,57,3,72,38,5,3,20,1,0,59,23,47,43,11,65,36,7,5,34,1,42,31,12,303,15,3,0,14,9,15,12,17,36,11,16,28,3,0,23,9,12,17,49,102,0,37,39,0,52,32,0,32,39,19,13,37,16,9,7,5,0,24,11,10,9,16,3,0,54,49,107,38,10,9,23,3,0,33,41,37,0,37,57,17,12,16,5,3,0,1,0,54,22,12,9,6,21,0,9,41,18,0,48,18,14,11,6,16,3,0,29,15,0,9,29,23,20,5,0,49,46,16,3,0,30,25,50,47,16,3,0,29,47,3,0,29,42,3,0,30,42,3,0,22,41,3,0,30,42,3,0,30,45,72,92,62,48,111,61,92,3,0,31,38,28,3,0,26,54,40,12,35,5,3,0,40,31,3,0,26,30,0,231,3,0,33,40,82,54,27,3,0,94,106,0,32,58,35,5,0,32,3,0,22,42,5,61,20,7,5,60,3,0,47,46,16,19,21,36,16,3,0,23,5,61,41,7,5,45,3,0,26,5,61,44,7,5,21,3,0,29,49,30,22,16,3,0,62,61,58,3,0,104,36,30,118,41,25,26,0,40,28,5,0,30,39,3,0,31,59,5,61,28,7,5,45,24,3,0,38,66,5,61,28,7,5,45,34,24,3,0,72,92,0,15,29,53,29,5,0,16,3,0,81,101,0,15,25,29,5,0,16,3,0,33,54,54,5,0,47,3,0,37,54,43,18,5,0,43,3,0,51,53,67,29,65,12,60,5,3,0,40,47,0,40,37,38,0,47,29,0,99,7,0,28,25,5,0,16,3,0,31,43,13,5,0,38,3,0,21,28,0,24,34,29,14,0,36,101,45,54,33,9,0,14,5,0,16,3,0,60,80,0,36,95,43,7,0,23,49,32,57,7,84,28,5,0,16,3,0,34,42,29,5,0,48,3,0,25,43,3,0,26,76,3,0,24,69,3,0,3,0,18,37,24,32,23,41,3,0,1,15,29,33,34,48,2,1,45,1,0,24,24,20,22,20,21,25,33,24,26,29,29,35,25,27,25,26,24,23,32,40,40,52,32,36,32,34,56,5,32,5,3,0,1,29,0,44,25,43,30,15,1,0,35,28,15,9,5,1,0,26,22,23,23,28,28,25,0,42,80,0,21,25,83,106,106,91,56,26,1,0,48,84,0,21,41,25,85,108,108,93,58,26,1,0,12,30,15,14,5,35,15,14,5,34,15,14,5,29,33,28,15,14,5,32,15,14,5,33,15,14,5,28,14,5,31,28,15,14,5,27,27,14,5,26,14,5,27,14,5,34,14,5,24,30,14,5,33,28,14,5,36,32,14,5,31,14,5,35,15,14,5,37,14,5,41,15,14,5,23,26,14,5,45,24,15,12,5,29,15,12,5,34,15,12,5,32,15,12,5,35,15,12,5,32,11,12,14,5,26,15,11,14,5,27,15,11,14,5,33,42,34,35,33,34,34,44,34,34,42,40,31,15,13,11,14,5,28,14,14,5,26,13,5,30,31,15,14,26,5,28,15,12,5,44,15,12,5,33,32,14,5,33,39,39,38,14,5,32,14,5,37,40,14,5,27,36,14,5,35,34,15,11,14,5,29,29,33,31,30,15,14,5,32,14,5,34,14,5,34,14,5,38,14,5,35,36,14,5,32,14,5,32,14,5,34,14,5,36,15,11,14,5,32,15,11,14,5,36,15,11,14,5,28,11,14,5,30,10,5,34,10,5,32,14,5,40,14,5,38,14,5,38,14,5,36,14,5,34,14,5,34,14,5,36,14,5,32,14,5,36,14,5,34,14,5,40,14,5,38,14,5,42,14,5,40,14,5,42,14,5,40,14,5,48,14,5,46,14,5,38,14,5,32,14,5,40,14,5,38,14,5,42,14,5,38,14,5,44,14,5,40,14,5,44,14,5,42,14,5,36,14,5,40,14,5,46,14,5,46,14,5,36,14,5,40,14,5,29,14,5,33,14,5,27,14,5,33,14,5,35,14,5,33,14,5,37,14,5,26,34,35,20,5,43,20,5,38,34,20,4,2,35,37,1,51,21,1,44,37,1,44,37,1,44,33,1,41,33,1,35,36,1,52,38,1,29,36,1,32,36,1,33,36,1,32,22,1,31,30,1,39,38,1,43,38,1,32,28,1,41,28,1,41,22,1,33,36,1,34,27,1,27,33,1,1,44,18,4,0,105,30,4,0,45,57,20,12,35,5,4,0,46,45,4,1,0,4306,2652,85,106,62,1987,978,0,35,20,0,60,18,33,22,33,3,0,15,1,0,34,36,30,36,31,0,23,83,3,0,57,1,33,36,29,30,30,36,31,0,23,78,3,0,103,1,0,23,329,109,35,2,48,61,69,41,57,1,47,76,1,45,46,1,51,84,1,26,28,1,0,41,39,1,491,34,39,1,0,32,34,35,32,39,32,39,32,39,36,67,39,38,38,42,43,39,40,42,48,49,50,92,66,58,68,68,48,96,62,46,63,67,64,56,40,40,40,90,90,90,64,64,30,0,13,22,25,29,31,23,3,0,1,20,32,25,38,43,23,29,3,0,20,62,3,0,20,60,3,0,26,67,3,0,17,60,3,0,41,47,71,3,0,23,52,13,13,29,0,39,20,7,0,46,21,7,5,3,0,28,63,3,0,29,64,3,0,22,28,3,0,16,50,3,0,10,26,3,0,37,93,3,0,39,36,0,80,68,0,46,34,14,32,7,0,45,45,7,46,61,35,70,28,45,43,7,5,0,55,41,5,3,0,35,55,41,5,3,0,60,61,60,5,3,0,49,55,0,43,89,5,0,44,103,5,0,194,3,0,24,11,10,11,45,0,113,48,5,3,0,18,55,3,0,26,52,13,13,29,0,30,21,7,5,3,0,27,52,13,13,29,0,72,21,7,5,3,0,1,0,31,24,19,38,3,0,1,0,45,22,32,3,0,39,38,0,51,68,43,39,13,5,0,36,3,0,49,61,0,51,105,5,0,17,3,0,24,60,33,5,3,0,1,0,13,17,25,26,28,27,25,21,31,24,40,40,24,36,32,34,33,25,34,25,6,27,44,21,31,23,27,17,20,22,19,17,30,32,26,24,33,35,29,34,26,3,0,8,15,15,14,15,6,102,29,34,71,3,0,17,65,3,0,21,30,35,0,60,26,26,0,46,26,7,0,23,5,0,17,3,0,1,0,39,34,2,71,43,48,24,2,43,47,103,87,130,13,22,27,29,29,25,64,3,0,1,37,31,12,30,21,29,29,23,31,29,3,0,20,49,28,30,3,0,10,31,0,30,44,5,0,43,47,49,53,21,3,0,13,27,18,18,12,19,5,3,0,15,36,3,0,31,12,21,18,23,25,21,28,35,26,6,3,0,15,27,48,28,21,29,28,21,16,3,0,20,52,3,0,28,35,76,3,0,23,56,3,0,23,40,0,64,47,0,40,62,7,5,0,14,3,0,21,31,0,17,82,38,5,3,0,16,61,3,0,15,21,38,74,0,40,28,13,5,0,63,3,0,22,17,63,33,52,79,29,37,0,72,27,50,5,0,33,21,27,46,12,19,65,6,53,19,3,0,30,33,17,63,64,0,39,64,51,7,5,0,33,31,59,21,26,12,12,10,65,6,53,19,3,0,15,38,24,0,48,55,0,19,16,17,15,27,16,0,16,65,29,11,0,16,18,18,27,31,48,16,0,16,62,20,15,56,0,44,43,73,17,0,22,15,0,20,15,56,0,44,43,73,17,0,22,15,0,20,25,11,0,16,0,16,33,29,51,39,0,156,54,0,42,41,71,15,20,25,13,51,39,0,138,54,0,42,41,71,15,20,25,13,18,23,11,0,7,5,0,30,33,33,26,12,17,26,27,28,8,54,5,3,0,26,36,37,27,27,0,28,51,35,5,3,0,22,27,25,3,0,26,63,13,5,0,39,46,0,35,79,5,0,74,42,0,76,176,7,0,26,0,25,28,14,28,7,41,23,50,29,23,46,12,27,5,3,0,19,59,0,35,28,13,5,0,74,26,27,12,23,27,5,3,0,21,59,0,22,27,12,27,5,3,0,27,62,55,32,33,24,0,62,49,5,0,62,32,16,3,0,31,37,18,57,0,37,14,55,16,5,0,44,14,35,5,0,31,3,0,28,59,0,24,61,29,14,49,7,0,13,5,0,23,24,29,15,7,0,61,77,100,9,0,28,28,15,7,0,60,77,99,9,0,28,28,15,7,5,0,22,27,13,5,0,45,3,0,21,59,0,44,27,12,27,5,3,0,28,59,0,24,27,13,5,0,22,27,12,27,5,3,0,18,11,9,19,48,0,22,50,29,15,7,0,27,13,5,0,22,27,13,5,0,25,3,0,18,11,9,19,48,0,22,65,0,53,36,15,7,0,30,13,5,0,22,27,13,5,0,25,3,0,27,59,0,22,82,13,5,0,37,26,27,13,5,0,44,3,0,24,59,60,0,22,25,29,14,29,7,62,26,27,12,23,27,5,3,0,26,19,14,29,15,0,14,25,29,15,0,14,25,29,15,0,14,25,29,15,0,14,25,29,15,0,14,100,79,103,11,0,30,30,16,27,30,9,0,15,0,14,25,28,15,0,15,100,79,104,11,0,30,30,16,27,30,9,0,15,0,15,25,28,15,0,14,97,31,16,27,31,9,0,15,0,14,34,15,0,14,33,15,0,14,9,65,0,44,37,19,11,0,44,36,19,11,0,43,36,19,11,9,0,14,14,14,14,14,14,14,14,14,31,15,0,14,14,30,15,0,14,31,15,0,14,14,41,15,0,15,14,38,15,0,14,31,15,0,14,14,38,15,0,14,28,15,0,14,28,15,0,14,14,37,15,0,15,29,15,0,14,25,29,15,0,14,36,15,0,14,24,15,0,14,38,30,17,9,0,5,0,105,3,0,24,72,27,32,3,0,16,39,25,9,9,19,0,20,31,66,7,0,44,0,26,66,7,0,20,24,14,24,25,42,26,43,16,9,0,28,7,5,0,49,10,18,0,31,42,43,0,38,34,66,9,53,64,14,14,7,0,12,19,5,0,25,27,23,17,7,3,0,59,33,129,222,24,18,0,67,57,14,0,24,63,63,0,51,79,120,79,9,0,33,85,9,0,25,17,7,0,23,29,30,29,34,24,14,23,7,0,25,53,18,82,30,18,25,16,16,9,7,0,23,34,5,0,95,18,5,0,17,3,0,26,33,25,24,36,0,22,74,5,0,55,0,23,23,22,30,60,5,0,65,71,5,0,19,79,33,13,5,0,31,3,0,29,33,24,25,26,28,24,0,54,53,5,0,94,0,25,62,75,0,31,51,0,32,85,9,7,0,56,5,0,53,0,34,23,23,21,51,5,0,52,53,0,39,25,7,0,38,66,7,0,21,25,51,5,0,23,38,62,7,0,23,22,5,0,23,51,0,42,56,7,0,23,23,5,0,65,71,5,0,78,0,19,33,13,5,0,20,33,13,5,0,61,31,3,0,33,53,13,0,21,39,110,23,0,45,29,62,16,22,9,7,12,56,5,0,16,3,0,21,17,38,0,14,42,77,7,0,55,30,0,22,60,43,36,46,25,29,46,33,77,14,25,7,5,0,58,31,3,0,30,25,43,5,0,21,29,3,0,23,17,36,32,21,0,14,42,83,7,0,55,0,22,25,60,59,15,7,0,75,28,60,59,15,7,0,22,60,51,0,31,33,16,25,9,0,36,33,60,25,0,21,18,63,31,13,0,18,24,18,0,18,43,18,9,0,29,46,36,14,25,7,5,3,0,40,65,31,12,48,5,3,0,31,39,55,21,0,17,15,20,0,15,20,0,15,9,66,66,9,0,15,9,58,67,9,0,15,20,0,14,20,0,15,24,0,15,20,0,14,59,27,9,0,14,46,29,0,16,16,18,0,14,14,25,22,16,93,9,0,14,35,45,82,34,44,0,28,45,42,11,0,48,61,0,63,29,26,20,86,13,11,0,44,9,0,39,5,3,0,46,35,53,0,21,27,65,14,37,7,5,0,13,3,0,24,35,18,33,36,0,34,52,5,0,42,53,0,33,47,29,38,61,40,96,0,62,73,42,19,9,0,25,45,0,27,38,75,11,0,44,9,0,36,14,14,7,5,0,63,3,0,23,43,38,0,29,51,12,34,5,3,0,25,11,10,19,0,57,99,5,3,0,28,0,1,0,18,17,34,35,43,3,0,1,25,22,20,43,23,3,0,13,45,3,0,11,38,3,0,10,43,35,0,80,20,55,55,9,14,75,7,5,3,0,46,11,19,20,27,23,43,0,52,60,0,21,63,66,63,66,67,51,30,45,7,5,0,20,68,5,0,27,39,3,0,29,19,0,36,52,5,0,21,54,12,73,5,3,0,1,0,22,42,47,32,0,23,35,23,21,3,0,36,111,3,0,37,47,3,0,1,0,53,21,16,28,3,0,41,35,3,0,30,28,3,0,27,34,3,0,1,0,30,22,41,23,3,0,16,27,3,0,10,21,3,0,50,11,11,13,29,25,0,54,51,52,14,15,7,0,25,5,0,30,3,0,53,11,11,13,42,0,50,32,56,50,12,13,5,3,0,50,11,11,13,29,25,0,52,64,52,7,0,25,5,3,0,23,11,11,13,49,63,51,32,31,27,0,54,41,27,7,7,3,0,1,41,52,1,30,68,1,31,73,1,31,31,1,0,21,27,27,28,24,34,17,21,3,0,16,28,3,0,10,22,3,0,18,47,3,0,18,51,3,0,18,51,3,0,19,52,3,0,15,48,3,0,1,46,71,1,0,36,28,22,48,21,3,0,23,64,3,0,41,44,0,56,52,73,5,0,17,3,0,31,39,49,3,0,24,35,18,18,5,0,17,3,0,37,68,3,0,24,76,3,0,27,85,3,0,27,57,54,3,0,22,53,3,0,30,66,70,3,0,21,49,3,0,48,51,41,37,38,25,9,5,3,0,35,33,34,32,6,37,23,37,38,81,8,5,0,74,3,0,44,35,34,17,14,20,7,7,3,0,35,40,70,69,107,5,0,16,3,0,39,54,70,68,151,5,3,0,47,25,16,6,0,9,40,32,26,9,0,62,37,30,57,16,15,58,24,25,19,10,7,0,14,13,20,22,23,23,8,21,35,28,0,41,16,21,16,23,25,19,10,7,0,34,16,33,22,24,24,19,10,7,0,18,5,3,0,56,43,11,22,18,24,28,78,0,20,23,27,33,79,7,0,29,62,7,0,36,44,7,5,3,0,27,55,3,0,23,39,3,0,26,24,3,0,34,127,3,0,25,94,3,0,26,42,3,0,24,40,3,0,69,40,27,60,41,38,29,32,48,72,40,54,42,67,52,77,18,36,56,34,28,36,38,48,6,3,0,24,27,0,24,32,5,0,36,37,3,0,1,24,17,30,26,33,3,0,1,0,12,33,19,21,17,39,71,79,3,0,1,0,37,1,39,31,35,0,60,26,0,95,33,7,5,0,19,4,1,0,33,31,1,0,32,9,9,10,8,8,10,10,8,11,46,21,23,19,19,23,23,21,0,31,44,3,0,16,1,35,9,9,10,8,8,10,9,11,0,31,34,3,0,46,21,23,19,19,23,0,31,26,10,25,3,0,28,16,1,36,15,65,3,0,25,36,3,0,25,56,3,0,26,90,3,0,38,0,21,19,23,49,62,16,3,0,45,23,30,51,3,0,90,19,26,49,3,0,50,78,3,0,1,0,178,39,110,199,59,81,102,81,137,127,207,126,145,123,111,156,148,108,155,72,208,100,101,67,129,133,90,79,102,72,60,89,132,72,85,75,141,92,108,57,89,94,91,83,105,167,90,107,55,35,0,38,248,1,0,34,68,1,0,37,57,1,0,27,30,28,22,31,2,0,32,19,19,0,41,59,3,0,24,1,0,51,52,24,19,32,3,0,21,28,3,0,22,77,3,0,22,51,3,0,26,53,42,31,7,5,0,40,3,0,23,40,60,0,55,33,43,35,14,50,7,5,0,37,3,0,33,40,29,27,38,34,16,3,0,24,34,39,16,31,0,50,75,5,0,23,42,22,56,12,56,5,3,0,42,40,29,20,20,25,0,25,36,44,12,34,36,0,27,46,7,5,0,29,3,0,31,16,43,49,3,0,34,16,48,38,43,0,25,73,12,37,5,0,20,51,33,29,30,20,88,87,73,30,21,78,52,3,0,40,25,46,32,49,32,49,41,27,56,14,27,78,9,0,49,7,40,50,40,51,40,50,32,72,12,30,5,3,0,34,16,60,66,21,52,3,0,32,34,0,26,37,12,39,5,0,50,36,19,0,28,38,0,27,20,0,57,94,9,0,35,14,83,57,7,0,26,5,0,22,19,48,20,32,33,40,34,79,9,0,20,63,30,82,9,0,28,79,9,0,26,31,7,7,35,50,3,0,57,20,0,23,45,67,14,48,25,7,0,26,63,12,114,39,52,103,7,0,89,67,29,65,129,38,0,53,42,31,33,9,0,42,20,7,5,0,28,3,0,39,16,31,57,21,57,3,0,35,16,34,35,16,3,0,36,16,41,36,16,3,0,35,16,37,53,3,0,48,65,96,0,25,69,12,33,5,0,22,25,21,0,23,10,60,41,5,0,33,18,0,10,59,29,5,0,33,18,0,10,63,29,5,0,42,27,24,25,26,25,7,3,0,31,34,54,0,25,71,12,33,5,0,53,3,0,28,37,57,3,0,28,23,76,5,3,0,50,41,112,3,0,55,76,41,3,0,28,62,70,0,25,69,12,33,5,0,51,21,46,3,0,38,31,61,70,0,25,69,12,33,5,0,26,0,25,57,5,0,25,0,19,56,5,0,21,47,3,0,50,39,34,46,60,27,29,38,0,25,19,42,12,27,66,7,5,0,50,3,0,39,40,34,21,29,0,44,18,12,24,5,0,32,0,8,73,38,0,34,31,7,0,28,24,7,30,0,20,34,61,3,0,41,34,40,21,29,20,64,42,0,29,45,0,28,24,7,5,0,58,20,34,63,3,0,50,34,40,21,29,20,0,29,68,0,28,24,7,5,0,20,34,63,3,0,28,34,31,22,0,23,10,60,29,5,0,42,25,24,25,24,25,7,60,3,0,32,98,3,0,56,27,0,39,50,49,12,21,38,5,0,19,49,29,54,3,0,51,27,48,19,19,0,43,25,28,99,12,26,0,25,29,7,0,51,5,0,59,3,0,38,21,21,31,21,0,25,69,5,0,20,0,25,56,28,0,28,24,7,5,0,48,63,0,28,24,7,5,0,23,57,5,0,20,54,59,3,0,51,39,27,62,59,3,0,23,16,15,16,15,16,6,40,29,39,34,30,28,33,17,14,24,0,38,21,19,19,12,21,19,20,5,0,28,0,35,27,28,30,36,0,49,43,0,61,22,40,30,9,7,0,50,43,0,61,22,26,9,7,0,48,0,24,33,38,9,0,26,25,44,11,0,93,16,93,9,52,33,38,9,0,23,42,9,0,92,14,26,0,61,45,0,59,36,24,11,9,0,166,0,37,25,49,16,51,9,7,0,37,0,61,79,7,5,0,26,0,22,34,5,0,67,34,15,3,0,102,23,96,0,27,27,81,35,77,9,0,23,65,9,0,20,7,0,25,77,7,0,31,36,7,0,21,62,7,0,43,63,12,51,29,38,23,27,0,45,27,0,33,38,9,0,23,42,9,0,101,0,47,49,9,0,81,85,9,14,47,28,0,27,26,9,0,53,33,7,0,31,57,5,3,0,41,55,33,80,0,30,147,5,0,32,36,56,14,56,7,5,0,57,62,5,3,0,29,77,24,5,3,0,60,44,47,62,0,26,57,33,58,63,5,0,16,3,0,48,54,31,76,0,25,71,5,0,58,3,0,25,34,20,48,57,3,0,24,34,20,19,0,60,44,31,22,5,0,19,56,3,0,37,20,25,30,34,32,42,0,43,29,64,7,0,42,0,25,24,0,21,71,9,7,0,55,12,44,5,0,21,29,41,54,3,0,44,62,21,26,31,54,3,0,44,20,21,0,25,52,24,0,28,24,7,5,0,48,58,0,28,24,7,5,0,23,52,5,0,12,13,11,11,6,3,0,59,22,17,58,0,18,21,62,0,19,60,0,19,60,0,20,61,0,20,61,0,20,61,0,14,41,65,5,3,0,26,38,41,34,12,13,30,64,0,30,13,41,29,28,28,28,28,11,0,13,41,29,27,28,28,29,11,0,13,46,41,62,20,0,14,71,24,49,33,29,30,24,24,47,63,0,14,20,0,49,69,48,57,18,33,11,9,0,28,48,38,64,0,117,28,24,18,25,11,9,0,19,98,16,51,9,0,33,29,30,24,24,47,35,63,0,15,82,0,14,14,36,20,69,0,14,39,22,0,32,99,11,0,32,99,11,0,86,9,0,32,0,15,82,0,15,82,0,14,20,59,0,14,20,66,0,14,20,59,0,14,20,61,0,14,42,0,14,46,56,22,53,56,39,49,11,0,98,9,0,5,0,28,3,0,26,38,41,43,42,0,77,56,36,72,21,0,39,32,20,60,14,31,46,23,0,40,35,68,16,60,9,7,5,0,16,3,0,25,34,0,23,55,61,12,41,5,3,0,40,45,0,57,66,69,23,23,45,33,61,5,0,17,3,0,31,34,17,59,24,0,26,65,5,0,96,3,0,24,34,17,50,24,0,26,56,5,0,89,3,0,19,40,29,43,34,16,3,0,42,62,40,43,42,65,12,34,5,3,0,29,34,58,51,3,0,62,105,0,25,60,35,5,0,17,3,0,29,57,97,27,3,0,23,24,0,25,34,0,37,31,14,32,7,0,18,44,5,0,20,3,0,66,30,110,5,0,58,3,0,60,25,40,94,101,5,0,59,3,0,37,54,41,0,55,38,20,45,7,67,36,18,49,5,0,57,0,72,29,5,0,16,3,0,40,37,36,121,45,9,54,40,47,42,47,44,55,9,7,5,0,54,3,0,34,11,10,19,0,94,37,5,0,48,3,0,30,11,10,19,0,94,36,5,0,44,3,0,34,60,36,18,49,5,0,48,3,0,67,37,0,44,46,0,77,61,20,7,5,0,20,37,51,54,9,17,12,45,68,0,39,47,0,31,27,41,0,50,43,9,0,10,21,16,50,68,7,0,39,70,7,0,41,27,39,41,10,21,16,50,7,5,0,51,45,20,21,33,116,58,3,0,35,64,54,35,47,12,17,12,6,3,0,50,25,22,0,32,31,0,52,54,43,16,28,9,0,30,57,36,35,7,5,0,26,63,26,5,0,97,3,0,31,20,0,119,51,41,22,3,0,49,15,0,74,66,23,49,12,23,5,0,18,3,0,44,58,0,23,27,34,5,0,25,64,37,67,65,5,0,16,3,0,33,250,13,5,0,40,3,0,21,41,0,89,51,5,0,16,3,0,32,33,31,47,18,0,26,59,35,20,14,56,7,40,31,47,18,62,40,31,47,18,54,67,32,47,18,60,12,48,5,3,0,23,55,0,65,31,18,18,18,5,0,17,3,0,44,33,72,0,53,27,5,0,24,3,0,47,54,0,25,69,5,3,0,46,33,0,33,65,15,7,0,28,5,0,53,0,25,126,56,32,80,7,5,3,0,20,59,3,0,18,35,33,0,55,76,5,0,36,3,0,26,59,0,39,33,67,53,50,24,36,7,0,34,45,26,33,12,42,5,3,0,33,45,59,12,49,5,3,0,37,45,71,12,45,5,3,0,55,47,31,0,73,53,7,5,0,69,3,0,51,47,22,0,31,0,174,76,7,5,0,20,3,0,69,89,0,61,43,5,0,16,3,0,28,45,44,5,3,0,28,25,59,5,0,42,3,0,35,25,59,5,0,49,3,0,19,51,3,0,21,53,3,0,34,67,3,0,94,26,45,5,0,27,0,25,71,5,0,101,0,41,35,0,61,74,7,92,41,0,61,74,7,5,3,0,67,26,45,5,0,27,0,25,71,5,0,74,3,0,25,32,0,44,76,5,0,33,18,47,0,10,38,59,0,29,75,16,37,9,0,67,29,5,3,0,35,42,61,0,28,30,0,61,70,43,70,7,5,3,0,41,45,3,0,113,24,43,5,0,25,23,0,40,64,45,5,0,120,0,25,59,5,3,0,39,23,40,62,7,0,36,70,7,0,28,5,0,25,60,41,70,5,0,52,61,5,0,33,17,3,0,47,67,0,115,78,5,0,16,3,0,34,35,50,5,0,49,3,0,72,120,70,59,3,0,42,30,20,0,25,22,40,20,5,0,15,34,13,12,13,0,43,34,7,0,68,20,31,7,5,0,56,3,0,90,42,33,0,43,39,35,48,37,7,5,0,26,0,69,50,0,87,38,49,52,14,40,36,49,7,12,86,56,49,14,31,99,9,0,40,36,7,0,35,49,14,25,62,7,5,0,63,0,54,82,5,0,54,80,5,0,69,80,5,0,70,57,3,0,22,30,14,42,0,14,40,5,3,0,45,27,0,61,69,5,0,52,3,0,26,33,0,25,62,37,5,3,0,49,25,66,43,55,60,5,0,63,3,0,27,59,3,0,57,13,0,21,12,0,71,33,100,38,13,15,21,57,0,79,22,7,5,0,63,23,0,42,25,44,34,0,66,93,85,66,24,11,116,73,61,45,62,31,16,33,0,108,45,33,105,11,0,28,9,0,37,7,0,48,35,24,7,0,28,37,31,7,0,65,42,91,5,0,71,3,0,20,25,42,68,45,42,96,62,57,47,24,9,37,54,107,5,0,34,3,0,28,60,3,0,44,74,27,12,53,5,3,0,55,93,13,5,0,50,54,74,7,5,0,43,3,0,50,121,3,0,54,111,18,56,25,68,53,87,39,121,60,106,59,0,23,37,26,7,0,24,38,27,7,0,40,5,0,68,3,0,69,55,48,0,20,35,20,7,0,18,56,25,70,22,68,27,51,71,56,25,42,81,24,70,70,83,9,0,24,56,27,7,5,0,83,3,0,27,21,0,52,92,5,0,31,34,3,0,57,54,35,39,60,3,0,31,59,0,66,40,26,23,13,5,0,38,3,0,28,59,0,39,26,13,5,0,35,3,0,32,56,0,36,69,5,0,20,3,0,22,67,38,60,7,0,38,47,39,13,5,0,36,65,0,23,80,7,0,31,13,5,0,36,3,0,21,11,9,19,38,0,86,34,5,0,71,75,0,35,43,5,0,117,44,5,0,35,39,5,0,17,3,0,30,57,0,21,74,5,3,0,49,13,14,6,86,3,0,39,13,14,6,73,88,3,0,41,13,14,6,78,3,0,46,12,6,71,3,0,41,13,16,6,163,3,0,46,13,17,14,6,23,0,27,21,20,20,69,14,0,20,68,14,0,14,69,5,0,72,3,0,48,13,14,6,85,3,0,59,12,6,84,3,0,24,38,0,60,0,30,15,9,69,0,28,20,29,33,28,14,11,0,18,28,25,12,9,0,15,9,68,0,28,20,29,33,28,14,11,0,18,28,25,12,9,0,14,14,9,67,0,28,20,30,33,28,14,11,0,18,28,25,12,9,0,14,16,26,23,10,5,3,0,23,33,42,61,19,9,6,12,9,10,6,3,0,65,11,18,16,0,32,13,5,0,40,63,5,3,0,19,13,16,6,32,21,25,24,24,26,6,34,0,28,25,33,14,7,0,42,13,11,12,35,33,0,30,17,7,0,38,55,19,20,11,7,0,38,57,19,20,11,7,0,32,23,17,21,18,8,25,0,26,23,11,81,41,90,18,11,0,22,11,80,41,88,18,11,0,22,11,80,41,88,18,11,0,23,11,80,11,0,20,11,35,29,81,22,0,28,80,22,0,22,98,13,11,7,0,27,24,7,5,0,12,14,23,6,3,0,63,12,6,42,30,47,32,69,48,79,18,11,7,0,30,12,46,79,18,11,7,0,32,5,3,0,29,12,6,33,48,71,19,28,11,7,0,13,13,21,18,0,98,65,19,29,11,7,0,19,5,0,16,3,0,22,13,11,6,57,14,7,19,11,14,23,30,15,18,7,47,0,27,21,33,46,23,56,0,20,33,45,23,55,0,20,33,100,18,11,23,55,0,20,48,23,55,0,14,9,31,30,27,59,12,0,36,57,55,55,63,0,67,27,45,104,22,15,27,59,72,60,75,25,42,17,13,0,50,27,60,72,60,74,25,42,17,13,0,49,27,59,18,65,22,15,27,11,9,5,3,0,34,38,17,53,24,23,7,52,3,0,25,39,0,45,56,50,5,0,17,3,0,39,71,3,0,3,0,18,17,11,17,10,10,17,18,17,18,19,16,19,17,16,17,17,18,16,16,16,17,16,19,17,17,18,18,17,19,18,17,17,18,19,19,19,19,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,18,19,19,19,18,17,19,18,18,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,19,19,19,19,18,17,19,18,17,18,18,19,19,17,17,17,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,18,16,20,16,16,16,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,19,18,16,20,16,16,16,18,21,18,16,17,17,19,17,16,16,16,18,18,18,18,18,18,18,18,19,19,17,19,19,18,18,19,19,18,18,17,18,19,17,18,20,17,17,17,17,17,18,17,17,17,17,17,19,17,18,18,18,17,18,15,17,16,18,19,18,17,18,16,16,15,16,16,16,19,16,17,18,15,18,15,15,16,16,17,17,17,18,19,17,17,18,18,19,19,17,17,16,19,18,19,17,2,0,35,31,38,83,79,78,139,88,55,130,34,0,29,103,1,0,38,40,23,3,0,44,58,3,0,46,91,3,0,62,1,0,51,18,17,36,0,14,42,77,7,0,55,0,19,16,17,52,61,31,43,13,0,46,11,0,62,44,0,16,62,38,38,16,0,16,17,0,16,30,64,45,40,18,29,11,0,7,5,3,0,33,53,12,21,0,68,23,42,12,36,5,0,25,42,15,3,0,24,17,38,0,14,42,77,7,0,55,30,0,22,60,36,36,33,60,42,36,14,25,7,5,0,58,38,3,0,19,17,18,15,40,38,0,58,40,0,23,29,31,32,0,39,63,13,18,32,0,43,63,13,11,16,33,9,0,14,7,0,16,5,0,18,32,17,5,0,18,3,0,17,11,33,0,8,51,48,0,74,3,0,24,34,0,26,35,49,50,12,24,5,0,16,50,3,0,28,38,41,43,35,54,26,42,54,3,0,25,38,41,45,0,44,18,5,0,26,59,28,51,61,5,0,16,3,0,28,13,0,30,13,32,37,20,68,0,60,61,9,0,20,0,15,15,36,0,14,74,5,3,0,29,83,96,3,0,29,16,45,34,19,51,3,0,54,24,55,12,48,35,5,0,37,19,59,3,0,23,34,0,24,35,18,22,53,36,21,57,5,0,46,69,49,3,0,48,54,0,26,23,57,5,0,43,54,3,0,41,26,0,49,48,5,0,33,36,21,54,3,0,48,54,0,26,23,57,5,0,43,21,54,3,0,41,54,24,77,30,0,38,26,34,19,40,43,24,0,31,81,29,13,0,70,18,0,19,48,18,0,17,13,44,43,26,0,35,62,22,84,15,0,20,13,0,18,36,9,7,0,70,78,77,119,78,100,121,9,7,5,0,37,44,44,12,43,43,5,0,29,0,25,81,5,0,115,3,0,21,38,41,16,54,3,0,26,11,13,19,45,3,0,38,26,60,33,36,80,29,36,12,54,5,3,0,15,41,53,3,0,26,38,0,35,33,5,0,63,36,34,7,0,24,25,37,7,0,69,40,7,5,0,107,23,35,5,0,40,3,0,27,11,14,10,19,0,42,42,44,30,33,30,46,0,76,22,85,14,38,45,7,12,71,5,3,0,3,0,37,24,19,27,27,32,29,40,3,0,1,0,51,22,38,3,0,39,38,0,50,43,41,13,5,0,36,0,39,45,70,45,7,0,28,5,0,64,75,64,3,0,49,32,45,67,52,36,7,0,18,5,0,68,36,49,14,21,7,5,0,64,18,5,0,51,3,0,24,45,11,10,11,0,88,33,5,3,0,1,0,21,18,46,3,0,11,1,0,20,11,35,3,1,0,37,110,108,99,78,77,79,94,57,87,96,73,49,56,60,62,100,73,76,85,99,83,88,81,79,69,85,86,95,98,127,86,134,102,85,99,114,139,125,95,84,91,81,145,125,142,142,103,101,69,79,87,104,128,41,0,37,18,15,28,0,19,32,0,18,31,0,17,30,0,18,31,0,18,31,0,18,31,0,18,31,0,21,34,0,19,32,0,12,23,3,1,0,39,85,1,0,58,21,34,3,0,20,46,3,0,30,164,3,0,34,16,43,3,0,68,46,23,5,0,38,0,52,76,25,7,0,74,24,7,5,0,21,3,0,115,60,51,71,7,6,0,57,87,68,7,6,0,14,40,156,27,0,41,37,72,16,65,63,65,44,9,14,61,69,16,65,65,67,67,66,65,9,0,34,7,0,82,54,7,5,3,0,28,19,25,25,29,0,35,29,0,31,29,0,39,30,5,0,35,3,0,35,22,0,44,34,5,0,18,3,0,65,99,3,0,86,22,30,0,14,42,14,7,0,28,37,0,28,25,7,0,27,0,25,51,17,7,0,42,14,7,0,26,24,7,0,23,5,0,30,51,5,0,18,3,0,90,26,20,23,14,24,7,5,0,86,0,18,21,12,22,5,0,18,3,0,23,34,20,20,0,27,75,5,0,41,20,0,23,52,5,0,25,56,5,0,49,3,0,41,40,0,26,48,25,60,56,5,0,18,3,0,26,34,50,0,58,56,5,0,52,3,0,33,16,43,29,60,25,52,3,0,25,34,16,47,3,0,22,34,20,0,25,47,12,51,5,0,48,3,0,26,34,48,50,47,52,3,0,30,25,42,5,3,0,27,34,0,44,18,12,24,5,0,33,15,6,145,0,35,59,5,0,43,70,5,0,63,3,0,35,39,18,41,5,0,16,3,0,43,51,63,20,65,0,30,88,41,88,5,3,0,36,57,147,92,7,0,21,7,3,0,32,52,22,5,3,0,38,35,38,39,3,0,37,16,0,45,18,28,5,0,17,3,0,34,96,23,5,0,19,38,53,30,19,27,49,41,38,53,3,0,52,43,25,0,43,21,68,7,0,29,0,42,77,7,0,39,40,0,34,43,67,0,55,83,11,9,41,45,67,16,54,0,49,83,11,0,80,87,11,0,54,83,11,9,0,36,91,9,14,31,7,0,58,12,31,45,51,47,40,62,5,3,0,23,34,0,43,77,5,0,25,34,18,0,45,84,14,52,66,7,5,0,165,52,0,14,17,5,0,33,0,150,32,35,5,0,72,3,0,24,34,51,50,3,0,30,19,87,19,19,3,0,27,16,0,23,36,5,0,33,18,5,0,25,19,5,0,16,0,33,19,5,0,16,26,3,0,32,34,48,53,52,3,0,23,34,19,0,25,39,18,33,41,27,5,0,19,59,71,19,0,25,39,18,22,30,27,5,0,48,21,19,49,3,0,22,34,125,36,31,46,27,0,11,12,22,0,146,75,7,0,134,0,34,49,32,7,0,54,100,0,42,81,7,7,48,3,0,29,11,22,14,19,30,34,34,33,0,18,53,38,0,107,42,14,65,33,7,0,51,64,26,58,45,65,5,0,15,60,37,53,5,0,16,3,0,30,34,20,45,20,56,3,0,52,34,0,39,33,32,18,5,0,35,39,3,0,28,34,0,27,32,17,17,17,16,16,38,0,16,34,7,9,0,50,3,0,32,34,45,50,3,0,31,53,45,3,0,40,51,0,66,56,12,25,5,3,0,25,30,15,15,15,14,14,45,0,14,39,40,45,0,65,36,11,0,48,56,9,0,14,0,14,57,0,14,39,0,14,40,0,13,126,0,13,39,0,14,47,0,14,14,49,0,14,9,17,16,25,0,70,131,0,76,44,26,53,13,0,47,11,9,5,0,28,3,0,30,42,0,58,26,48,32,23,52,14,48,31,44,23,60,7,5,0,16,3,0,25,34,38,16,29,61,0,34,50,5,0,51,3,0,42,39,25,25,15,0,14,60,5,3,0,22,34,31,43,57,75,48,3,0,33,93,140,3,0,72,34,50,21,0,8,41,33,0,52,22,5,0,23,39,3,0,37,118,3,0,30,115,3,0,29,25,18,5,0,100,3,0,26,63,18,18,5,0,24,32,18,0,37,28,30,35,30,9,0,20,7,0,18,5,0,24,32,18,0,37,28,30,35,30,9,0,20,7,0,18,5,0,17,3,0,42,16,0,43,18,5,0,38,81,20,7,0,27,20,0,29,22,9,7,5,0,17,3,0,53,32,33,31,36,85,0,38,74,0,54,49,30,37,71,16,67,43,9,0,45,54,7,0,121,0,35,23,54,9,0,52,31,35,68,54,7,0,53,49,33,29,66,52,7,3,0,45,86,3,0,30,69,3,0,20,39,3,0,32,38,0,66,18,16,5,3,0,33,34,19,5,0,47,16,0,65,19,5,0,22,95,5,0,16,3,0,64,25,36,44,7,50,3,0,17,30,50,0,56,18,5,0,44,26,56,20,39,20,40,54,3,0,36,66,3,0,31,41,69,5,0,25,72,55,78,5,0,43,3,0,26,73,67,5,0,34,0,56,0,63,20,45,52,3,0,37,43,129,0,32,78,5,0,25,3,0,40,34,52,0,25,56,5,0,66,3,0,37,45,39,85,12,21,66,5,0,58,0,23,59,5,0,34,72,57,59,3,0,37,37,67,58,47,22,0,67,38,20,59,7,0,32,7,21,59,3,0,21,42,41,0,9,18,15,38,5,3,0,16,40,29,0,9,18,15,36,5,3,0,29,71,3,0,32,60,3,0,25,53,3,0,25,32,11,32,7,3,0,23,34,82,0,23,56,5,0,49,3,0,41,35,37,104,19,95,19,54,3,0,24,34,34,19,73,22,50,3,0,61,37,0,18,84,5,0,23,37,60,24,12,40,34,44,28,24,5,0,56,3,0,49,33,25,39,33,37,12,24,5,0,24,40,34,44,28,24,12,23,5,0,56,3,0,50,38,37,71,20,58,0,93,75,5,0,43,21,62,3,0,33,69,3,0,28,118,3,0,36,34,31,20,0,27,30,5,0,43,20,62,3,0,18,37,20,23,15,3,0,25,58,57,52,23,3,0,17,37,23,0,51,20,12,25,23,5,3,0,27,34,13,5,0,36,13,0,32,21,19,5,0,42,26,16,30,64,0,16,30,52,0,16,69,28,39,59,11,0,16,42,52,0,17,68,0,16,11,47,75,13,11,7,7,3,0,33,77,3,0,42,24,21,9,59,0,28,39,31,11,0,16,9,0,20,28,44,38,27,28,24,47,28,32,61,9,0,14,0,14,63,5,3,0,41,20,22,105,55,9,0,14,0,18,57,32,58,9,0,14,0,23,85,56,9,0,14,0,20,47,32,70,58,66,11,9,0,14,0,23,85,64,9,0,14,0,18,85,56,9,0,14,5,3,0,31,15,53,18,18,5,0,36,3,0,59,26,23,5,0,72,45,47,56,57,38,71,22,18,7,66,0,15,23,5,0,54,3,0,26,34,64,22,97,8,0,35,58,5,0,20,65,3,0,26,54,3,0,30,50,44,3,0,55,38,41,22,25,25,0,39,26,98,45,35,35,0,80,67,7,5,0,42,44,73,0,48,54,0,30,35,7,0,58,43,43,0,74,72,7,0,25,56,5,0,28,35,5,0,15,3,0,60,25,70,5,0,168,0,68,42,13,5,0,78,72,0,25,71,15,7,5,0,59,3,0,37,32,64,12,54,5,3,0,37,27,75,81,7,7,3,0,42,46,20,3,0,27,47,0,42,53,5,0,16,3,0,60,58,44,18,69,42,71,5,0,31,0,60,20,26,20,7,0,56,18,5,0,25,31,52,58,92,0,29,32,11,9,0,58,27,58,0,28,50,50,30,11,0,41,74,60,48,0,44,45,13,0,78,56,95,50,26,11,9,0,26,9,0,33,50,7,0,32,5,0,74,3,0,27,25,60,49,47,20,9,0,27,45,7,5,0,34,3,0,58,106,64,29,0,58,0,19,37,14,57,7,0,46,26,73,5,0,72,3,0,64,0,28,0,21,30,0,80,35,0,98,33,20,33,7,0,68,57,7,5,0,47,0,141,84,5,0,22,3,0,21,25,18,0,70,33,20,14,34,7,0,61,30,26,49,23,59,40,24,33,39,23,67,12,66,20,33,14,34,7,0,37,5,3,0,21,66,3,0,34,33,35,18,26,39,17,5,0,26,45,18,69,32,5,0,48,3,0,44,33,37,0,31,38,20,35,55,7,5,0,58,3,0,25,68,3,0,41,39,41,49,7,0,32,7,3,0,29,70,3,0,46,114,73,0,52,43,20,20,0,57,77,9,0,54,14,85,7,6,0,25,64,12,41,5,3,0,68,54,0,14,31,0,28,69,7,0,33,96,7,0,27,68,7,0,28,69,7,0,13,5,0,57,75,5,0,26,33,65,7,5,0,75,3,0,46,34,47,0,50,70,5,0,49,69,5,3,0,40,102,62,3,0,34,49,48,3,0,67,64,83,5,0,89,0,23,25,76,7,0,18,5,0,52,23,3,0,44,58,0,23,27,34,5,0,25,64,37,65,67,5,0,16,3,0,32,38,41,46,0,88,85,5,0,20,0,45,55,5,0,23,55,5,0,135,31,5,0,35,63,33,5,0,23,3,0,47,65,13,5,0,99,59,61,3,0,38,41,27,5,0,49,41,3,0,28,44,0,56,77,5,0,42,13,11,15,178,5,0,42,3,0,35,24,65,5,0,29,90,5,0,44,49,3,0,94,59,0,42,78,5,0,77,70,5,0,63,101,3,0,67,59,63,74,3,0,48,48,69,55,3,0,25,32,0,44,61,5,0,34,65,5,3,0,36,59,61,43,3,0,45,59,61,52,3,0,26,33,0,89,27,5,0,49,0,15,36,37,5,3,0,49,25,53,5,0,63,3,0,29,69,0,14,12,17,0,71,33,72,38,13,15,21,57,0,79,22,7,5,0,67,45,5,0,23,40,42,39,0,52,51,0,119,16,7,0,104,62,7,0,43,18,14,0,41,76,24,5,0,15,37,77,48,5,0,46,33,22,5,0,21,35,76,24,5,0,59,38,27,5,0,63,40,83,137,3,0,38,20,0,171,62,5,3,0,40,51,41,12,56,5,3,0,20,25,45,73,66,26,9,33,0,27,56,38,7,5,0,34,3,0,39,23,94,60,7,0,28,5,0,49,42,33,17,3,0,33,24,34,61,0,33,20,0,14,51,5,3,0,37,24,34,73,0,33,47,0,37,69,0,28,33,29,68,20,0,14,47,5,3,0,52,35,28,33,29,37,68,20,0,14,47,5,3,0,48,21,0,24,34,15,0,33,70,15,0,28,29,148,79,16,9,0,77,15,0,33,69,15,0,14,59,15,5,3,0,22,30,14,42,0,14,40,5,3,0,38,25,56,0,27,62,44,20,7,0,44,5,0,52,3,0,30,94,18,12,39,5,3,0,19,51,3,0,21,71,3,0,30,50,0,115,80,5,0,16,3,0,26,28,24,36,7,0,24,36,7,5,0,40,3,0,18,11,10,19,0,22,26,26,29,26,26,5,3,0,30,47,31,26,0,26,36,55,16,0,30,31,51,57,18,75,11,0,16,7,5,0,48,3,0,29,57,97,27,3,0,28,25,65,5,0,42,3,0,27,59,3,0,29,69,3,0,41,25,87,61,5,0,55,3,0,45,70,61,33,71,55,3,0,27,48,49,0,15,34,35,5,0,17,3,0,26,60,39,0,9,18,15,56,5,3,0,29,58,49,0,9,45,15,54,5,3,0,36,25,27,48,40,42,29,82,20,54,7,12,32,5,3,0,24,46,0,26,85,0,20,15,13,19,179,7,5,0,18,3,0,30,44,25,3,0,33,55,3,0,11,45,41,5,0,25,3,0,19,45,41,5,0,33,3,0,73,39,75,54,5,0,30,87,3,0,90,47,83,59,5,0,35,104,3,0,80,56,57,37,18,33,33,31,0,32,45,0,34,48,0,58,34,29,45,36,16,31,36,9,63,34,43,14,32,27,7,61,30,40,5,0,55,118,5,0,33,35,59,56,0,54,92,5,0,30,62,5,0,19,75,5,3,0,3,0,46,50,27,60,34,26,36,18,61,46,61,23,56,5,3,0,41,76,37,68,3,0,26,74,35,5,0,48,3,0,19,84,3,0,21,86,3,0,27,66,3,0,22,84,3,0,19,67,3,0,22,84,36,18,5,0,44,3,0,18,31,18,5,0,33,19,5,0,30,39,0,33,18,5,0,17,3,0,29,64,44,3,0,40,80,58,5,0,25,24,62,18,47,55,5,0,21,26,53,3,0,16,85,3,0,21,86,3,0,45,70,16,30,40,60,0,22,63,30,46,23,69,43,14,69,7,12,55,5,0,31,104,39,3,0,21,60,61,0,52,27,25,76,61,5,0,43,39,37,77,35,3,0,30,25,41,0,52,93,22,9,7,5,0,44,3,0,42,56,18,5,0,64,3,0,21,11,16,13,0,50,88,5,0,28,33,3,0,21,60,61,25,0,52,73,23,56,5,0,56,34,57,36,0,23,69,64,5,0,30,43,21,54,3,0,23,91,3,0,3,0,59,22,25,48,36,18,0,47,64,61,50,0,29,28,9,7,0,40,5,3,0,19,72,3,0,3,0,45,117,52,59,28,32,58,12,44,0,40,21,7,0,39,58,23,9,7,0,18,5,5,1,49,41,32,32,12,29,5,5,0,40,29,3,0,14,1,66,37,54,35,41,50,89,5,0,100,0,41,296,61,69,5,3,0,71,67,3,0,80,76,3,0,47,78,0,49,76,116,5,0,69,24,8,0,30,47,84,7,0,46,83,7,0,84,0,47,69,151,7,0,52,162,7,59,144,5,3,0,47,5,51,89,7,0,105,0,62,186,7,5,3,0,146,162,3,0,89,124,43,16,3,1,22,9,6,7,13,14,14,2,51,0,24,23,28,17,15,35,36,37,33,32,14,19,16,16,40,23,21,2,27,21,0,50,79,3,0,17,1,0,47,105,2,0,36,37,34,0,34,0,117,58,0,18,50,124,63,79,9,14,77,7,5,0,24,24,27,26,31,25,14,0,30,36,0,94,27,0,42,36,69,0,123,60,11,9,0,14,0,28,45,14,0,27,9,43,36,36,40,16,9,0,29,35,127,14,0,34,36,73,9,0,40,29,44,14,0,37,48,14,5,0,16,3,0,57,39,131,40,58,40,12,37,5,3,0,55,30,0,14,37,0,66,14,75,34,32,38,49,0,138,37,9,0,31,61,9,0,14,7,5,0,35,30,0,16,38,0,41,43,9,7,5,0,20,3,0,33,24,24,27,26,31,25,20,0,30,9,50,53,124,13,9,0,28,45,0,27,48,0,29,94,0,34,37,0,37,50,0,30,38,26,0,14,21,5,3,0,51,20,3,0,55,57,0,34,70,49,7,5,3,0,54,34,16,99,50,3,0,22,34,16,44,48,3,0,22,30,13,9,40,22,61,55,9,0,13,45,5,0,34,3,0,70,20,21,0,30,18,22,14,24,7,0,41,24,35,14,34,78,48,27,14,14,30,0,61,84,9,0,32,49,9,0,76,7,5,0,16,3,0,34,16,43,34,48,3,0,26,34,11,11,22,14,19,0,22,49,12,35,5,0,24,80,16,3,0,55,42,44,73,0,28,35,5,0,15,3,0,39,17,3,0,47,36,0,80,77,68,35,54,21,48,54,3,0,125,24,24,9,17,16,19,0,142,147,11,0,29,41,62,20,37,13,11,0,53,70,11,0,43,66,11,0,16,9,0,30,40,78,9,0,14,0,27,43,106,110,9,0,14,0,26,43,21,111,11,9,0,14,0,31,83,14,0,25,81,14,0,37,95,14,0,14,9,141,9,5,3,0,31,91,82,5,3,0,30,25,47,59,14,48,7,5,3,0,25,58,3,0,36,53,3,0,1,0,199,43,61,104,13,5,0,25,66,0,31,21,59,15,7,0,26,34,55,56,11,16,62,9,7,0,27,5,3,0,48,86,3,0,19,30,21,40,0,27,24,5,0,37,40,36,0,30,32,5,0,16,3,0,52,21,85,5,0,80,3,0,44,38,41,60,0,25,56,32,0,28,74,7,0,46,57,5,0,16,3,0,67,96,3,0,64,93,3,0,64,25,0,159,3,0,57,38,41,0,33,36,37,0,29,69,9,0,20,7,5,0,28,0,30,34,12,51,33,5,0,11,10,19,0,49,53,5,0,63,0,25,65,5,0,45,56,40,31,0,27,50,0,58,47,9,0,62,51,9,14,25,7,0,52,18,43,59,37,60,5,0,16,3,0,46,38,41,57,56,0,60,18,5,0,80,3,0,67,23,56,23,55,22,47,60,5,0,16,3,0,49,97,3,0,37,38,41,57,68,0,60,18,5,0,58,3,0,58,35,48,13,13,15,0,95,68,7,0,51,5,0,31,0,75,45,0,27,24,48,0,54,24,11,0,64,9,0,66,25,41,47,35,0,23,45,9,0,20,0,62,29,14,66,95,11,9,0,57,94,39,0,87,86,9,0,75,7,5,0,16,3,0,34,38,41,0,17,14,71,22,55,46,15,0,23,55,70,102,15,0,117,15,0,24,62,56,15,9,0,14,55,5,3,0,38,38,41,128,3,0,23,20,0,11,11,19,41,0,117,101,5,0,56,55,5,0,16,3,0,36,25,88,5,3,0,50,38,41,42,0,43,18,55,59,18,5,0,34,34,0,41,39,25,0,27,46,7,0,38,18,55,60,0,42,34,0,40,61,56,67,9,7,0,20,61,56,7,5,0,69,0,18,13,12,21,138,0,51,76,51,7,5,0,16,3,0,50,17,56,55,5,0,38,41,61,76,0,75,56,39,26,27,48,18,55,5,0,16,3,0,44,38,41,57,57,0,60,18,5,0,58,3,0,54,19,33,55,17,6,0,8,75,36,26,0,16,3,0,60,11,10,19,0,34,70,39,81,5,0,25,0,22,55,26,20,7,0,50,18,5,0,37,93,12,35,0,49,85,14,26,20,7,5,3,0,68,54,23,29,0,19,45,21,33,34,62,7,0,73,46,12,49,5,0,36,31,63,12,55,5,3,0,55,54,23,16,41,22,102,3,0,78,72,35,45,16,52,23,0,32,55,51,5,0,36,31,5,0,19,61,12,135,5,0,63,0,77,24,47,34,96,12,34,62,36,7,0,39,5,0,66,16,3,0,52,67,3,0,66,54,20,42,0,36,69,5,0,61,3,0,30,208,3,0,40,40,40,9,52,50,11,9,7,0,69,178,14,43,45,74,11,9,7,5,0,89,3,0,107,20,21,80,50,0,30,18,22,14,24,0,32,108,95,11,0,29,82,11,0,22,16,9,7,0,86,5,0,74,16,3,0,27,56,3,0,49,20,0,49,20,131,0,29,49,5,0,39,59,5,0,16,3,0,21,38,41,80,3,0,38,13,11,10,19,0,19,14,33,0,14,32,20,0,29,52,9,0,30,79,9,0,47,0,14,32,20,55,0,14,9,55,9,0,14,14,9,28,59,9,0,15,58,0,15,57,0,15,58,0,15,57,0,14,39,0,14,46,0,14,47,0,14,9,78,69,9,0,13,13,9,81,9,0,13,9,74,9,0,13,13,9,82,9,0,13,9,76,9,0,14,50,0,14,31,0,14,32,34,44,0,14,42,0,14,14,41,0,14,9,34,22,29,62,0,51,59,18,74,11,9,0,15,9,92,41,9,0,14,9,65,9,0,14,9,65,9,0,14,14,14,9,84,0,29,58,18,36,11,9,0,14,9,76,0,69,64,18,18,36,11,9,0,14,38,108,48,11,0,78,53,44,0,82,19,18,27,0,30,57,26,83,49,52,83,22,26,15,37,57,66,13,11,0,75,24,84,11,0,20,16,34,9,0,5,3,0,70,78,0,23,39,41,23,23,33,52,12,30,5,3,0,37,34,35,38,16,75,3,0,62,79,19,0,37,51,14,36,7,0,60,39,66,16,60,9,7,0,36,45,12,99,5,3,0,67,27,18,9,54,49,14,9,0,19,32,0,14,74,5,3,0,38,71,44,26,0,39,74,5,0,20,50,16,3,0,26,39,0,18,46,5,0,25,16,40,27,0,18,40,36,28,12,36,5,0,34,49,3,0,16,34,16,0,98,60,81,60,5,0,63,61,5,0,42,3,0,22,34,133,34,16,46,48,3,0,33,34,16,0,52,81,18,0,27,42,51,26,7,0,56,5,0,36,3,0,47,21,47,47,0,61,102,5,0,49,3,0,33,75,16,0,32,27,84,7,0,36,5,0,52,3,0,41,43,77,23,16,39,3,0,29,34,54,3,0,29,53,3,0,30,54,3,0,29,53,3,0,30,54,3,0,29,65,33,29,16,3,0,30,34,23,16,51,3,0,22,34,16,48,3,0,50,38,41,12,16,52,72,80,45,50,43,46,24,55,21,20,27,0,29,18,22,14,119,0,29,48,16,9,7,0,27,52,55,39,108,37,14,14,94,7,5,0,46,49,20,66,74,57,0,100,47,34,60,23,5,0,32,0,27,47,5,0,64,50,58,46,0,30,59,33,49,59,12,24,5,0,55,48,49,73,17,5,0,65,37,64,27,3,0,28,38,3,0,20,23,18,5,3,0,44,16,3,0,25,34,16,0,25,76,18,68,0,66,70,7,0,22,5,0,31,3,0,18,41,0,40,78,51,77,30,72,5,0,33,50,3,0,27,23,42,34,28,12,26,5,3,0,34,11,12,10,11,19,32,101,0,25,22,75,7,5,0,34,39,36,18,72,63,6,23,16,45,110,16,3,0,27,34,26,53,27,0,26,62,38,69,5,0,52,3,0,31,34,3,0,68,19,42,5,0,80,50,41,21,34,25,16,0,32,18,22,14,24,0,32,72,16,9,7,0,15,0,22,43,14,65,71,7,0,86,68,7,0,27,47,7,0,33,5,0,16,74,34,0,20,29,26,32,5,0,39,3,0,34,129,3,0,48,24,0,25,41,81,7,0,30,47,7,5,0,34,24,27,17,17,0,25,47,32,5,0,28,35,22,5,0,24,0,30,34,37,5,0,35,47,47,45,0,78,31,0,65,23,52,35,37,7,0,51,26,52,28,0,29,29,81,22,9,0,37,7,5,0,115,16,3,0,45,41,3,0,40,25,3,0,35,16,0,70,61,31,0,39,34,56,14,56,7,5,0,125,62,5,3,0,72,21,79,41,18,5,0,51,39,27,25,88,5,3,0,81,27,0,23,145,53,5,0,59,73,0,22,91,34,49,0,42,59,66,11,16,81,9,0,91,14,47,7,0,28,53,5,3,0,113,177,33,16,3,0,27,22,27,48,21,12,13,13,13,21,14,0,45,41,14,23,19,50,18,0,19,49,18,0,19,49,18,0,19,50,18,0,19,13,57,78,44,20,13,0,18,36,9,7,0,21,0,25,30,7,5,0,20,3,0,31,19,27,27,3,0,104,37,35,41,132,65,51,54,26,22,16,3,0,69,18,42,5,0,80,50,34,16,83,74,82,3,0,65,51,46,0,49,24,5,0,32,37,72,0,17,47,70,5,0,46,39,26,22,66,60,3,0,62,73,3,0,60,50,32,3,0,62,59,53,0,23,42,60,12,42,42,29,73,74,63,0,50,125,75,9,0,66,134,0,43,106,9,9,28,36,5,0,32,3,0,29,56,56,5,0,16,3,0,81,35,0,38,134,5,3,0,71,20,21,0,30,18,22,14,24,0,32,29,82,11,0,22,16,9,7,0,73,5,0,16,3,0,72,12,0,25,24,71,7,0,17,32,50,53,111,32,46,0,30,82,7,0,36,18,57,12,83,5,0,15,3,0,28,34,63,45,3,0,32,21,35,47,3,0,37,13,11,12,10,19,0,43,30,12,30,5,0,67,0,18,27,31,7,12,65,5,0,16,16,3,0,63,27,13,5,0,35,13,5,0,27,36,67,15,7,34,36,67,15,44,80,15,14,109,7,38,55,61,15,7,5,0,43,66,13,5,0,123,0,44,71,5,3,0,20,45,0,75,18,5,0,17,3,0,34,54,115,0,23,62,5,0,76,36,48,14,38,7,5,0,32,55,5,0,52,3,0,22,50,11,10,19,156,3,0,16,34,101,16,27,24,0,40,32,0,32,16,17,15,16,15,15,16,16,33,0,16,45,7,5,0,31,29,52,3,0,52,45,23,10,47,79,7,5,3,0,42,56,58,5,3,0,64,58,0,44,34,63,12,56,38,66,5,3,0,33,30,30,81,0,24,20,0,14,21,5,3,0,48,25,76,63,62,5,3,0,37,59,31,34,25,6,0,9,24,15,55,5,3,0,48,45,23,10,61,33,36,27,8,0,11,26,17,57,7,12,24,5,3,0,44,60,32,0,9,24,15,56,5,3,0,24,48,45,0,25,45,0,11,26,17,30,7,5,0,22,3,0,27,48,46,0,27,46,0,11,26,17,30,7,5,0,22,3,0,28,46,3,0,45,65,3,0,43,103,3,0,33,38,41,51,80,49,92,74,15,3,0,27,38,34,16,16,53,30,37,0,9,58,15,21,5,0,16,53,3,0,42,0,1,0,19,14,2,21,16,2,28,29,37,31,41,53,0,44,43,28,11,10,14,0,35,7,27,17,16,18,18,15,20,39,74,41,39,23,25,28,32,30,25,40,25,30,21,33,27,14,14,19,9,0,36,17,16,18,18,15,20,41,79,25,0,47,36,41,25,27,32,34,37,15,18,36,40,25,27,32,34,37,15,11,0,81,0,28,41,80,71,34,41,25,40,23,46,29,15,18,41,80,71,34,41,26,40,23,46,29,15,11,0,53,39,33,32,36,38,41,24,17,19,9,7,42,5,3,0,16,1,0,48,32,46,40,0,30,64,5,0,41,3,0,74,36,59,50,0,104,69,58,67,7,5,0,47,3,0,25,27,33,43,32,45,51,79,58,48,53,72,47,21,3,0,31,26,18,5,0,34,34,16,57,3,0,18,33,19,5,0,38,3,0,25,39,45,0,41,18,5,0,30,36,0,36,49,0,55,79,0,55,23,9,7,0,18,5,0,17,3,0,37,25,33,5,0,57,3,0,44,36,34,13,0,30,21,19,5,0,24,14,60,0,14,61,0,14,49,0,14,43,0,14,44,0,14,51,0,22,34,71,63,71,11,9,0,66,0,14,39,43,0,14,43,0,14,47,0,14,47,0,14,46,0,14,44,0,14,14,40,0,40,83,9,0,50,0,14,46,0,14,45,0,13,33,0,14,46,0,14,9,61,0,69,18,11,9,0,14,9,71,79,11,0,22,21,0,33,44,0,111,44,13,18,44,0,261,44,13,11,0,45,24,9,0,14,9,39,26,96,13,0,24,69,11,9,5,0,39,40,0,85,72,12,55,5,3,0,33,70,80,5,3,0,24,87,0,28,35,59,75,5,3,0,29,26,3,0,32,101,0,28,46,47,5,0,25,25,26,7,0,106,73,7,49,83,5,3,0,20,62,34,16,0,39,41,40,43,15,0,25,38,24,14,43,0,30,60,29,53,32,59,9,7,0,64,38,12,51,5,0,46,3,0,38,23,46,25,68,44,53,5,0,16,3,0,46,16,0,34,24,12,42,23,5,0,44,83,3,0,38,10,0,52,39,0,63,72,41,7,5,0,41,97,5,3,0,32,16,21,54,3,0,27,20,39,20,15,3,0,26,16,38,89,28,20,45,17,53,3,0,27,16,38,21,0,58,40,5,0,34,20,0,25,25,33,7,0,39,5,0,48,55,0,52,36,52,18,38,51,0,88,52,7,0,25,33,7,0,39,5,0,50,55,65,42,0,18,26,55,83,57,7,5,0,36,36,76,40,50,12,60,5,0,23,31,5,0,37,3,0,62,16,114,3,0,26,16,45,48,69,48,3,0,30,80,64,5,0,16,0,34,27,12,45,23,5,0,52,3,0,30,16,53,34,19,40,34,12,0,43,45,38,52,43,28,20,0,21,44,16,27,88,11,0,28,26,9,0,24,14,18,57,16,28,9,7,5,0,22,48,16,28,52,3,0,29,16,0,39,73,5,0,43,21,51,3,0,27,42,47,54,56,17,3,0,27,16,35,24,0,25,38,18,0,27,24,52,24,14,28,38,7,0,97,24,60,5,0,61,0,43,61,5,0,49,3,0,33,16,37,21,56,3,0,29,16,45,38,92,28,51,3,0,28,28,61,5,0,16,47,91,50,3,0,29,16,51,3,0,57,44,37,76,7,5,0,90,0,61,41,0,48,48,26,14,14,7,5,0,28,22,17,38,7,119,28,22,53,3,0,40,27,21,56,3,0,86,34,0,26,38,5,0,19,0,32,36,5,0,74,0,32,24,5,0,51,3,0,26,131,3,0,73,32,44,117,3,0,81,40,39,35,0,30,55,0,46,42,55,37,0,82,42,33,11,0,19,9,0,34,40,7,0,22,5,0,26,57,5,0,21,28,5,0,16,3,0,24,21,26,63,26,65,20,90,22,28,49,3,0,35,35,16,0,18,49,12,32,5,0,190,98,51,67,5,0,21,83,20,90,22,28,80,3,0,31,48,54,21,0,14,36,34,0,25,95,14,77,30,113,11,108,117,9,0,25,7,0,69,31,5,0,16,3,0,26,38,121,3,0,67,51,66,71,37,0,47,84,5,0,34,0,22,48,5,0,72,46,37,65,0,23,39,5,0,42,51,104,7,26,22,0,45,45,5,0,66,16,3,0,30,91,3,0,45,20,63,71,32,3,0,37,25,182,3,0,45,16,30,40,29,53,31,66,87,3,0,21,61,3,0,19,26,3,0,34,123,3,0,44,28,19,28,19,6,24,39,24,19,51,30,27,38,86,11,0,19,9,0,29,49,19,9,0,40,0,32,41,65,26,9,0,56,0,97,71,9,7,7,34,16,0,28,74,5,0,27,51,3,0,51,43,0,31,28,29,30,23,28,74,18,40,26,28,21,26,57,18,5,0,48,17,3,0,46,44,0,19,65,15,7,0,24,54,15,7,5,0,74,3,0,68,32,33,30,31,32,38,29,49,0,23,29,44,41,0,26,75,15,7,0,54,81,7,0,79,13,5,0,87,38,51,53,52,0,31,29,0,22,76,15,7,0,70,36,0,26,42,0,68,68,9,0,79,69,9,0,36,48,7,0,100,40,22,62,14,54,7,82,50,39,0,34,49,7,0,29,40,41,54,0,22,81,14,56,79,9,0,87,7,124,50,29,40,47,0,22,76,14,56,82,9,0,82,7,0,49,41,22,62,14,54,7,12,24,5,3,0,33,11,11,12,11,19,0,83,55,5,0,23,36,70,7,0,42,23,17,5,0,42,3,0,44,27,0,69,40,27,32,34,64,26,22,34,64,0,88,67,5,3,0,38,98,70,5,0,55,3,0,45,54,30,109,3,0,94,127,3,0,67,106,30,233,54,3,0,48,94,3,0,47,0,35,32,21,57,3,0,28,32,21,50,3,0,26,48,53,32,70,32,26,22,3,0,73,45,39,0,24,59,7,12,39,23,14,62,7,5,3,0,25,71,3,0,21,67,58,66,82,85,49,0,35,40,39,59,5,0,69,0,129,37,5,0,23,0,42,29,49,12,62,5,0,60,57,61,5,0,23,61,41,63,5,0,35,3,0,23,24,3,0,42,42,45,41,54,79,18,5,0,17,3,0,44,32,49,94,18,56,83,18,5,0,17,3,0,41,24,49,54,72,25,30,0,47,29,7,0,18,5,0,17,3,0,37,46,27,25,0,47,29,7,0,59,18,5,0,17,3,0,21,45,39,114,3,0,34,34,43,0,36,18,0,20,20,7,0,82,32,47,32,105,74,7,0,34,47,66,81,12,49,23,17,5,3,0,32,37,3,0,30,11,10,19,0,34,66,21,7,0,70,15,24,29,0,79,55,23,9,7,33,19,5,0,39,60,0,94,18,5,0,36,86,58,5,0,17,3,0,33,33,45,29,59,0,23,37,7,24,24,5,0,21,3,0,34,11,10,19,0,22,64,0,41,75,81,16,22,9,7,5,0,110,3,0,52,21,22,52,0,50,33,0,47,0,217,87,11,9,61,50,17,20,24,95,62,0,43,19,19,26,0,46,106,20,75,49,13,11,9,36,110,41,56,52,69,68,50,11,9,7,5,0,101,0,42,77,5,3,0,26,37,50,47,43,36,7,46,41,19,38,9,7,48,40,45,43,51,39,5,3,0,37,45,126,5,0,39,3,0,41,21,21,19,0,26,18,22,14,24,31,7,0,53,39,36,48,93,5,0,17,3,0,73,33,51,26,53,32,50,5,0,52,3,0,27,26,63,58,0,22,122,7,0,20,5,0,38,3,0,21,25,0,27,69,52,76,71,32,5,0,43,57,0,21,35,12,59,0,23,37,7,5,0,21,54,3,0,23,44,32,3,0,34,46,3,0,72,45,70,59,3,0,24,21,32,0,8,26,14,7,0,36,39,0,35,95,7,0,29,0,28,52,14,46,7,0,22,0,29,91,7,0,61,47,23,27,0,17,3,0,32,58,44,18,12,56,18,5,0,21,33,0,8,36,44,0,37,98,7,0,42,99,7,0,36,22,0,29,91,7,0,61,47,23,27,0,17,3,0,32,65,44,18,12,56,18,5,0,16,44,16,17,3,0,42,46,115,18,5,0,17,3,0,39,25,41,18,32,112,18,5,0,17,3,0,36,21,19,0,26,18,22,14,27,83,9,0,24,31,7,0,41,47,53,56,162,44,5,3,0,90,33,47,12,13,16,20,0,29,95,7,0,73,0,29,52,7,5,0,70,57,3,0,22,64,3,0,1,0,38,31,34,26,27,28,52,43,3,0,21,24,3,0,11,30,34,37,21,23,38,36,16,3,0,1,0,30,30,0,33,74,65,3,0,19,1,0,32,15,0,88,41,0,9,36,47,33,0,37,19,7,0,47,13,40,51,28,14,42,7,0,17,27,11,38,49,27,0,24,5,10,45,3,1,42,43,0,34,31,3,0,32,1,0,57,24,0,59,74,3,0,20,1,0,48,0,36,19,0,43,37,42,3,0,33,1,0,28,0,45,90,35,34,0,13,17,0,38,38,5,0,32,3,0,13,1,0,22,42,28,33,0],"data":{"version":3,"file":"index.js","sources":["file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/util/whitespace.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/util/location.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/base.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/comments.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/error-codes.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/error-message.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/error.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/estree.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/tokenizer/context.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/tokenizer/types.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/util/identifier.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/util/scopeflags.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/util/scope.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/flow/scope.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/tokenizer/state.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/tokenizer/index.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/util/class-scope.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/util/expression-scope.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/util/production-parameter.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/util.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/node.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/flow/index.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/jsx/xhtml.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/jsx/index.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/typescript/scope.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/typescript/index.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/placeholders.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugins/v8intrinsic.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/plugin-utils.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/options.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/lval.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/expression.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/statement.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/parser/index.js","file:///E:/program/%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/vite-ts-module/node_modules/.pnpm/@babel+parser@7.16.7/node_modules/@babel/parser/src/index.js"],"sourcesContent":["// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column } = position;\n  return new Position(line, column + columnOffset);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    return this.plugins.get(plugin)?.[name];\n  }\n}\n\nexport type PluginConfig = string | [string, { [string]: any }];\n","// @flow\n\n/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number,\n  end: number,\n  comments: Array<Comment>,\n  leadingNode: Node | null,\n  trailingNode: Node | null,\n  containingNode: Node | null,\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Node, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Node, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(node: Node, comments: Array<Comment>) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Node} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Node,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaning commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterepret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n","// @flow\n\nexport const ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ErrorCode = $Values<typeof ErrorCodes>;\n","// @flow\n\nimport { makeErrorTemplates, ErrorCodes } from \"./error\";\n\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = makeErrorTemplates(\n  {\n    AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n    ArgumentsInClass:\n      \"'arguments' is only allowed in functions and class methods.\",\n    AsyncFunctionInSingleStatementContext:\n      \"Async functions can only be declared at the top level or inside a block.\",\n    AwaitBindingIdentifier:\n      \"Can not use 'await' as identifier inside an async function.\",\n    AwaitBindingIdentifierInStaticBlock:\n      \"Can not use 'await' as identifier inside a static block.\",\n    AwaitExpressionFormalParameter:\n      \"'await' is not allowed in async function parameters.\",\n    AwaitNotInAsyncContext:\n      \"'await' is only allowed within async functions and at the top levels of modules.\",\n    AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n    BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n    BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n    BadSetterRestParameter:\n      \"A 'set' accesor function argument must not be a rest parameter.\",\n    ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n    ConstructorClassPrivateField:\n      \"Classes may not have a private field named '#constructor'.\",\n    ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n    ConstructorIsAsync: \"Constructor can't be an async function.\",\n    ConstructorIsGenerator: \"Constructor can't be a generator.\",\n    DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n    DecoratorBeforeExport:\n      \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n    DecoratorConstructor:\n      \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n    DecoratorExportClass:\n      \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n    DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n    DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n    DeletePrivateField: \"Deleting a private field is not allowed.\",\n    DestructureNamedImport:\n      \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n    DuplicateConstructor: \"Duplicate constructor in the same class.\",\n    DuplicateDefaultExport: \"Only one default export allowed per module.\",\n    DuplicateExport:\n      \"`%0` has already been exported. Exported identifiers must be unique.\",\n    DuplicateProto: \"Redefinition of __proto__ property.\",\n    DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n    ElementAfterRest: \"Rest element must be last element.\",\n    EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n    ExportBindingIsString:\n      \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n    ExportDefaultFromAsIdentifier:\n      \"'from' is not allowed as an identifier after 'export default'.\",\n    ForInOfLoopInitializer:\n      \"'%0' loop variable declaration may not have an initializer.\",\n    ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n    ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n    GeneratorInSingleStatementContext:\n      \"Generators can only be declared at the top level or inside a block.\",\n    IllegalBreakContinue: \"Unsyntactic %0.\",\n    IllegalLanguageModeDirective:\n      \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n    IllegalReturn: \"'return' outside of function.\",\n    ImportBindingIsString:\n      'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n    ImportCallArgumentTrailingComma:\n      \"Trailing comma is disallowed inside import(...) arguments.\",\n    ImportCallArity: \"`import()` requires exactly %0.\",\n    ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n    ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n    InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n    InvalidCodePoint: \"Code point out of bounds.\",\n    InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n    InvalidDecimal: \"Invalid decimal.\",\n    InvalidDigit: \"Expected number in radix %0.\",\n    InvalidEscapeSequence: \"Bad character escape sequence.\",\n    InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n    InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n    InvalidIdentifier: \"Invalid identifier %0.\",\n    InvalidLhs: \"Invalid left-hand side in %0.\",\n    InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n    InvalidNumber: \"Invalid number.\",\n    InvalidOrMissingExponent:\n      \"Floating-point numbers require a valid exponent after the 'e'.\",\n    InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n    InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n    InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n    InvalidPropertyBindingPattern: \"Binding member expression.\",\n    InvalidRecordProperty:\n      \"Only properties and spread elements are allowed in record definitions.\",\n    InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n    LabelRedeclaration: \"Label '%0' is already declared.\",\n    LetInLexicalBinding:\n      \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n    LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n    MalformedRegExpFlags: \"Invalid regular expression flag.\",\n    MissingClassName: \"A class name is required.\",\n    MissingEqInAssignment:\n      \"Only '=' operator can be used for specifying default value.\",\n    MissingSemicolon: \"Missing semicolon.\",\n    MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n    MixingCoalesceWithLogical:\n      \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n    ModuleAttributeDifferentFromType:\n      \"The only accepted module attribute is `type`.\",\n    ModuleAttributeInvalidValue:\n      \"Only string literals are allowed as module attribute values.\",\n    ModuleAttributesWithDuplicateKeys:\n      'Duplicate key \"%0\" is not allowed in module attributes.',\n    ModuleExportNameHasLoneSurrogate:\n      \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n    ModuleExportUndefined: \"Export '%0' is not defined.\",\n    MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n    NewlineAfterThrow: \"Illegal newline after throw.\",\n    NoCatchOrFinally: \"Missing catch or finally clause.\",\n    NumberIdentifier: \"Identifier directly after number.\",\n    NumericSeparatorInEscapeSequence:\n      \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n    ObsoleteAwaitStar:\n      \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n    OptionalChainingNoNew:\n      \"Constructors in/after an Optional Chain are not allowed.\",\n    OptionalChainingNoTemplate:\n      \"Tagged Template Literals are not allowed in optionalChain.\",\n    OverrideOnConstructor:\n      \"'override' modifier cannot appear on a constructor declaration.\",\n    ParamDupe: \"Argument name clash.\",\n    PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n    PatternHasMethod: \"Object pattern can't contain methods.\",\n    // This error is only used by the smart-mix proposal\n    PipeBodyIsTighter:\n      \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n    PipeTopicRequiresHackPipes:\n      'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n    PipeTopicUnbound:\n      \"Topic reference is unbound; it must be inside a pipe body.\",\n    PipeTopicUnconfiguredToken:\n      'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n    PipeTopicUnused:\n      \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n    PipeUnparenthesizedBody:\n      \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\n\n    // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n    // are retained for backwards compatibility\n    // with the deprecated smart-mix pipe operator proposal plugin.\n    // They are subject to removal in a future major version.\n    PipelineBodyNoArrow:\n      'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n    PipelineBodySequenceExpression:\n      \"Pipeline body may not be a comma-separated sequence expression.\",\n    PipelineHeadSequenceExpression:\n      \"Pipeline head should not be a comma-separated sequence expression.\",\n    PipelineTopicUnused:\n      \"Pipeline is in topic style but does not use topic reference.\",\n    PrimaryTopicNotAllowed:\n      \"Topic reference was used in a lexical context without topic binding.\",\n    PrimaryTopicRequiresSmartPipeline:\n      'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n\n    PrivateInExpectedIn:\n      \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n    PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n    RecordExpressionBarIncorrectEndSyntaxType:\n      \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionBarIncorrectStartSyntaxType:\n      \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionHashIncorrectStartSyntaxType:\n      \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n    RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n    SloppyFunction:\n      \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n    StaticPrototype: \"Classes may not have static property named prototype.\",\n    StrictDelete: \"Deleting local variable in strict mode.\",\n    StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n    StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n    StrictFunction:\n      \"In strict mode code, functions can only be declared at top level or inside a block.\",\n    StrictNumericEscape:\n      \"The only valid numeric escape in strict mode is '\\\\0'.\",\n    StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n    StrictWith: \"'with' in strict mode.\",\n    SuperNotAllowed:\n      \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n    SuperPrivateField: \"Private fields can't be accessed on super.\",\n    TrailingDecorator: \"Decorators must be attached to a class element.\",\n    TupleExpressionBarIncorrectEndSyntaxType:\n      \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionBarIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionHashIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n    UnexpectedAwaitAfterPipelineBody:\n      'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n    UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n    UnexpectedImportExport:\n      \"'import' and 'export' may only appear at the top level.\",\n    UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n    UnexpectedLeadingDecorator:\n      \"Leading decorators must be attached to a class declaration.\",\n    UnexpectedLexicalDeclaration:\n      \"Lexical declaration cannot appear in a single-statement context.\",\n    UnexpectedNewTarget:\n      \"`new.target` can only be used in functions or class properties.\",\n    UnexpectedNumericSeparator:\n      \"A numeric separator is only allowed between two digits.\",\n    UnexpectedPrivateField: \"Unexpected private name.\",\n    UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n    UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n    UnexpectedToken: \"Unexpected token '%0'.\",\n    UnexpectedTokenUnaryExponentiation:\n      \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n    UnsupportedBind: \"Binding should be performed on object property.\",\n    UnsupportedDecoratorExport:\n      \"A decorated export must export a class declaration.\",\n    UnsupportedDefaultExport:\n      \"Only expressions, functions or classes are allowed as the `default` export.\",\n    UnsupportedImport:\n      \"`import` can only be used in `import()` or `import.meta`.\",\n    UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n    UnsupportedParameterDecorator:\n      \"Decorators cannot be used to decorate parameters.\",\n    UnsupportedPropertyDecorator:\n      \"Decorators cannot be used to decorate object literal properties.\",\n    UnsupportedSuper:\n      \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n    UnterminatedComment: \"Unterminated comment.\",\n    UnterminatedRegExp: \"Unterminated regular expression.\",\n    UnterminatedString: \"Unterminated string constant.\",\n    UnterminatedTemplate: \"Unterminated template.\",\n    VarRedeclaration: \"Identifier '%0' has already been declared.\",\n    YieldBindingIdentifier:\n      \"Can not use 'yield' as identifier inside a generator.\",\n    YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n    ZeroDigitNumericSeparator:\n      \"Numeric separator can not be used after leading 0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport const SourceTypeModuleErrorMessages = makeErrorTemplates(\n  {\n    ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n    ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  },\n  /* code */ ErrorCodes.SourceTypeModuleError,\n);\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\nimport { type ErrorCode, ErrorCodes } from \"./error-codes\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n  reasonCode?: String,\n};\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport type ErrorTemplate = {\n  code: ErrorCode,\n  template: string,\n  reasonCode: string,\n};\nexport type ErrorTemplates = {\n  [key: string]: ErrorTemplate,\n};\n\ntype SyntaxPlugin = \"flow\" | \"typescript\" | \"jsx\" | typeof undefined;\n\nfunction keepReasonCodeCompat(reasonCode: string, syntaxPlugin: SyntaxPlugin) {\n  if (!process.env.BABEL_8_BREAKING) {\n    // For consistency in TypeScript and Flow error codes\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nexport function makeErrorTemplates(\n  messages: {\n    [key: string]: string,\n  },\n  code: ErrorCode,\n  syntaxPlugin?: SyntaxPlugin,\n): ErrorTemplates {\n  const templates: ErrorTemplates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode],\n    });\n  });\n  return Object.freeze(templates);\n}\n\nexport { ErrorCodes };\nexport {\n  ErrorMessages as Errors,\n  SourceTypeModuleErrorMessages as SourceTypeModuleErrors,\n} from \"./error-message\";\n\nexport type raiseFunction = (number, ErrorTemplate, ...any) => void;\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(\n    pos: number,\n    { code, reasonCode, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    return this.raiseWithData(pos, { code, reasonCode }, template, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    { code, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      template.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ code, loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseRegExpLiteral({ pattern, flags }): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T: N.Node>(value: any) {\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n      const node = super.parseLiteral<T>(value, type);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return (propertyNode: N.EstreePropertyDefinition);\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return (propertyNode: N.EstreePropertyDefinition);\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext,\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX openning tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n","// @flow\nimport { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\n// Internally the tokenizer stores token as a number\nexport opaque type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext: ?(context: Array<TokContext>) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport const tt: { [name: string]: TokenType } = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\", { beforeExpr }),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token. When the\n  // proposal settles on a token, the others can be merged with tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2637,96,16,1070,4050,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,46,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,482,44,11,6,17,0,322,29,19,43,1269,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4152,8,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,357,0,62,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport type { ParsingError, ErrorTemplate } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn);\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, ErrorTemplate> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number,\n  value: any,\n  type: TokenType,\n  start: number,\n  end: number,\n  /* Used only in readToken_mult_modulo */\n  inType: boolean,\n};\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport ParserErrors, { Errors, type ErrorTemplate } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState } from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: ErrorTemplate | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simpified tokenizer state structure\n    // $FlowIgnore\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    // $FlowIgnore\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShift, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads tempalte continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(this.state.start, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    ++this.state.pos; // eat '`' or `}`\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start + 1, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === charCodes.graveAccent) {\n        ++this.state.pos; // eat '`'\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.templateTail, containsInvalid ? null : out);\n        return;\n      }\n      if (\n        ch === charCodes.dollarSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.leftCurlyBrace\n      ) {\n        this.state.pos += 2; // eat '${'\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.templateNonTail, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: ErrorTemplate) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(\n        this.state.start,\n        Errors.InvalidEscapedReservedWord,\n        tokenLabelName(type),\n      );\n    }\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line no-unused-vars\n  updateContext(prevType: TokenType): void {}\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { ErrorTemplate, raiseFunction } from \"../parser/error\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ ErrorTemplate> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, template: ErrorTemplate) {\n    this.errors.set(pos, template);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (template: ErrorTemplate, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, template);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(\n    pos: number,\n    template: ErrorTemplate,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((template, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, template);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\nimport {\n  isTokenType,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors, type ErrorTemplate, ErrorCodes } from \"./error\";\nimport type { ParsingError } from \"./error\";\nimport type { PluginConfig } from \"./base\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(token: TokenType, template?: ErrorTemplate): void {\n    if (!this.eatContextual(token)) this.unexpected(null, template);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message,\n      });\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: ErrorTemplate | TokenType = {\n      code: ErrorCodes.SyntaxError,\n      reasonCode: \"UnexpectedToken\",\n      template: \"Unexpected token\",\n    },\n  ): empty {\n    if (isTokenType(messageOrType)) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${tokenLabelName(\n          // $FlowIgnore: Flow does not support assertion signature and TokenType is opaque\n          messageOrType,\n        )}\"`,\n      };\n    }\n\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    // $FlowIgnore: Flow does not support assertion signature and TokenType is opaque\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  getPluginNamesFromConfigs(pluginConfigs: Array<PluginConfig>): Array<string> {\n    return pluginConfigs.map(c => {\n      if (typeof c === \"string\") {\n        return c;\n      } else {\n        return c[0];\n      }\n    });\n  }\n\n  expectPlugin(pluginConfig: PluginConfig, pos?: ?number): true {\n    if (!this.hasPlugin(pluginConfig)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: this.getPluginNamesFromConfigs([pluginConfig]) },\n        `This experimental syntax requires enabling the parser plugin: ${JSON.stringify(\n          pluginConfig,\n        )}.`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(pluginConfigs: Array<PluginConfig>, pos?: ?number): void {\n    if (!pluginConfigs.some(c => this.hasPlugin(c))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: this.getPluginNamesFromConfigs(pluginConfigs) },\n        `This experimental syntax requires enabling one of the following parser plugin(s): ${pluginConfigs\n          .map(c => JSON.stringify(c))\n          .join(\", \")}.`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParsingError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: ParsingError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto, optionalParameters } =\n      refExpressionErrors;\n    // shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0\n    const hasErrors = shorthandAssign + doubleProto + optionalParameters > -3;\n    if (!andThrow) {\n      return hasErrors;\n    } else if (hasErrors) {\n      if (shorthandAssign >= 0) {\n        this.raise(shorthandAssign, Errors.InvalidCoverInitializedName);\n      }\n      if (doubleProto >= 0) {\n        this.raise(doubleProto, Errors.DuplicateProto);\n      }\n      if (optionalParameters >= 0) {\n        this.unexpected(optionalParameters);\n      }\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssign**: track initializer `=` position\n * - **doubleProto**: track the duplicate `__proto__` key position\n * - **optionalParameters**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n  optionalParameters = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: { [key: string]: any };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // $FlowIgnore\n  NodePrototype.__clone = function (): Node {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = makeErrorTemplates(\n  {\n    AmbiguousConditionalArrow:\n      \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n    AmbiguousDeclareModuleKind:\n      \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n    AssignReservedType: \"Cannot overwrite reserved type %0.\",\n    DeclareClassElement:\n      \"The `declare` modifier can only appear on class fields.\",\n    DeclareClassFieldInitializer:\n      \"Initializers are not allowed in fields with the `declare` modifier.\",\n    DuplicateDeclareModuleExports:\n      \"Duplicate `declare module.exports` statement.\",\n    EnumBooleanMemberNotInitialized:\n      \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n    EnumDuplicateMemberName:\n      \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n    EnumInconsistentMemberValues:\n      \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n    EnumInvalidExplicitType:\n      \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidExplicitTypeUnknownSupplied:\n      \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidMemberInitializerPrimaryType:\n      \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n    EnumInvalidMemberInitializerSymbolType:\n      \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n    EnumInvalidMemberInitializerUnknownType:\n      \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n    EnumInvalidMemberName:\n      \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n    EnumNumberMemberNotInitialized:\n      \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n    EnumStringMemberInconsistentlyInitailized:\n      \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n    GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n    ImportTypeShorthandOnlyInPureImport:\n      \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n    InexactInsideExact:\n      \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n    InexactInsideNonObject:\n      \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n    InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n    InvalidNonTypeImportInDeclareModule:\n      \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n    MissingTypeParamDefault:\n      \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n    NestedDeclareModule:\n      \"`declare module` cannot be used inside another `declare module`.\",\n    NestedFlowComment:\n      \"Cannot have a flow comment inside another flow comment.\",\n    PatternIsOptional:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n    SpreadVariance: \"Spread properties cannot have variance.\",\n    ThisParamAnnotationRequired:\n      \"A type annotation is required for the `this` parameter.\",\n    ThisParamBannedInConstructor:\n      \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n    ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n    ThisParamMustBeFirst:\n      \"The `this` parameter must be the first function parameter.\",\n    ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n    TypeBeforeInitializer:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeCastInPattern:\n      \"The type cast expression is expected to be wrapped with parenthesis.\",\n    UnexpectedExplicitInexactInObject:\n      \"Explicit inexact syntax must appear at the end of an inexact object.\",\n    UnexpectedReservedType: \"Unexpected reserved type %0.\",\n    UnexpectedReservedUnderscore:\n      \"`_` is only allowed as a type argument to call or new.\",\n    UnexpectedSpaceBetweenModuloChecks:\n      \"Spaces between `%` and `checks` are not allowed here.\",\n    UnexpectedSpreadType:\n      \"Spread operator cannot appear in class or interface definitions.\",\n    UnexpectedSubtractionOperand:\n      'Unexpected token, expected \"number\" or \"bigint\".',\n    UnexpectedTokenAfterTypeParameter:\n      \"Expected an arrow function after this type parameter declaration.\",\n    UnexpectedTypeParameterBeforeAsyncArrowFunction:\n      \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n    UnsupportedDeclareExportKind:\n      \"`declare export %0` is not supported. Use `%1` instead.\",\n    UnsupportedStatementInDeclareModule:\n      \"Only declares and type imports are allowed inside declare module.\",\n    UnterminatedFlowComment: \"Unterminated flow-comment.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n  /* syntaxPlugin */ \"flow\",\n);\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloPos = this.state.start;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloPos + 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode<N.BooleanLiteralTypeAnnotation>(\n            node,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(tt._declare)) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(this.state.pos, Errors.InvalidIdentifier, fullWord);\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.PatternIsOptional);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line no-unused-vars\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(\n              specifier.start,\n              Errors.ImportBindingIsString,\n              firstIdent.value,\n            );\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(\n          specifier.start,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(tt._of)) {\n        if (!tokenIsIdentifier(this.state.type)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = makeErrorTemplates(\n  {\n    AttributeIsEmpty:\n      \"JSX attributes must only be assigned a non-empty expression.\",\n    MissingClosingTagElement:\n      \"Expected corresponding JSX closing tag for <%0>.\",\n    MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n    UnexpectedSequenceExpression:\n      \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n    UnsupportedJsxValue:\n      \"JSX value should be either an expression or a quoted JSX text.\",\n    UnterminatedJsxContent: \"Unterminated JSX contents.\",\n    UnwrappedAdjacentJSXElements:\n      \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n  /* syntaxPlugin */ \"jsx\",\n);\n/* eslint-disable sort-keys */\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(this.state.pos, {\n                code: ErrorCodes.SyntaxError,\n                reasonCode: \"UnexpectedToken\",\n                template: `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_oTag);\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport {\n  Errors,\n  makeErrorTemplates,\n  type ErrorTemplate,\n  ErrorCodes,\n} from \"../../parser/error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = makeErrorTemplates(\n  {\n    AbstractMethodHasImplementation:\n      \"Method '%0' cannot have an implementation because it is marked abstract.\",\n    AbstractPropertyHasInitializer:\n      \"Property '%0' cannot have an initializer because it is marked abstract.\",\n    AccesorCannotDeclareThisParameter:\n      \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n    AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n    ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n    ClassMethodHasReadonly:\n      \"Class methods cannot have the 'readonly' modifier.\",\n    ConstructorHasTypeParameters:\n      \"Type parameters cannot appear on a constructor declaration.\",\n    DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n    DeclareClassFieldHasInitializer:\n      \"Initializers are not allowed in ambient contexts.\",\n    DeclareFunctionHasImplementation:\n      \"An implementation cannot be declared in ambient contexts.\",\n    DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n    DuplicateModifier: \"Duplicate modifier: '%0'.\",\n    EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n    EmptyTypeArguments: \"Type argument list cannot be empty.\",\n    EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n    ExpectedAmbientAfterExportDeclare:\n      \"'export declare' must be followed by an ambient declaration.\",\n    ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n    IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n    IndexSignatureHasAbstract:\n      \"Index signatures cannot have the 'abstract' modifier.\",\n    IndexSignatureHasAccessibility:\n      \"Index signatures cannot have an accessibility modifier ('%0').\",\n    IndexSignatureHasDeclare:\n      \"Index signatures cannot have the 'declare' modifier.\",\n    IndexSignatureHasOverride:\n      \"'override' modifier cannot appear on an index signature.\",\n    IndexSignatureHasStatic:\n      \"Index signatures cannot have the 'static' modifier.\",\n    InvalidModifierOnTypeMember:\n      \"'%0' modifier cannot appear on a type member.\",\n    InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n    InvalidTupleMemberLabel:\n      \"Tuple members must be labeled with a simple identifier.\",\n    MissingInterfaceName:\n      \"'interface' declarations must be followed by an identifier.\",\n    MixedLabeledAndUnlabeledElements:\n      \"Tuple members must all have names or all not have names.\",\n    NonAbstractClassHasAbstractMethod:\n      \"Abstract methods can only appear within an abstract class.\",\n    NonClassMethodPropertyHasAbstractModifer:\n      \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n    OptionalTypeBeforeRequired:\n      \"A required element cannot follow an optional element.\",\n    OverrideNotInSubClass:\n      \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n    PatternIsOptional:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    PrivateElementHasAbstract:\n      \"Private elements cannot have the 'abstract' modifier.\",\n    PrivateElementHasAccessibility:\n      \"Private elements cannot have an accessibility modifier ('%0').\",\n    ReadonlyForMethodSignature:\n      \"'readonly' modifier can only appear on a property declaration or index signature.\",\n    ReservedArrowTypeParam:\n      \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n    ReservedTypeAssertion:\n      \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n    SetAccesorCannotHaveOptionalParameter:\n      \"A 'set' accessor cannot have an optional parameter.\",\n    SetAccesorCannotHaveRestParameter:\n      \"A 'set' accessor cannot have rest parameter.\",\n    SetAccesorCannotHaveReturnType:\n      \"A 'set' accessor cannot have a return type annotation.\",\n    StaticBlockCannotHaveModifier:\n      \"Static class blocks cannot have any modifier.\",\n    TypeAnnotationAfterAssign:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeImportCannotSpecifyDefaultAndNamed:\n      \"A type-only import can specify a default import or named bindings, but not both.\",\n    TypeModifierIsUsedInTypeExports:\n      \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n    TypeModifierIsUsedInTypeImports:\n      \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n    UnexpectedParameterModifier:\n      \"A parameter property is only allowed in a constructor implementation.\",\n    UnexpectedReadonly:\n      \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n    UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n    UnexpectedTypeCastInParameter:\n      \"Unexpected type cast in parameter position.\",\n    UnsupportedImportTypeArgument:\n      \"Argument in a type import must be a string literal.\",\n    UnsupportedParameterPropertyKind:\n      \"A parameter property may not be declared using a binding pattern.\",\n    UnsupportedSignatureParameterKind:\n      \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n  /* syntaxPlugin */ \"typescript\",\n);\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): ?T {\n      if (!tokenIsIdentifier(this.state.type)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: ErrorTemplate,\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): void {\n      const enforceOrder = (pos, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n        }\n      };\n      const incompatible = (pos, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n        }\n      };\n\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            enforceOrder(startPos, modifier, modifier, \"override\");\n            enforceOrder(startPos, modifier, modifier, \"static\");\n            enforceOrder(startPos, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          } else {\n            enforceOrder(startPos, modifier, \"static\", \"readonly\");\n            enforceOrder(startPos, modifier, \"static\", \"override\");\n            enforceOrder(startPos, modifier, \"override\", \"readonly\");\n            enforceOrder(startPos, modifier, \"abstract\", \"override\");\n\n            incompatible(startPos, modifier, \"declare\", \"override\");\n            incompatible(startPos, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: { value: number },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: { value: number },\n    ): ?(T[]) {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: { value: number },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        if (method.kind === \"get\") {\n          if (method.parameters.length > 0) {\n            this.raise(this.state.pos, Errors.BadGetterArity);\n            if (this.isThisParam(method.parameters[0])) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method.parameters.length !== 1) {\n            this.raise(this.state.pos, Errors.BadSetterArity);\n          } else {\n            const firstParameter = method.parameters[0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveOptionalParameter,\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveRestParameter,\n              );\n            }\n          }\n          if (method.typeAnnotation) {\n            this.raise(\n              method.typeAnnotation.start,\n              TSErrors.SetAccesorCannotHaveReturnType,\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node: N.TsKeywordType = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode();\n      typeParameter.name = this.tsParseTypeParameterName();\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            (node: N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node: N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(this.state.start, TSErrors.ReservedTypeAssertion);\n      }\n\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkLVal(\n          node.id,\n          \"typescript interface declaration\",\n          BIND_TS_INTERFACE,\n        );\n      } else {\n        node.id = null;\n        this.raise(this.state.start, TSErrors.MissingInterfaceName);\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(tt._enum);\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt._global:\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          default: {\n            if (tokenIsIdentifier(starttype)) {\n              return this.tsParseDeclaration(\n                nany,\n                this.state.value,\n                /* next */ true,\n              );\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || tokenIsIdentifier(this.state.type)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified = {};\n        this.tsParseModifiers(modified, [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"override\",\n          \"readonly\",\n        ]);\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      if (this.match(tt.lt)) {\n        let missingParenErrorPos;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (isOptionalCall && !this.match(tt.parenL)) {\n              missingParenErrorPos = this.state.pos;\n              this.unexpected();\n            }\n\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = isOptionalCall;\n              }\n\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (tokenIsTemplate(this.state.type)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (missingParenErrorPos) {\n          this.unexpected(missingParenErrorPos, tt.parenL);\n        }\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.match(tt.lt)) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          TSErrors.TypeImportCannotSpecifyDefaultAndNamed,\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const interfaceNode = this.startNode();\n        this.next();\n        const result = this.tsParseInterfaceDeclaration(interfaceNode);\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt._enum) {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.next(); // eat 'const'\n          this.expectContextual(tt._enum);\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ];\n      this.tsParseModifiers(\n        member,\n        modifiers,\n        /* disallowedModifiers */ undefined,\n        /* errorTemplate */ undefined,\n        /* stopOnStartOfClassStaticBlock */ true,\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n        if ((member: any).override) {\n          this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(member.start, TSErrors.OverrideNotInSubClass);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (tokenIsIdentifier(this.state.type)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(\n          this.state.start,\n          TSErrors.AbstractPropertyHasInitializer,\n          key.type === \"Identifier\" && !node.computed\n            ? key.name\n            : `[${this.input.slice(key.start, key.end)}]`,\n        );\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n\n      // $FlowIgnore\n      if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n        this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: ?N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(node.start, TSErrors.ReservedArrowTypeParam);\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (\n            /*bindingType*/ !args[0] &&\n            contextDescription !== \"parenthesized expression\" &&\n            !expr.extra?.parenthesized\n          ) {\n            this.raise(expr.start, Errors.InvalidLhs, contextDescription);\n            break;\n          }\n          this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n          return;\n        case \"TSNonNullExpression\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.match(tt.lt)) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close) {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n      } else {\n        super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.match(tt.lt)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\" && !method.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: any,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const pos = leftOfAs.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = this.parseIdentifier();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = this.parseIdentifier();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        leftOfAs = this.parseIdentifier();\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          pos,\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkLVal(node[rightOfAsKey], \"import specifier\", BIND_LEXICAL);\n      }\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { makeErrorTemplates, ErrorCodes } from \"../parser/error\";\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nconst PlaceHolderErrors = makeErrorTemplates(\n  {\n    ClassNameIsRequired: \"A class name is required.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\nimport type { PluginConfig } from \"./parser/base\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = $ReadOnlyArray<PluginConfig>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\n// This function’s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVerionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startColumn: number,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n  attachComment: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: ObjectOrClassMember, */\n  /*:: ClassMember, */\n  /*:: ObjectMember, */\n  /*:: TsNamedTypeElementBase, */\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  +parseObjPropValue: (\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => void;\n  +parsePropertyName: (\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ) => Expression | Identifier;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return node.properties.every((prop, i) => {\n          return (\n            prop.type !== \"ObjectMethod\" &&\n            (i === last || prop.type !== \"SpreadElement\") &&\n            this.isAssignable(prop)\n          );\n        });\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(prop: RestElement): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(): ObjectMember | RestElement {\n    const prop = this.startNode();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop);\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n\n    return prop;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport type { ParsingError } from \"./error\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier } from \"./node\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nconst invalidHackPipeBodies = new Map([\n  [\"ArrowFunctionExpression\", \"arrow function\"],\n  [\"AssignmentExpression\", \"assignment\"],\n  [\"ConditionalExpression\", \"conditional\"],\n  [\"YieldExpression\", \"yield\"],\n]);\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: ?boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParsingError,\n  ) {\n    refExpressionErrors.optionalParameters =\n      resultError?.pos ?? this.state.start;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n\n        if (refExpressionErrors.doubleProto >= startPos) {\n          refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n        }\n        if (refExpressionErrors.shorthandAssign >= startPos) {\n          refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line no-unused-vars\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n      const { start } = left;\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(start, Errors.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(\n                  this.state.start,\n                  Errors.PipeBodyIsTighter,\n                  this.state.value,\n                );\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(): N.Expression {\n    const { start } = this.state;\n\n    const body = this.parseMaybeAssign();\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (invalidHackPipeBodies.has(body.type) && !body.extra?.parenthesized) {\n      this.raise(\n        start,\n        Errors.PipeUnparenthesizedBody,\n        invalidHackPipeBodies.get(body.type),\n      );\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(start, Errors.PipeTopicUnused);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, Errors.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.start);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(\n          this.state.start,\n          Errors.PrivateInExpectedIn,\n          this.state.value,\n        );\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types),\n  // and if the Hack-pipes proposal is active with ^ or % as its topicToken,\n  // then the ^ or % could be the topic token (e.g., in x |> ^==y or x |> ^===y),\n  // and so we reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”,\n      // so that the following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc.column--;\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode();\n    const start = this.state.start;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, start, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: N.Node,\n    start: number,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      let nodeType;\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        // The proposal must otherwise be \"hack\",\n        // as enforced by testTopicReferenceConfiguration.\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        // The topic reference is not allowed in the current context:\n        // it is outside of a pipe body.\n        // Raise recoverable errors.\n        if (pipeProposal === \"smart\") {\n          this.raise(start, Errors.PrimaryTopicNotAllowed);\n        } else {\n          // In this case, `pipeProposal === \"hack\"` is true.\n          this.raise(start, Errors.PipeTopicUnbound);\n        }\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(\n        start,\n        Errors.PipeTopicUnconfiguredToken,\n        tokenLabelName(tokenType),\n      );\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    start: number,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(start, Errors.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(node: N.Node): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(node: N.Node, isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrors.ImportMetaOutsideModule);\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T: N.Node>(\n    value: any,\n    type: $ElementType<T, \"type\">,\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: { value: any, pattern: string, flags: string }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode<N.BooleanLiteral>(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode<N.NullLiteral>(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParameters === -1\n            ? null\n            : refExpressionErrors.optionalParameters,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(val, startPos, this.state.lastTokEnd);\n\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  // eslint-disable-next-line no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, Errors.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(\n      elemStart,\n      createPositionWithColumnOffset(this.state.startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(start + 2, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      elem,\n      elemEnd,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return elem;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssign = this.state.start;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssign === -1) {\n            refExpressionErrors.shorthandAssign = shorthandAssign;\n          }\n        } else {\n          this.raise(shorthandAssign, Errors.InvalidCoverInitializedName);\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyPos = this.state.start + 1;\n            this.raise(privateKeyPos, Errors.UnexpectedPrivateField);\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop: $FlowFixMe).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, start, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, Errors.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, Errors.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a Hack-style pipe body is parsed.\n  // The `startPos` is the starting position of the pipe body.\n\n  checkHackPipeBodyEarlyErrors(startPos: number): void {\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(startPos, Errors.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startPos` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos: number): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, Errors.PipelineTopicUnused);\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line no-unused-vars\n    prop: N.ObjectOrClassMember | N.ClassMember,\n  ): void {}\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier } from \"./node\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            // $FlowIgnore: hacky way to create token\n            startToken = new Token({\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            // $FlowIgnore: hacky way to create token\n            startToken = new Token({\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            // $FlowIgnore: hacky way to create token\n            endToken = new Token({\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            // $FlowIgnore: hacky way to create token\n            endToken = new Token({\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // $FlowIgnore: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = (stmt: any);\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrors.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(\n        node.start,\n        Errors.IllegalBreakContinue,\n        isBreak ? \"break\" : \"continue\",\n      );\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(init.start, Errors.ForOfLet);\n      } else if (\n        // `for await (async of []);` is allowed.\n        awaitAt === -1 &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(init.start, Errors.ForOfAsync);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, Errors.OverrideOnConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value, start } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(start, Errors.StaticPrototype);\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(start, Errors.ConstructorClassPrivateField);\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.exportedIdentifiers.add(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          this.state.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: any,\n    importedIsString: boolean,\n    /* eslint-disable no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { getExportedToken, tt as internalTokenTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n"],"names":["lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","constructor","line","col","column","SourceLocation","start","end","filename","identifierName","getLineInfo","input","offset","lineStart","match","lastIndex","exec","index","createPositionWithColumnOffset","position","columnOffset","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","pluginConfig","plugins","has","pluginName","pluginOptions","actualOptions","get","key","Object","keys","getPluginOption","plugin","name","setTrailingComments","node","comments","trailingComments","undefined","unshift","setLeadingComments","leadingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","i","length","CommentsParser","addComment","comment","loc","state","push","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","containingNode","finalizeComment","splice","trailingNode","commentStart","charCodeAt","type","properties","arguments","params","specifiers","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","forEach","template","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","raiseWithData","raiseOverwrite","message","replace","_","options","errorRecovery","errors","error","assign","_raise","data","errorTemplate","errorContext","err","isLookahead","superClass","parseRegExpLiteral","pattern","flags","regex","e","estreeParseLiteral","parseBigIntLiteral","value","bigInt","BigInt","bigint","String","parseDecimalLiteral","decimal","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","slice","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","parseBlockBody","args","directiveStatements","directives","map","d","body","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parsePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","id","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","startPos","refExpressionErrors","isAssignable","isBinding","toAssignable","isLHS","toAssignableObjectExpressionProp","Errors","finishCallExpression","optional","callee","attributes","toReferencedArguments","parseExport","exported","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","TokContext","token","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","ExportedTokenType","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","createToken","set","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","createKeywordLike","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","isTokenType","obj","context","pop","tc","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next","reservedWordLikeSet","canBeReservedWord","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","State","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","ct","canStartJSXElement","containsEsc","strictErrors","tokensLength","init","strictMode","sourceType","startLine","startColumn","curPosition","clone","skipArrays","val","Array","isArray","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","tokens","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lookaheadCharCode","codePointAtPos","cp","trail","setStrict","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","indexOf","skipLineComment","startSkip","ch","spaceStart","loop","attachComment","CommentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","next2","readTemplateToken","readRadixNumber","readString","readWord","fromCodePoint","str","readRegexp","escaped","content","mods","char","includes","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","Infinity","prev","Number","isNaN","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","readCodePoint","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","readTemplateContinuation","unexpected","containsInvalid","inTemplate","substr","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","keywordTypes","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","from","declarePrivateName","elementType","redefined","accessor","oldStatic","newStatic","oldKind","newKind","usePrivateName","classScope","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","UtilParser","addExtra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","assertNoSpace","messageOrType","getPluginNamesFromConfigs","pluginConfigs","c","missingPlugin","JSON","stringify","expectOnePlugin","some","join","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","hasErrors","isLiteralPropertyName","property","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","bind","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","__clone","newNode","clonePlaceholder","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","NodeUtils","resetStartLocation","resetEndLocation","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","matches","Error","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloPos","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","this","returnType","typeAnnotation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","toAssignableList","trailingComma","checkParams","parse","result","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","checkLVal","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","jsx","currentContext","abort","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","parseTopLevel","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","toUpperCase","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","afterNext","entities","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","count","entity","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsParseModifiers","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","hasOwnProperty","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","tsParseDelimitedListWorker","expectSuccess","element","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","idx","parsePropertyName","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","nodeType","tsParseArrayTypeOrHigher","tsParseTypeOperator","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","isTypeOperator","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","override","elt","pp","parameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","interfaceNode","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","modifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","parseClassPropertyAnnotation","definite","declareClassPrivateMethodInScope","typeCast","reportReservedArrowTypeParam","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","checkCommaAfterRest","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","leftOfAs","rightOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","kindKey","parseModuleExportName","PlaceHolderErrors","ClassNameIsRequired","parsePlaceholder","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","startsWith","maybeParseExportDefaultSpecifier","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","proposal","proposalList","tupleSyntaxIsHash","syntaxType","topicToken","tokenList","moduleAttributesVerionPluginOption","missingPlugins","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","getOptions","opts","unwrapParenthesizedExpression","LValParser","last","isLast","raiseRestNotLast","checkToRestConversion","arg","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","refNeedsArrowPos","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","parseDecorator","parseBindingRestProperty","parseBindingProperty","checkClashes","disallowLetBinding","strictModeChanged","elem","invalidHackPipeBodies","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","resultError","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","pipeProposal","parseTopicReference","lookaheadCh","codePointAt","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","tokenType","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","propertyName","SourceTypeModuleErrors","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","privateKeyPos","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","reservedTest","delegating","delegate","checkHackPipeBodyEarlyErrors","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","ret","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","StatementParser","interpreter","parseInterpreterDirective","stmtToDirective","isLetKeyword","endCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithAsync","isForOf","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","block","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","toString","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importSpecifier","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","generateExportedTokenTypes","internalTokenTypes","tokTypes","getParserClass","parserClassCache","pluginsFromOptions","pluginList"],"mappings":"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","sourceRoot":""},"url":null}}}